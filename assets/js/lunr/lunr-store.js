var store = [{
        "title": "Không tìm thấy trang bạn yêu cầu.",
        "excerpt":"Trang bạn yêu cầu có thể đã bị xoá hoặc di chuyển sang vị trí khác.  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/404.html",
        "teaser":null},{
        "title": "ec-cube.co",
        "excerpt":"     ec-cube.co là gì?   ec-cube.co là dịch vụ EC-CUBE phiên bản cloud được vận hành bởi Công ty Cổ phần EC-CUBE.   Việc bảo trì, vận hành hạ tầng và quản lý EC-CUBE sẽ do Công ty Cổ phần EC-CUBE đảm nhận.   ec-cube.co giúp các chủ shop và nhà phát triển tập trung vào vận hành cửa hàng và xây dựng website mà không phải lo lắng về bảo trì, vận hành server hay ứng dụng.   Thông tin hệ thống   Kiến trúc của ec-cube.co   Google Cloud Anthos Day: Track 2 - 5『Nền tảng xây dựng EC site tự do với GKE』   EC-CUBE   Mã nguồn EC-CUBE sử dụng trên ec-cube.co (4.0/4.1/4.2) được công khai tại các branch co/master, co/4.1, co/4.2. Branch 4.2 sẽ được merge định kỳ vào branch co/4.2 trong các đợt bảo trì hàng tuần.   Mã nguồn EC-CUBE đang áp dụng cho ec-cube.co (bản 4.2) có thể kiểm tra tại co/4.2-YYYYMMDD. Mã nguồn EC-CUBE đang áp dụng cho ec-cube.co (bản 4.1) có thể kiểm tra tại co/4.1-YYYYMMDD. Mã nguồn EC-CUBE đang áp dụng cho ec-cube.co (bản 4.0) có thể kiểm tra tại co/YYYYMMDD.   Middleware      Apache 2.4.x   PostgreSQL 10.x   PHP 7.4.x (EC-CUBE 4.0/4.1) / PHP 8.1.x (EC-CUBE 4.2)   Danh sách extension PHP:            Core, date, libxml, openssl, pcre, sqlite3, zlib, ctype, curl, dom, fileinfo, filter, ftp, hash, iconv, json, mbstring, SPL, PDO, session, posix, Reflection, standard, SimpleXML, pdo_sqlite, Phar, tokenizer, xml, xmlreader, xmlwriter, mysqlnd, apache2handler, exif, gd, intl, pdo_pgsql, sodium, zip, Zend OPcache           CookBook      Hướng dẫn chuyển đổi từ bản download EC-CUBE sang ec-cube.co (đang cập nhật)  ","categories": [],
        "tags": ["co","ec-cube.co"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/co",
        "teaser":null},{
        "title": "ec-cube.co Console",
        "excerpt":"  Về màn hình quản lý Console   Khi đăng nhập vào màn hình quản lý Console, bạn có thể kiểm tra thông tin môi trường và thông tin hợp đồng. Khi đăng nhập vào màn hình quản lý Console, vui lòng sử dụng trình duyệt Chrome trên máy tính.   Nếu bạn sử dụng gói Standard, bạn sẽ có thể xem và sử dụng các mục sau:      Hiển thị các mục “Môi trường kiểm thử”, “Kho Git”   Sử dụng các mục “Log”, “Môi trường kiểm thử” trong menu bên     ","categories": [],
        "tags": ["co","ec-cube.co"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/co/co_console",
        "teaser":null},{
        "title": "Hướng dẫn sử dụng thư mục Customize trên ec-cube.co",
        "excerpt":"  Mã nguồn EC-CUBE chính đang chạy trên .co là branch co/master (với 4.0), co/4.1 (với 4.1) của repository EC-CUBE. Khởi động EC-CUBE bằng các branch này và thực hiện tuỳ biến tại thư mục app/Customize.   Các bước thiết lập môi trường local   Thiết lập khoá công khai (public key)   Truy cập SSH認証鍵 để đăng ký khoá công khai. Khi đó, hãy đảm bảo bạn đăng nhập bằng tài khoản Google đã chia sẻ với EC-CUBE khi đăng ký hoặc nâng cấp gói Standard.   ※ Về cách thiết lập chi tiết, vui lòng xem liên kết “Chi tiết” trên trang trên hoặc tại đây.   Trường hợp sử dụng tài khoản Google Group   Ví dụ với các địa chỉ email sau:     Địa chỉ Google group: example@googlegroups.com   Địa chỉ email của thành viên trong group: user1@example.com      Truy cập SSH認証鍵 và đăng ký khoá công khai bằng tài khoản “user1@example.com”.   Khi git clone, chỉ định “user1@example.com”.   Clone repository ec-cube.co   $ git clone &lt;URL repository&gt; eccube-co-customize $ cd eccube-co-customize   Thêm repository EC-CUBE để theo dõi   $ git remote add ec-cube https://github.com/EC-CUBE/ec-cube.git $ git fetch ec-cube   Tạo branch develop cho phát triển local   $ git checkout -b develop origin/develop   Theo dõi branch co   $ git merge --allow-unrelated-histories ec-cube/&lt;tên branch co&gt;   Branch co sẽ khác nhau tuỳ phiên bản:      4.0 -&gt; co/master   4.1 -&gt; co/4.1   4.2 -&gt; co/4.2   Ví dụ sử dụng môi trường 4.2, merge như sau:   $ git merge --allow-unrelated-histories ec-cube/co/4.2   Cách phản ánh lên môi trường test/production   Push branch lên repository .co sẽ tự động cập nhật lên site (mất khoảng 1 phút).   ※ Có thể push các file ngoài app/Customize, nhưng chỉ các file được quy định trong chức năng quản lý Git mới được phản ánh lên site.   Phản ánh lên môi trường test   $ git push origin develop -u   Phản ánh lên môi trường production   $ git checkout master $ git merge develop $ git push origin master -u   Khởi động môi trường local   Khởi động môi trường local   $ docker-compose -f docker-compose.yml -f docker-compose.pgsql.yml -f docker-compose.dev.yml up $ docker-compose exec -u www-data ec-cube bin/console eccube:install --no-interaction $ docker-compose exec -u www-data ec-cube bin/console eccube:generate:proxies $ docker-compose exec -u www-data ec-cube bin/console doctrine:schema:update --force --dump-sql $ docker-compose exec -u www-data ec-cube bin/console doctrine:migrations:migrate   Mở trên trình duyệt   $ open http://127.0.0.1:8080/   Cách phản ánh plugin đã cài đặt lên môi trường local   Nếu môi trường đã cài plugin, cần cài plugin đó lên local.   Thêm khoá xác thực   $ docker exec &lt;tên container postgres&gt; psql -U dbuser eccubedb -c \"update dtb_base_info set authentication_key='&lt;khoá xác thực&gt;' \"   Cài đặt và kích hoạt plugin   $ docker-compose exec -u www-data ec-cube bin/console eccube:composer:require ec-cube/&lt;mã plugin&gt; $ docker-compose exec -u www-data ec-cube bin/console eccube:plugin:enable --code=&lt;mã plugin&gt;  ","categories": [],
        "tags": ["co","ec-cube.co"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/co/co_customize_dir_usage",
        "teaser":null},{
        "title": "ec-cube.co FAQ",
        "excerpt":"  Tổng hợp các câu hỏi thường gặp.     Cơ sở dữ liệu (DB)   Có thể truy cập trực tiếp DB của ec-cube.co bằng công cụ client DB không?   Vì lý do bảo mật và vận hành, việc kết nối trực tiếp là không thể. Mong bạn thông cảm.   Có thể thay đổi schema DB không?   Không thể trên môi trường trial. Sau khi đăng ký gói Standard, bạn có thể thực hiện thông qua vùng tuỳ biến. Xem thêm tại Hướng dẫn mở rộng Entity.   Chỉ hỗ trợ PostgreSQL phải không?   Đúng vậy, chỉ hỗ trợ PostgreSQL.   Khác biệt với bản download   ec-cube.co khác gì so với bản download?   Chức năng chính dựa trên EC-CUBE4 bản download, giống nhau. Bạn có thể sử dụng các plugin, template thiết kế tương tự bản download. Sau khi đăng ký gói Standard, bạn có thể mở rộng chức năng qua thư mục Customize.   Google Analytics (Phân tích truy cập)   Làm sao để cài đặt Google Analytics?   Bạn có thể sử dụng plugin trên Owner’s Store:     Plugin Google Analytics eCommerce/Enhanced eCommerce cho EC-CUBE4   Plugin Google Analytics E-Commerce/User-ID cho 4.0   Web API   Có thể sử dụng Web API không? Có thể làm gì với WebAPI?   Bạn có thể sử dụng Plugin EC-CUBE Web API. Xem chi tiết tại Tài liệu phát triển.   Giới hạn truy cập   Muốn giới hạn truy cập vào site thì làm thế nào?   Tùy mục đích mà cách thực hiện khác nhau:     Vận hành site chỉ cho hội viên: dùng plugin trên Owner’s Store, tìm với từ khóa “closed”, “hội viên”, “đăng ký hội viên”.   Giới hạn truy cập admin: vào Quản trị &gt; Cài đặt &gt; Cài đặt hệ thống &gt; Quản lý bảo mật để cài đặt giới hạn IP.   Giới hạn toàn site bằng .htaccess: không còn hỗ trợ cài đặt Basic Auth qua support. Để ẩn front khi xây dựng site, dùng chức năng bảo trì (Maintenance) từ bản 4.1.2 trở lên. Khi bật chế độ bảo trì, chỉ admin đã đăng nhập mới xem được front. Tuy nhiên, một số chức năng như thanh toán có thể không hoạt động khi bật maintenance.   Giới hạn upload   Có giới hạn upload file không?   Có. Mỗi file upload tối đa 10MB.   Có thể yêu cầu tăng giới hạn upload hoặc tuỳ biến không?   Không thể. Mong bạn thông cảm.   Lỗi/Hoạt động không ổn định   Khi thao tác bị lỗi hoặc không ổn định thì làm gì?   Hãy liên hệ Hỗ trợ ec-cube.co và cung cấp các thông tin sau để được hỗ trợ nhanh:     URL site cần kiểm tra   Mô tả hiện tượng, thao tác gây ra lỗi   Thời điểm xảy ra   Đã khắc phục được chưa hay vẫn còn   Có thay đổi gì trước khi xảy ra lỗi không   Không làm gì nhưng menu admin bị ẩn đi?   Có thể do cache không đồng bộ. Hãy thử xóa cache trong quản trị. Nếu không được, liên hệ Hỗ trợ ec-cube.co và cung cấp các thông tin như trên.   Tuỳ biến   Làm sao miễn phí vận chuyển khi tổng tiền vượt mức?   Vào Quản trị &gt; Cài đặt &gt; Cài đặt cơ bản &gt; Cài đặt phí vận chuyển để cài đặt điều kiện miễn phí.   Muốn cài đặt phí vận chuyển, nơi gửi theo từng sản phẩm?   Sử dụng chức năng Phân loại bán hàng.   Muốn cài đặt “Nhận tại cửa hàng” trong phương thức giao hàng?   Cần tuỳ biến code core. Tuy nhiên, có thể thực hiện như sau:     Tạo phương thức giao hàng “Nhận tại cửa hàng” trong Quản trị &gt; Cài đặt &gt; Cài đặt cửa hàng &gt; Cài đặt phương thức giao hàng, nhập tên cửa hàng vào mục “Thời gian giao”.   Tuỳ biến code trong Quản trị &gt; Quản lý nội dung &gt; Quản lý JavaScript để ẩn mục “Ngày giao” và đổi “Thời gian giao” thành “Cửa hàng nhận” khi chọn “Nhận tại cửa hàng”.   Lưu ý: Trên quản lý đơn hàng, mục “Thời gian giao” sẽ hiển thị tên cửa hàng nhận, không thể tuỳ biến thêm.   Muốn đổi favicon?   Vào Quản trị &gt; Quản lý nội dung &gt; Quản lý file, upload favicon.ico vào assets &gt; img &gt; common.   Chỉ có thể tuỳ biến bằng plugin riêng hay có thể tuỳ biến core?   Sau khi đăng ký gói Standard, bạn có thể tuỳ biến qua thư mục Customize. Có thể dùng plugin riêng, nhưng các vấn đề phát sinh từ plugin riêng sẽ không được hỗ trợ. Việc tuỳ biến core đang được xem xét cho các gói mới.   Muốn thêm trường tuỳ ý cho sản phẩm?   Có thể dùng plugin trên Owner’s Store, ví dụ: Plugin thêm trường thông tin sản phẩm.   Muốn tuỳ biến hoá đơn giao hàng?   Không thể trên môi trường trial. Sau khi đăng ký gói Standard, có thể thực hiện tuỳ vào cách triển khai.   Có thể thêm trạng thái đơn hàng không?   Không thể, vì cần thay đổi cả chương trình. Xem thêm tại Github Issue.   Cách thay đổi thiết kế front?   Vào Quản trị &gt; Quản lý nội dung &gt;     Quản lý CSS   Quản lý JavaScript   Bạn có thể cập nhật code để thay đổi thiết kế front. Ngoài ra, có thể upload template thiết kế riêng. Tuy nhiên, các vấn đề phát sinh từ template riêng sẽ không được hỗ trợ. Không thể chỉnh sửa trực tiếp file (default_frame.twig) từ quản trị.   Có thể tích hợp Instagram Shopping không?   Có plugin trên Owner’s Store: Plugin quản lý bài đăng Instagram cho EC-CUBE4   Ngoài ra còn nhiều plugin khác, hãy tìm kiếm trên Owner’s Store. Lưu ý: Plugin Facebook hiện không sử dụng được.   Có thể thêm chức năng thêm vào giỏ hàng nhanh, hiển thị sản phẩm đã xem gần đây trên header không?   Có thể thực hiện bằng tuỳ biến sau khi đăng ký gói Standard.   Muốn cài đặt meta tag cho SEO?   Vào Quản trị &gt; Quản lý nội dung &gt; Quản lý trang, cài đặt meta ở cuối mỗi trang.   Muốn đổi logo trên hoá đơn giao hàng?   Vào Quản trị &gt; Quản lý nội dung &gt; Quản lý file, upload logo mới.   Có thể tuỳ biến gì?      Tuỳ biến trong phạm vi quản trị   Tuỳ biến bằng plugin, template thiết kế   Tuỳ biến qua thư mục Customize   Tuỳ biến bằng plugin/template riêng (không hỗ trợ lỗi phát sinh)   Không thể tuỳ biến core.   Đã thay đổi code trong quản lý nội dung, muốn khôi phục về mặc định?   Mã nguồn EC-CUBE sử dụng trên ec-cube.co được công khai tại co/master branch. Hãy tham khảo và copy code về môi trường của bạn.   Có thể tuỳ biến plugin của các bên khác không?   Tuỳ vào license của từng plugin, EC-CUBE không thể trả lời. Hãy kiểm tra thông tin license trên trang chi tiết plugin và liên hệ nhà cung cấp.   Muốn được hỗ trợ về thiết kế?   Liên hệ Hỗ trợ ec-cube.co hoặc Đối tác tích hợp EC-CUBE.   Có cách nào tuỳ biến mà không sửa code core không?   Có thể override class hoặc parameter mà không sửa code core. Tham khảo:     Override class core trên EC-CUBE4   Override parameter trên EC-CUBE4   Di chuyển site   Hướng dẫn di chuyển từ bản download (2.x, 3.x) sang ec-cube.co?   Xem Hướng dẫn di chuyển dữ liệu 2.x, 3.x. Nếu có vấn đề không có trong tài liệu, liên hệ Hỗ trợ ec-cube.co.   Hướng dẫn di chuyển từ ec-cube.co sang bản download?   Có thể thực hiện có phí. Liên hệ Hỗ trợ ec-cube.co và cung cấp:     URL site   Thời gian mong muốn lấy dữ liệu   Thông tin cung cấp gồm:     DB   Mã nguồn   Ảnh sản phẩm   Lưu ý: Sau 1 tuần kể từ khi dừng môi trường ec-cube.co, dữ liệu sẽ bị xoá và không thể cung cấp lại.   Quy mô site   Dịch vụ phù hợp quy mô nào?   Phù hợp từ site nhỏ đến vừa và lớn.   Bảo mật   Có hỗ trợ SSL không?   Đã hỗ trợ SSL toàn thời gian.   Có đáp ứng PCI DSS không?   Không đáp ứng PCI DSS. Về không lưu trữ thông tin thẻ, hãy dùng plugin thanh toán trên Owner’s Store.   Trên môi trường 4.1, mục “Tên host tin cậy” trong quản lý bảo mật là gì? Có cần thay đổi không?   Không cần thay đổi, đã được cài đặt tự động. Khi đổi domain, EC-CUBE sẽ hỗ trợ cài đặt lại. Nếu lỡ thay đổi và không truy cập được site, liên hệ Hỗ trợ ec-cube.co để khôi phục.   Bán hàng sản phẩm download   Có thể bán sản phẩm download không?   Có, nhưng mỗi file upload tối đa 10MB. Nên dùng dịch vụ ngoài như CDN nếu cần.   Dữ liệu/Nội dung   Muốn xoá hàng loạt đơn hàng test trên production?   Dùng plugin trên Owner’s Store:     4.2: Plugin xoá đơn hàng hàng loạt cho EC-CUBE4.2   4.0~4.1: Plugin xoá đơn hàng hàng loạt cho EC-CUBE4   Muốn cập nhật DB production mới nhất?   Liên hệ Hỗ trợ ec-cube.co và cung cấp:     URL site   Nội dung yêu cầu (ví dụ: cập nhật DB)   Template thiết kế   Có thể dùng template thiết kế nào trên ec-cube.co?   Xem danh sách template tại đây. Lưu ý: file trên 10MB sẽ bị lỗi khi upload.   Domain   Có thể dùng domain riêng không? Cài đặt SSL thế nào?   Có thể dùng domain riêng. SSL sẽ được cài đặt cùng lúc chuyển domain. Xem quy trình tại PDF: Quy trình cài đặt domain riêng. Chỉ hỗ trợ subdomain, không hỗ trợ root domain.   Không được: https://example.com Được: https://www.example.com Được: https://shop.example.com   Plugin   Muốn cài plugin thanh toán, có thể dùng plugin nào?   Xem danh sách plugin thanh toán tại đây. Lưu ý: Plugin “Repeat Cube” không thể cài đặt thông thường, liên hệ Hỗ trợ ec-cube.co nếu cần. Nếu dùng plugin ngoài danh sách, site có thể bị dừng theo Điều khoản sử dụng ec-cube.co.   Cài nhiều plugin có làm chậm site không?   Có site cài hơn 20 plugin vẫn hoạt động tốt. Tuy nhiên, tuỳ vào cách lập trình của từng plugin mà có thể ảnh hưởng hiệu năng.   Cài nhiều plugin có thể gây xung đột không?   Có thể, tuỳ vào sự kết hợp plugin. Không thể cung cấp thông tin xung đột chi tiết do số lượng plugin lớn.   Sau khi cài plugin bị lỗi server, không truy cập được site?   Có thể do cache. Nếu không đăng nhập được admin, liên hệ Hỗ trợ ec-cube.co và cung cấp:     URL site   Plugin gây lỗi   Thời điểm xảy ra   Thay đổi trước khi lỗi (nếu có)   Để tránh lỗi, hãy chuyển site sang chế độ bảo trì trước khi cài/upgrade plugin.   Email   Khách hàng không nhận được email mua hàng?   Kiểm tra xem email có bị chặn hoặc vào spam không. Nếu không phải, liên hệ Hỗ trợ ec-cube.co và cung cấp:     URL site   Đơn hàng bị lỗi   Thời điểm xảy ra   Các đơn hàng khác có bị không   Thay đổi trước khi lỗi (nếu có)   Email marketing   Có thể gửi email marketing không?   Giới hạn 12.000 email/tháng. Nếu vượt, hãy dùng dịch vụ ngoài. Có thể dùng plugin trên Owner’s Store:     Plugin quản lý email marketing   Plugin gửi email marketing đơn giản x GreenForm (4.x)   Plugin PostCarrier cho EC-CUBE4   Có template email marketing:     HTML Email Magazine Template No.EM001   HTML Email Magazine Template No.EM002   Vận hành   Muốn đăng ký hàng loạt sản phẩm?   Có thể import file CSV sản phẩm từ quản trị. Không giới hạn số lượng (đã kiểm tra với 10.000 sản phẩm).   Có giới hạn số lượng sản phẩm hoặc dung lượng dữ liệu không?   Không giới hạn. Tuy nhiên, mỗi lần upload dữ liệu tối đa 10MB. Nếu đăng ký quá nhiều sản phẩm, hiệu năng site có thể giảm.   Muốn đăng ký hơn 1000 thuộc tính cho 1 sản phẩm?   Cần tăng php_value max_input_vars lên trên 1000, nhưng không thể thay đổi trên ec-cube.co vì lý do bảo mật và tài nguyên. Hãy chia nhỏ sản phẩm.   Phát triển   Muốn thuê phát triển site hoặc giới thiệu công ty phát triển?   Hãy liên hệ EC-CUBE Advisor hoặc Đối tác tích hợp EC-CUBE.   Kết nối dịch vụ ngoài   Muốn dùng dịch vụ ngoài thì làm thế nào?   Có thể cài plugin tích hợp dịch vụ ngoài từ Owner’s Store, hoặc tuỳ biến qua thư mục Customize/plugin riêng sau khi đăng ký gói Standard. Lưu ý:     Chỉ dùng plugin thanh toán tải từ Owner’s Store   Không hỗ trợ lỗi phát sinh từ plugin/template riêng   Nếu dùng plugin thanh toán ngoài Owner’s Store, site có thể bị dừng theo Điều khoản sử dụng ec-cube.co.   Kết nối môi trường   Có thể thao tác trực tiếp trên môi trường production không?   Chỉ giới hạn ở:     Quản trị   Console cung cấp sau khi đăng ký gói Standard   Nếu muốn upload ảnh hàng loạt, dùng Plugin upload ảnh sản phẩm hàng loạt. Không thể kết nối trực tiếp qua SSH/telnet/SFTP/FTP.   Giám sát   Có giám sát tài nguyên không?   Có giám sát tài nguyên. Xem thêm tại Giám sát &amp; Monitoring.   Chức năng   EC-CUBE có những chức năng gì?   Xem tại:     Danh sách chức năng EC-CUBE4   Hướng dẫn quản trị EC-CUBE4   Thanh toán   Muốn cho phép thanh toán toàn bộ bằng điểm thì làm thế nào?   Nếu cổng thanh toán không hỗ trợ thanh toán 0 đồng, hãy đăng ký phương thức thanh toán “0 đồng” hoặc “Thanh toán toàn bộ bằng điểm”.   Xử lý sự cố   Khi có sự cố, EC-CUBE sẽ hỗ trợ thế nào?   Sau khi nhận được liên hệ hoặc phát hiện cảnh báo, EC-CUBE sẽ kiểm tra và phản hồi.   Khi phát hiện sự cố, có gửi email cho khách hàng không?   Có thể cài đặt gửi email cho 1 địa chỉ email/site khi có yêu cầu. Không hỗ trợ nhiều email.   Upload video giới thiệu sản phẩm   Muốn upload video giới thiệu sản phẩm lên site thì làm thế nào?   Có thể upload, nhưng mỗi file tối đa 10MB. Nên dùng dịch vụ ngoài như CDN nếu cần.   Cài đặt   Địa chỉ IP gửi đi có cố định không?   Có, là IP cố định. Sau khi đăng ký gói Standard, có thể xem IP trên màn hình Console. Nếu cần biết IP sau khi đăng ký trial, liên hệ Hỗ trợ ec-cube.co và cung cấp:     URL site   Nội dung yêu cầu: Muốn biết IP   Plugin/Template riêng   Có thể tự làm plugin/template riêng không?   Có thể, nhưng các lỗi phát sinh sẽ không được hỗ trợ. Hãy cân nhắc sử dụng plugin/template trên Owner’s Store.   Liên hệ   Ngoài Hỗ trợ ec-cube.co, bạn có thể tham khảo:     Muốn hỏi đáp nhanh về lỗi nhỏ: Cộng đồng phát triển EC-CUBE   Muốn tìm hiểu kỹ thuật về ec-cube.co/EC-CUBE: Tài liệu phát triển EC-CUBE 4   Muốn hỏi trực tiếp chuyên gia: Tham gia các nhóm người dùng, sự kiện, seminar tại Tin tức &amp; Sự kiện &amp; Cộng đồng   Muốn thuê xây dựng site: Đối tác tích hợp EC-CUBE   Không biết chọn đối tác nào: EC-CUBE Advisor  ","categories": [],
        "tags": ["co","ec-cube.co"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/co/co_faq",
        "teaser":null},{
        "title": "Chức năng quản lý Git trên ec-cube.co",
        "excerpt":"  Chức năng quản lý Git cho gói Standard như sau:                          Đối tượng quản lý Git       Ảnh hưởng khi dùng Plugin       Thao tác từ màn hình quản lý                       |-- app                                         |  |-- Customize       o                                 |  |-- DoctrineMigrations       x                                 |  |-- Plugin       x       o                         |  |-- PluginData       x       o                         |  |-- config       x                                 |  |-- proxy       x                                 |  `-- template       o       o       o                 `-- html                                           |-- plugin       o       o                           |-- template       o       o       o                   |-- upload       x                                   |  |-- save_image       x               o                   |  `-- temp_image       x               o                   `-- user_data       x               o                     `– assets       x               o           Giải thích bảng      Đối tượng quản lý Git: Tài nguyên có thể phản ánh lên source code hoặc thư mục qua Git   Ảnh hưởng khi dùng Plugin: Khi cài đặt/gỡ cài đặt/bật/tắt plugin, source code có thể bị ghi đè   Thao tác từ màn hình quản lý: Có thể cập nhật từ màn hình quản lý (quản lý trang/template, v.v.)   Các thư mục dưới đây là code gốc của EC-CUBE nên không thuộc phạm vi quản lý:     DoctrineMigrations   config   proxy   Về “Ảnh hưởng khi dùng Plugin” và “Thao tác từ màn hình quản lý”:     Ngoài việc phản ánh từ git, các file được tạo hoặc thay đổi bởi thao tác khác cũng sẽ được quản lý bởi git.   Khi đó, thay đổi từ phía màn hình quản lý sẽ được commit là chính thức.  ","categories": [],
        "tags": ["co","ec-cube.co"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/co/co_git",
        "teaser":null},{
        "title": "ec-cube.co Cách lấy log",
        "excerpt":"  Cách lấy log   Bạn có thể lấy log từ màn hình Console &gt; Log. Có thể lấy access log của web server, log PHP và log lỗi của database.     ","categories": [],
        "tags": ["co","ec-cube.co"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/co/co_log",
        "teaser":null},{
        "title": "ec-cube.co Quy tắc đặt tên",
        "excerpt":"  ※ [shopid]: Là Shop ID bạn chỉ định khi đăng ký (phần xxx trong xxx.ec-cube.co).                                                          Tên repository       eccube.co-[shopid]-customize                         Branch       master-&gt; môi trường production, develop-&gt; môi trường test       ※ Chỉ áp dụng cho gói Standard                 URL shop (production)       [shopid].ec-cuube.shop                         URL shop (test)       stg-[shopid].ec-cuube.shop       ※ Chỉ áp dụng cho gói Standard          ","categories": [],
        "tags": ["co","ec-cube.co"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/co/co_naming_rules",
        "teaser":null},{
        "title": "ec-cube.co Về các biện pháp bảo mật",
        "excerpt":"  Về các biện pháp bảo mật của ec-cube.co, dựa trên Chính sách bảo mật thông tin, chúng tôi thực hiện các biện pháp sau. Về điều khoản sử dụng, vui lòng tham khảo Điều khoản sử dụng ec-cube.co.   Biện pháp bảo mật ứng dụng   Giám sát &amp; Monitoring   Chúng tôi thực hiện các biện pháp giám sát sau:     Giám sát hoạt động (kiểm tra site có hoạt động không)   Giám sát lỗi (kiểm tra ứng dụng hoạt động bình thường không)   Giám sát tài nguyên (bộ nhớ, CPU, …)   Khi phát sinh sự cố   Khi phát hiện sự cố nghiêm trọng như không thể truy cập site, quản trị viên hệ thống sẽ được thông báo và tiến hành xử lý.   Backup   Thực hiện backup định kỳ file ứng dụng và DB dump.   Bảo trì định kỳ      Bảo trì hàng tuần: cập nhật mã nguồn EC-CUBE mà không dừng dịch vụ.   Bảo trì hàng tháng: có thể dừng dịch vụ để cập nhật hạ tầng, middleware, …   Bảo trì khẩn cấp: thực hiện khi có sự cố hoặc khi EC-CUBE đánh giá cần thiết.   Biện pháp bảo mật mạng   Chống truy cập trái phép, tấn công, phá hoại   Sử dụng WAF để phát hiện tấn công vào ứng dụng web, chặn truy cập từ kẻ tấn công và bảo vệ site.   Biện pháp cho phát triển   Xử lý thông tin cá nhân  Tham khảo Chính sách bảo vệ thông tin cá nhân và Về xử lý thông tin cá nhân.   Thiết bị phát triển/vận hành   Áp dụng phần mềm bảo mật cho thiết bị phát triển/vận hành, luôn cập nhật mới nhất và thực hiện quét virus định kỳ.   Biện pháp để sử dụng an toàn   Mã hoá truyền dữ liệu   Sử dụng SSL để mã hoá truyền dữ liệu, ngăn chặn nghe lén và sửa đổi dữ liệu.   Kiểm soát truy cập   Có thể giới hạn IP truy cập vào màn hình quản trị.   Thông tin thanh toán   Các plugin thanh toán cung cấp trên Owner’s Store đều hỗ trợ không lưu trữ thông tin thẻ tín dụng.  ","categories": [],
        "tags": ["co","ec-cube.co"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/co/co_security",
        "teaser":null},{
        "title": "ec-cube.co Xây dựng môi trường test",
        "excerpt":"  Xây dựng môi trường test   Bạn có thể xây dựng môi trường test từ màn hình Console &gt; Test environment. Tại mục môi trường test, bạn có thể kiểm tra URL shop test và địa chỉ trang đăng nhập quản trị. Tài khoản đăng nhập quản trị giống với môi trường production.      Nhân bản môi trường   Từ chức năng tạo/xoá môi trường test, bạn có thể nhân bản toàn bộ môi trường production (bao gồm cả database). Nếu đã có môi trường test cũ, môi trường cũ sẽ bị xoá khi nhân bản mới. Bạn có thể kiểm tra thời gian tạo môi trường test.     ","categories": [],
        "tags": ["co","ec-cube.co"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/co/co_staging",
        "teaser":null},{
        "title": "ec-cube.co Hướng dẫn cập nhật",
        "excerpt":"  Mã nguồn được áp dụng   Mã nguồn EC-CUBE sử dụng trên ec-cube.co (4.0/4.1/4.2) được công khai tại các branch co/master, co/4.1, co/4.2. Branch 4.2 sẽ được merge định kỳ vào branch co/4.2 trong các đợt bảo trì hàng tuần.   Mã nguồn EC-CUBE đang áp dụng cho ec-cube.co (bản 4.2) có thể kiểm tra tại co/4.2-YYYYMMDD. Mã nguồn EC-CUBE đang áp dụng cho ec-cube.co (bản 4.1) có thể kiểm tra tại co/4.1-YYYYMMDD. Mã nguồn EC-CUBE đang áp dụng cho ec-cube.co (bản 4.0) có thể kiểm tra tại co/YYYYMMDD.   Hướng dẫn cập nhật   Ưu tiên đảm bảo tính tương thích với tiêu chuẩn merge Pull Request của EC-CUBE.   Danh sách kiểm tra tương thích Pull Request:     Thay đổi specification của chức năng hiện có   Thay đổi timing gọi function hookpoint   Xoá/thay đổi kiểu dữ liệu parameter của function hookpoint   Xoá/thay đổi kiểu dữ liệu parameter truyền vào file twig   Xoá/thay đổi kiểu dữ liệu parameter của function public trong Service class   Thay đổi format file xuất/nhập (CSV, …)   Thời điểm phản ánh   Cập nhật sẽ được thực hiện theo lịch bảo trì hàng tuần.     Bảo trì hàng tuần (mỗi thứ 5 từ 9:00~10:00, không dừng dịch vụ): cập nhật EC-CUBE   Bảo trì hàng tháng (mỗi thứ 5 đầu tháng từ 9:00~10:00, có thể dừng dịch vụ): cập nhật GKE node, hạ tầng, middleware  ","categories": [],
        "tags": ["co","ec-cube.co"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/co/co_update_guidelines",
        "teaser":null},{
        "title": "Tổng quan phát triển",
        "excerpt":"Giới thiệu về workflow phát triển và các công cụ sử dụng trong phát triển EC-CUBE.   Quy trình phát triển   Việc phát triển EC-CUBE core được thực hiện dựa trên GitHub Flow.   Xem chi tiết tại các trang tham khảo dưới đây:      Giới thiệu về GitHub Flow   Sơ đồ khái niệm GitHub Flow   Trao đổi thông tin &amp; giao tiếp      Qiita            Chia sẻ các tips khi phát triển.           Slack            Công cụ giao tiếp giữa các lập trình viên.           GitHub Issues            Nơi tập trung các thông tin quan trọng như “Yêu cầu cải tiến, ý tưởng, báo cáo bug”.           Công cụ   Quản lý phiên bản      GitHub            Ngoài việc chia sẻ thông tin qua Issues, còn quản lý version và so sánh mã nguồn.           Test &amp; Phân tích mã nguồn      Travis            Chạy unit test trên môi trường chỉ định.           AppVeyor            CI dùng để test trên môi trường Windows.           Scrutinizer            Phân tích mã nguồn tĩnh.          ","categories": [],
        "tags": ["contribution-guide","guideline"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/contribution-guide/overview",
        "teaser":null},{
        "title": "Cách tạo Pull Request",
        "excerpt":"Hướng dẫn gửi Pull Request cho EC-CUBE và các lưu ý cần thiết.   Clone mã nguồn về local   Fork repository ec-cube về tài khoản Github của bạn, sau đó clone về local.   Cài đặt package phụ thuộc   Cài đặt các package phụ thuộc:   $ composer install   Thêm remote   Thêm repository gốc của ec-cube làm remote. Ở đây đặt tên là upstream, bạn có thể đặt tên khác nếu muốn.   $ git remote add upstream https://github.com/EC-CUBE/ec-cube.git   Cập nhật branch main local   EC-CUBE sử dụng branch 4.2 làm branch chính.   $ git pull upstream 4.2   Tạo branch phát triển   $ git checkout -b [tên branch tuỳ ý] upstream/4.2   Đẩy lên repository của bạn   Sau khi commit thay đổi trên branch vừa tạo, hãy push lên repository của bạn.   $ git push origin [tên branch tuỳ ý]   Gửi Pull Request   Từ trang repository của bạn trên Github, tạo Pull Request tới ec-cube.      Tạo Pull Request từ repository của bạn lên repository chính   Điều kiện merge Pull Request   Pull Request sẽ được merge vào “Master” khi đáp ứng các điều kiện sau:      Được developer/committer review   Check CI thành công            Travis: Unit test       AppVeyor: Unit test (môi trường Windows)       Scrutinizer: Phân tích mã nguồn tĩnh           Lưu ý khi gửi Pull Request   Hãy gộp các commit không cần thiết lại với nhau. Nếu bạn đã quen với git rebase, hãy sử dụng để gộp commit.   Ví dụ, nếu bạn có các commit như sau, hãy gộp 112233445 đến 334455667 lại:  $ git log --pretty=format:\"%h - %an : %s\" 334455667 - myself : Sửa chức năng A 223344556 - myself : Sửa chức năng A 112233445 - myself : Thêm chức năng A 001122334 - other_user : Commit của người khác  Chạy git rebase để gộp commit:  $ git rebase -i 001122334 pick 112233445 Thêm chức năng A squash 223344556 Sửa chức năng A squash 334455667 Sửa chức năng A  Sau khi gộp, log sẽ như sau:  $ git log --pretty=format:\"%h - %an : %s\" 445566778 - myself : Thêm chức năng A 001122334 - other_user : Commit của người khác $ git push origin master $ ...   Tuy nhiên, nếu bạn sửa theo comment review, hãy giữ lại lịch sử để dễ theo dõi, không nên gộp quá nhiều:  $ git log --pretty=format:\"%h - %an : %s\" 667788990 - myself : Sửa lại do sai sót 556677889 - myself : Phản hồi kết quả review 445566778 - myself : Thêm chức năng A 001122334 - other_user : Commit của người khác  Sau khi commit 445566778 và gửi Pull Request, nếu có sửa theo review thì chỉ gộp các commit sửa review lại với nhau, không gộp với commit chính.   Không gộp các commit đã được merge.  ","categories": [],
        "tags": ["contribution-guide","guideline"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/contribution-guide/pull-request",
        "teaser":null},{
        "title": "Tuỳ biến Controller",
        "excerpt":"  Thêm routing mới   Bạn có thể thêm routing mới cho site bằng cách đặt file class có annotation @Route vào thư mục ./app/Customize/Controller/.   Ví dụ đơn giản nhất dưới đây sẽ thêm routing để khi truy cập http://siteURL/sample sẽ hiển thị “Hello sample page !”.   File Controller   ./app/Customize/Controller/SamplePageController.php   &lt;?php  namespace Customize\\Controller;  use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Method; use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route; use Symfony\\Component\\HttpFoundation\\Response;  class SamplePageController {     /**      * @Method(\"GET\")      * @Route(\"/sample\")      */     public function testMethod()     {         return new Response('Hello sample page !');     } }   Sử dụng file template   Bạn có thể sử dụng file template Twig bằng annotation @Template. Ví dụ sau sẽ hiển thị “Hello EC-CUBE !” khi truy cập http://siteURL/sample.   File Controller   &lt;?php  namespace Customize\\Controller;  use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Method; use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route; use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Template; use Symfony\\Component\\HttpFoundation\\Response;  class SamplePageController {     /**      * @Method(\"GET\")      * @Route(\"/sample\")      * @Template(\"Sample/index.twig\")      */     public function testMethod()     {         return ['name' =&gt; 'EC-CUBE'];     } }   File Twig   ./app/template/default/Sample/index.twig   &lt;h3&gt;Hello  !&lt;/h3&gt;   Một số mẹo tuỳ biến   Nhận tham số từ URL   Bạn có thể nhận tham số từ URL như http://siteURL/sample/1 bằng cách khai báo {id} trong @Route và nhận biến $id cùng tên.       /**      * @Method(\"GET\")      * @Route(\"/sample/{id}\")      */     public function testMethod($id)     {         return new Response('Parameter is '.$id);     }   Tạo link đến routing vừa thêm   Để tạo link đến routing vừa thêm từ template khác, bạn cần đặt tên cho routing bằng tham số name trong @Route.       /**      * @Method(\"GET\")      * @Route(\"/sample/{id}\", name=\"sample_page\")      */     public function testMethod($id)     {         return new Response('Parameter is '.$id);     }   Từ file template khác, bạn có thể tạo link như sau (có thể truyền tham số):    &lt;a href=\"{{ url('sample_page', { id : 2}) }}\"&gt;Link đến trang Sample&lt;/a&gt;    Ghi đè routing sẵn có của EC-CUBE   Để ghi đè routing sẵn có, chỉ cần định nghĩa routing mới với cùng path và name. Ví dụ sau sẽ ghi đè trang “Về chúng tôi”.       /**      * @Method(\"GET\")      * @Route(\"/help/about\", name=\"help_about\")      */     public function testMethod()     {         return new Response('Overwrite /help/about page');     }   Thêm routing cho trang quản trị   Để chỉ cho phép user đã đăng nhập admin truy cập, hãy dùng /%eccube_admin_route% trong path.       /**      * @Method(\"GET\")      * @Route(\"/%eccube_admin_route%/sample\")      */     public function testMethod()     {         return new Response('admin page');     }   Tương tự, routing cho UserData dùng /%eccube_user_data_route%.   Redirect   Kế thừa AbstractController và dùng hàm redirectToRoute để redirect. Ví dụ sau sẽ redirect về trang “Về chúng tôi” khi có truy cập.       /**      * @Method(\"GET\")      * @Route(\"/sample\")      */     public function testMethod()     {         return $this-&gt;redirectToRoute('help_about');     }   Dùng forwardToRoute để chuyển xử lý sang controller khác mà không redirect.   Sử dụng service trong Controller   Kế thừa AbstractController để sử dụng các service thường dùng. Ví dụ sau dùng EntityManager để lấy Entity sản phẩm.   &lt;?php  namespace Customize\\Controller;  use Eccube\\Controller\\AbstractController; use Eccube\\Entity\\Product; use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Method; use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route; use Symfony\\Component\\HttpFoundation\\Response;  class SamplePageController extends AbstractController {     /**      * @Method(\"GET\")      * @Route(\"/sample\")      */     public function testMethod()     {         /** @var Product $product */         $product = $this-&gt;entityManager-&gt;getRepository('Eccube\\Entity\\Product')-&gt;find(1);          return new Response('Product is '.$product-&gt;getName());     } }   Các service khác có thể dùng khi kế thừa AbstractController, xem tại ./src/Eccube/Controller/AbstractController.php.   Sử dụng service không có trong AbstractController   Bạn có thể inject service vào constructor. Ví dụ sau lấy tên shop từ BaseInfo.   &lt;?php  namespace Customize\\Controller;  use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Method; use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route; use Symfony\\Component\\HttpFoundation\\Response;  class SamplePageController {     /** @var \\Eccube\\Entity\\BaseInfo */     protected $BaseInfo;      /**      * SamplePageController constructor.      * @param \\Eccube\\Repository\\BaseInfoRepository $baseInfoRepository      */     public function __construct(\\Eccube\\Repository\\BaseInfoRepository $baseInfoRepository)     {         $this-&gt;BaseInfo = $baseInfoRepository-&gt;get();     }      /**      * @Method(\"GET\")      * @Route(\"/sample\")      */     public function testMethod()     {         return new Response('Shop name is '.$this-&gt;BaseInfo-&gt;getShopName());     } }   Tạo controller không cần hiển thị màn hình   Ngay cả khi controller không trả về view, bạn vẫn phải trả về đối tượng Response (không dùng exit()).   Bạn cũng có thể chỉ định mã response và header.       /**      * @Method(\"GET\")      * @Route(\"/sample\")      */     public function testMethod()     {         return new Response(           '',           Response::HTTP_OK,           array('Content-Type' =&gt; 'text/plain; charset=utf-8')         );     }   $ curl -D - http://siteURL/sample HTTP/1.1 200 OK Content-Type: text/plain; charset=utf-8   Tham khảo   EC-CUBE 4 sử dụng cơ chế Controller của Symfony. Tham khảo thêm các cách tuỳ biến khác tại tài liệu Symfony:   Controller  ","categories": [],
        "tags": ["core","controller"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/customize_controller",
        "teaser":null},{
        "title": "Tuỳ biến Entity",
        "excerpt":"Mở rộng Entity #2267   Cách mở rộng cơ bản   Bạn có thể mở rộng field của Entity bằng cách sử dụng trait và annotation @EntityExtension. Không cần kế thừa, EC-CUBE sẽ tự động sinh Proxy class, cho phép nhiều plugin hoặc tuỳ biến cùng mở rộng một entity.   &lt;?php  namespace Customize\\Entity;  use Doctrine\\ORM\\Mapping as ORM; use Eccube\\Annotation\\EntityExtension;  /**   * @EntityExtension(\"Eccube\\\\Entity\\\\Product\")  */ trait ProductTrait {     /**      * @ORM\\Column(type=\"string\", nullable=true)      */     public $maker_name; }   Tham số của annotation @EntityExtension là tên class bạn muốn áp dụng trait. Trong trait, bạn khai báo các field muốn thêm, sử dụng annotation của Doctrine ORM như @ORM\\Column để định nghĩa DB.   Sau khi tạo trait, chạy lệnh sau để sinh Proxy class:   bin/console eccube:generate:proxies   Sau đó, chạy lệnh sau để cập nhật DB:   ## Xoá cache để nhận Proxy mới bin/console cache:clear --no-warmup  ## Xem SQL sẽ thực thi bin/console doctrine:schema:update --dump-sql  ## Thực thi SQL bin/console doctrine:schema:update --dump-sql --force   Sử dụng trong Controller hoặc Twig   Bạn có thể sử dụng field mở rộng như bình thường trong controller hoặc twig.   // Ví dụ trong controller public function index() {     $Product = $this-&gt;productRepository-&gt;find(1);     dump($Product-&gt;maker_name);      $Product-&gt;maker_name = 'abc';     $this-&gt;entityManger-&gt;persist($Product);     $this-&gt;entityManger-&gt;flush();     ...   {# Ví dụ trong twig #}    Tự động sinh form từ Entity   Nếu muốn tự động sinh form cho field mở rộng, thêm annotation @FormAppend vào field trong trait.   &lt;?php  namespace Customize\\Entity;  use Doctrine\\ORM\\Mapping as ORM; use Eccube\\Annotation as Eccube; use Symfony\\Component\\Validator\\Constraints as Assert;  /**  * @Eccube\\EntityExtension(\"Eccube\\\\Entity\\\\BaseInfo\")  */ trait BaseInfoTrait {     /**      * @ORM\\Column(name=\"company_name_vn\", type=\"string\", length=255, nullable=true)      * @Eccube\\FormAppend      * @Assert\\NotBlank(message=\"Vui lòng nhập thông tin!\")      */     public $company_name_vn; }   Khi thêm annotation @FormAppend, form sẽ tự động có field mới. Nếu muốn kiểm tra dữ liệu nhập, dùng các annotation của Symfony như @NotBlank.   Nếu muốn tuỳ biến form chi tiết hơn, dùng auto_render=true và chỉ định form_theme, type, option.   &lt;?php  namespace Customize\\Entity;  use Doctrine\\ORM\\Mapping as ORM; use Eccube\\Annotation as Eccube; use Symfony\\Component\\Validator\\Constraints as Assert;  /**  * @Eccube\\EntityExtension(\"Eccube\\\\Entity\\\\BaseInfo\")  */ trait BaseInfoTrait {     /**      * @ORM\\Column(name=\"company_name_vn\", type=\"string\", length=255, nullable=true)      * @Assert\\NotBlank(message=\"Vui lòng nhập thông tin\")      * @Eccube\\FormAppend(      *     auto_render=true,      *     form_theme=\"Form/company_name_vn.twig\",      *     type=\"\\Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType\",      *     options={      *          \"required\": true,      *          \"label\": \"Tên công ty (VN)\"      *     })      */     public $company_name_vn; }   ","categories": [],
        "tags": ["core","entity"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/customize_entity",
        "teaser":null},{
        "title": "Tuỳ biến FormType",
        "excerpt":"Mở rộng bằng FormExtension   Bằng cách sử dụng cơ chế FormExtension, bạn có thể tuỳ biến các form hiện có.   Cách mở rộng   Tạo file class kế thừa AbstractTypeExtension trong thư mục ./app/Customize/Form/Extension/, hệ thống sẽ tự động nhận diện là FormExtension.   Chỉ định loại form cần mở rộng   Với EC-CUBE 4.0, bạn cần cài đặt hàm getExtendedType và chỉ định loại form muốn mở rộng.   public function getExtendedType() {     return EntryType::class; }   Từ EC-CUBE 4.1 trở đi, bạn cần cài đặt hàm getExtendedTypes và chỉ định loại form muốn mở rộng.   public static function getExtendedTypes(): iterable {     yield EntryType::class; }   Các hàm có thể override để mở rộng   Bạn có thể override các hàm sau và thay đổi tham số truyền vào để tuỳ biến form:      buildForm()   buildView()   configureOptions()   finishView()   EC-CUBE 4 sử dụng cơ chế FormExtension của Symfony.  Tham khảo chi tiết cách mở rộng tại tài liệu Symfony: https://symfony.com/doc/current/form/create_form_type_extension.html   Ví dụ   Ví dụ mở rộng form đăng ký hội viên, chuyển trường “Tên công ty” thành bắt buộc nhập.   ./app/Customize/Form/Extension/CompanyNameRequiredExtension.php   &lt;?php  namespace Customize\\Form\\Extension;  use Eccube\\Form\\Type\\Front\\EntryType; use Symfony\\Component\\Form\\AbstractTypeExtension; use Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType; use Symfony\\Component\\Form\\FormBuilderInterface; use Symfony\\Component\\Validator\\Constraints\\NotBlank;  class CompanyNameRequiredExtension extends AbstractTypeExtension {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $options = $builder-&gt;get('company_name')-&gt;getOptions();          $options['required'] = true;         $options['constraints'] = [ new NotBlank() ];         $options['attr']['placeholder'] = 'Tên công ty';          $builder-&gt;add('company_name', TextType::class, $options);     }      /**      * {@inheritdoc}      */     public function getExtendedType()     {         return EntryType::class;     }          /**      * {@inheritdoc}      */     public static function getExtendedTypes(): iterable     {         yield EntryType::class;     } }    Mở rộng tạo form từ Entity   Tham khảo Tuỳ biến Entity.   ","categories": [],
        "tags": ["core","formtype"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/customize_formtype",
        "teaser":null},{
        "title": "Tuỳ biến trạng thái đơn hàng",
        "excerpt":"Mở rộng trạng thái đơn hàng #3325      Vui lòng xem thêm Luồng xử lý trạng thái đơn hàng.   Cách mở rộng cơ bản   Sử dụng Symfony Workflow Component để triển khai.   Để thêm xử lý khi chuyển trạng thái, hãy cài đặt event khi chuyển trạng thái. Các trạng thái được định nghĩa tại app/config/eccube/packages/order_state_machine.php.   Bằng cách cài đặt event, bạn có thể thêm xử lý tuỳ ý khi chuyển trạng thái đơn hàng.                  Từ trạng thái       Đến trạng thái       Sự kiện                       Đã nhận mới       Đã thanh toán       workflow.order.transition.pay                 Đã nhận mới, Đã thanh toán       Đang xử lý       workflow.order.transition.packing                 Đã nhận mới, Đang xử lý, Đã thanh toán       Huỷ       workflow.order.transition.cancel                 Huỷ       Đang xử lý       workflow.order.transition.back_to_in_progress                 Đã nhận mới, Đang xử lý, Đã thanh toán       Đã giao       workflow.order.transition.ship                 Đã giao       Trả hàng       workflow.order.transition.return                 Trả hàng       Đã giao       workflow.order.transition.cancel_return              Ví dụ) Thêm xử lý khi trả hàng            Cài đặt EventSubscriberInterface để nhận event workflow.order.transition.return.           use Symfony\\Component\\EventDispatcher\\EventSubscriberInterface; use Eccube\\Entity\\Order; use Symfony\\Component\\Workflow\\Event\\Event;  class SampleTransitionListener implements EventSubscriberInterface {     /**      * Xử lý khi trả hàng.      *      * @param Event $event      */     public function onReturn(Event $event)     {         /* @var Order $Order */         $Order = $event-&gt;getSubject();         .... /* Triển khai xử lý */     }      /**      * {@inheritdoc}      */     public static function getSubscribedEvents()     {         return ['workflow.order.transition.return' =&gt; 'onReturn'];     } }   Tham khảo   Các event mặc định của EC-CUBE được triển khai tại src/Eccube/Service/OrderStateMachine.php.   Using Events  ","categories": [],
        "tags": ["core","OrderStatus"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/customize_order_state_machine",
        "teaser":null},{
        "title": "Tuỳ biến Repository",
        "excerpt":"Mở rộng QueryBuilder #2285, #2298   Bạn có thể tuỳ biến thứ tự sắp xếp hoặc điều kiện tìm kiếm cho các phương thức tạo QueryBuilder trong các class Repository. Các phương thức có thể sử dụng như sau:                  Class Repository       QueryKey                       ProductRepository::getQueryBuilderBySearchData()       QueryKey::PRODUCT_SEARCH                 ProductRepository::getQueryBuilderBySearchDataForAdmin()       QueryKey::PRODUCT_SEARCH_ADMIN                 ProductRepository::getFavoriteProductQueryBuilderByCustomer()       QueryKey::PRODUCT_GET_FAVORITE                 CustomerRepository::getQueryBuilderBySearchData()       QueryKey::CUSTOMER_SEARCH                 OrderRepository::getQueryBuilderBySearchData()       QueryKey::ORDER_SEARCH                 OrderRepository.getQueryBuilderBySearchDataForAdmin()       QueryKey::ORDER_SEARCH_ADMIN                 OrderRepository::getQueryBuilderByCustomer()       QueryKey::ORDER_SEARCH_BY_CUSTOMER                 LoginHistoryRepository::getQueryBuilderBySearchDataForAdmin()       QueryKey::LOGIN_HISTORY_SEARCH_ADMIN           ※ QueryKey::LOGIN_HISTORY_SEARCH_ADMIN chỉ có từ EC-CUBE 4.1 trở đi   Các interface để tuỳ biến như sau:                  Interface/Class       Mô tả                       QueryCustomizer       Tuỳ biến QueryBuilder tự do                 OrderByCustomizer       Tuỳ biến thứ tự sắp xếp                 WhereCustomizer       Thêm điều kiện tìm kiếm                 JoinCustomizer       Thêm bảng join           Ví dụ triển khai   Ví dụ luôn sắp xếp theo ID sản phẩm trong ProductRepository::getQueryBuilderBySearchDataForAdmin(). Chỉ định phương thức muốn áp dụng bằng hàm getQueryKey(), sẽ tự động có hiệu lực.   &lt;?php  namespace Customize\\Repository;  use Eccube\\Doctrine\\Query\\OrderByClause; use Eccube\\Doctrine\\Query\\OrderByCustomizer; use Eccube\\Repository\\QueryKey;  class AdminProductListCustomizer extends OrderByCustomizer {     /**      * Luôn sắp xếp theo ID sản phẩm.      *      * @param array $params      * @param $queryKey      * @return OrderByClause[]      */     protected function createStatements($params, $queryKey)     {         return [new OrderByClause('p.id')];     }      /**      * Áp dụng cho ProductRepository::getQueryBuilderBySearchDataForAdmin.      *      * @return string      * @see \\Eccube\\Repository\\ProductRepository::getQueryBuilderBySearchDataForAdmin()      * @see QueryKey      */     public function getQueryKey()     {         return QueryKey::PRODUCT_SEARCH_ADMIN;     } }   ","categories": [],
        "tags": ["core","repository"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/customize_repository",
        "teaser":null},{
        "title": "Tuỳ biến luồng mua hàng",
        "excerpt":"Tuỳ biến giỏ hàng #2613   Bằng cách triển khai class CartItemComparator hoặc CartItemAllocator, bạn có thể tuỳ biến hành vi khi thêm sản phẩm vào giỏ hàng.      Tách riêng các dòng sản phẩm giống nhau nhưng khác tuỳ chọn   Mặc định, các dòng sản phẩm trong giỏ sẽ được tách theo từng phân loại sản phẩm. Ví dụ, khi tuỳ biến thêm tuỳ chọn sản phẩm như gói quà, bạn có thể triển khai CartItemComparator để tách dòng sản phẩm theo tuỳ chọn này.   &lt;?php namespace Eccube\\Service\\Cart;  use Eccube\\Entity\\CartItem;  /**  * So sánh dòng sản phẩm theo phân loại và tuỳ chọn  */ class ProductClassAndOptionComparator implements CartItemComparator {     /**      * @param CartItem $Item1 Dòng 1      * @param CartItem $Item2 Dòng 2      * @return boolean true nếu là cùng dòng      */     public function compare(CartItem $Item1, CartItem $Item2)     {         $ProductClass1 = $Item1-&gt;getProductClass();         $ProductClass2 = $Item2-&gt;getProductClass();         $product_class_id1 = $ProductClass1 ? (string) $ProductClass1-&gt;getId() : null;         $product_class_id2 = $ProductClass2 ? (string) $ProductClass2-&gt;getId() : null;          if ($product_class_id1 === $product_class_id2) {             // Cần tuỳ biến thêm ProductOption             return $Item1-&gt;getProductOption()-&gt;getId() === $Item2-&gt;getProductOption()-&gt;getId();         }         return false;     } }    Để kích hoạt CartItemComparator, tạo file app/config/eccube/packages/cart.yaml và thêm định nghĩa:   services:     Eccube\\Service\\Cart\\CartItemComparator:       class: Eccube\\Service\\Cart\\ProductClassAndOptionComparator    Cho phép thêm sản phẩm có phương thức thanh toán khác nhau vào cùng giỏ   Ví dụ, có các phương thức giao hàng/phương thức thanh toán và sản phẩm như sau:      Phương thức giao hàng            A: Loại bán A/Thẻ tín dụng       B: Loại bán A/Thanh toán khi nhận           Sản phẩm            A: Loại bán A       B: Loại bán B           Ở EC-CUBE 3.0, nếu thêm sản phẩm A vào giỏ, sau đó thêm sản phẩm B sẽ báo lỗi “Không thể mua cùng lúc sản phẩm này”.   Bằng cách triển khai CartItemAllocator, bạn có thể tách giỏ theo tiêu chí tuỳ ý (ví dụ: sản phẩm đặt trước, v.v.).   &lt;?php namespace Eccube\\Service\\Cart;  use Eccube\\Entity\\CartItem;  /**  * Tách giỏ theo loại bán và sản phẩm đặt trước  */ class SaleTypeAndReserveCartAllocator implements CartItemAllocator {     /**      * Xác định mã giỏ cho sản phẩm      *      * @param CartItem $Item      * @return string      */     public function allocate(CartItem $Item)     {         $ProductClass = $Item-&gt;getProductClass();         if ($ProductClass &amp;&amp; $ProductClass-&gt;getSaleType()) {             $salesTypeId = (string) $ProductClass-&gt;getSaleType()-&gt;getId();             // isReserveItem cần tuỳ biến thêm             if ($ProductClass-&gt;isReserveItem()) {                 return $salesTypeId.':R' ;             }             return $salesTypeId;         }         throw new \\InvalidArgumentException('ProductClass/SaleType not found');     } }    Để kích hoạt CartItemAllocator, tạo file app/config/eccube/packages/cart.yaml và thêm định nghĩa:   services:     Eccube\\Service\\Cart\\CartItemAllocator:       class: Eccube\\Service\\Cart\\SaleTypeAndReserveCartAllocator    Tuỳ biến luồng mua hàng #2424   Các xử lý tổng hợp, kiểm tra tồn kho… là các logic chung liên quan đến đơn hàng. Trước đây, các xử lý này được cài đặt riêng lẻ ở nhiều nơi, gây khó khăn khi tuỳ biến hoặc tái sử dụng.   Từ EC-CUBE 4, các xử lý này được tách thành PurchaseFlow (điều khiển luồng) và Processor (xử lý từng bước), giúp tuỳ biến dễ dàng hơn.   Hoạt động tổng thể      Luồng xử lý tổng hợp   Ví dụ với giỏ hàng, các bước xử lý như sau:      Tải giỏ hàng từ session   Kiểm tra trạng thái hiện tại của từng dòng sản phẩm            Kiểm tra giới hạn bán       Kiểm tra tồn kho       Kiểm tra trạng thái hiển thị       …           Xử lý làm tròn số lượng theo kết quả kiểm tra            Giới hạn bán: giảm số lượng về đúng giới hạn       Hết hàng: xoá dòng sản phẩm       Không hiển thị: xoá dòng sản phẩm       …           Tổng hợp: tính tổng tiền, phí vận chuyển, phí xử lý…   Kiểm tra trạng thái tổng thể của giỏ            Kiểm tra loại sản phẩm       Kiểm tra phương thức thanh toán       Kiểm tra vượt giới hạn số tiền mua           Trả về lỗi nếu có   Tổng hợp lại            Tính tổng tiền, phí vận chuyển, phí xử lý…              Sơ đồ class      Vai trò các class chính:   ItemIHolderInterface   Interface đại diện cho danh sách dòng sản phẩm (Cart, Order).   ItemInterface   Interface đại diện cho từng dòng sản phẩm (CartItem, OrderItem).   PurchaseFlow   Class điều khiển toàn bộ luồng xử lý tổng hợp. Có 2 hàm chính: calculate() và purchase(). Khi gọi, sẽ truyền Item và ItemHolder vào các Processor để xử lý tuần tự, trả về kết quả.   ItemValidator   Processor kiểm tra tính hợp lệ của từng dòng sản phẩm.   ItemHolderValidator   Processor kiểm tra tính hợp lệ của toàn bộ giỏ/đơn hàng.   ItemPreprocessor   Processor tiền xử lý cho từng dòng sản phẩm.   ItemHolderPreprocessor   Processor tiền xử lý cho toàn bộ giỏ/đơn hàng (tính thuế, phí vận chuyển…).   DiscountProcessor   Processor xử lý giảm giá (điểm thưởng, coupon…).   ItemHolderPostValidator   Processor kiểm tra hợp lệ cuối cùng cho giỏ/đơn hàng (ví dụ tổng tiền âm…).   PurchaseProcessor   Processor xử lý hoàn tất đơn hàng (cập nhật tồn kho, điểm thưởng…).   PurchaseContext   Class lưu trạng thái khi thực thi.   PurchaseFlowResult   Class lưu kết quả thực thi PurchaseFlow.   Processor   Tuỳ mục đích, kế thừa hoặc implement các interface/class sau:                  Class/Interface       Mô tả                       ItemValidator       Kiểm tra hợp lệ từng dòng (giá, trạng thái hiển thị…)                 ItemHolderValidator       Kiểm tra hợp lệ toàn bộ giỏ/đơn hàng (tồn kho, giới hạn bán…)                 ItemPreprocessor       Tiền xử lý từng dòng sản phẩm                 ItemHolderPreprocessor       Tiền xử lý toàn bộ giỏ/đơn hàng (thêm phí vận chuyển…)                 DiscountProcessor       Xử lý giảm giá (điểm thưởng, coupon…)                 ItemHolderPostValidator       Kiểm tra hợp lệ cuối cùng cho giỏ/đơn hàng                 PurchaseProcessor       Xử lý hoàn tất đơn hàng (cập nhật tồn kho, điểm thưởng…)           Ví dụ triển khai Processor   EmptyProcessor::process() sẽ ghi log khi được gọi.   &lt;?php  namespace Plugin\\PurchaseProcessors\\Processor;  use Eccube\\Entity\\ItemInterface; use Eccube\\Service\\PurchaseFlow\\ItemPreProcessor; use Eccube\\Service\\PurchaseFlow\\PurchaseContext; use Eccube\\Service\\PurchaseFlow\\ProcessResult;  class EmptyProcessor implements ItemPreProcessor {     /**      * @param ItemInterface $item      * @param PurchaseContext $context      * @return ProcessResult      */     public function process(ItemInterface $item, PurchaseContext $context)     {         log_info('empty processor executed', [__METHOD__]);         return ProcessResult::success();     } }    Nếu ValidatableEmptyProcessor::validate() ném ra Eccube\\Service\\PurchaseFlow\\InvalidItemException, thì ValidatableEmptyProcessor::handle() sẽ được gọi và trả về PurchaseFlowResult::warn().   &lt;?php  namespace Plugin\\PurchaseProcessors\\Processor;  use Eccube\\Entity\\ItemInterface; use Eccube\\Service\\PurchaseFlow\\InvalidItemException; use Eccube\\Service\\PurchaseFlow\\PurchaseContext; use Eccube\\Service\\PurchaseFlow\\ItemValidator;  class ValidatableEmptyProcessor extends ItemValidator {     protected function validate(ItemInterface $item, PurchaseContext $context)     {         $error = false;         if ($error) {             throw new InvalidItemException('Lỗi ValidatableEmptyProcessor');         }     }      protected function handle(ItemInterface $item, PurchaseContext $context)     {         $item-&gt;setQuantity(100);     } }    Kích hoạt Processor   Để kích hoạt Processor tự tạo, thêm định nghĩa vào app/config/eccube/packages/purchaseflow.yaml hoặc dùng annotation chỉ định flow.   Định nghĩa trong purchaseflow.yaml       eccube.purchase.flow.cart.item_processors:         class: Doctrine\\Common\\Collections\\ArrayCollection         arguments:             - #                 - '@Plugin\\PurchaseProcessors\\Processor\\EmptyProcessor' # Thêm                 - '@Eccube\\Service\\PurchaseFlow\\Processor\\DisplayStatusValidator'                 - '@Eccube\\Service\\PurchaseFlow\\Processor\\SaleLimitValidator'                 - '@Eccube\\Service\\PurchaseFlow\\Processor\\DeliverySettingValidator'                 - '@Eccube\\Service\\PurchaseFlow\\Processor\\StockValidator'                 - '@Eccube\\Service\\PurchaseFlow\\Processor\\ProductStatusValidator'                 - '@Plugin\\PurchaseProcessors\\Processor\\ValidatableEmptyProcessor' # Thêm   Chỉ định flow bằng annotation   Dùng annotation @CartFlow, @ShoppingFlow, @OrderFlow để chỉ định flow cần thêm Processor.                  Annotation       Mô tả                       @CartFlow       Thêm Processor vào PurchaseFlow của giỏ hàng                 @ShoppingFlow       Thêm Processor vào PurchaseFlow của luồng mua hàng                 @OrderFlow       Thêm Processor vào PurchaseFlow của quản trị           &lt;?php  namespace Customize\\Service\\PurchaseFlow\\Processor;  use Eccube\\Annotation\\CartFlow; use Eccube\\Annotation\\OrderFlow; use Eccube\\Annotation\\ShoppingFlow; use Eccube\\Entity\\ItemInterface; use Eccube\\Service\\PurchaseFlow\\PurchaseContext; use Eccube\\Service\\PurchaseFlow\\ItemValidator;  /**  * Kích hoạt Processor cho tất cả các flow  *  * @CartFlow  * @ShoppingFlow  * @OrderFlow  */ class SampleValidator extends ItemValidator {     protected function validate(ItemInterface $item, PurchaseContext $context)     {         // Bỏ qua     }      protected function handle(ItemInterface $item, PurchaseContext $context)     {         // Bỏ qua     } }  ","categories": [],
        "tags": ["core","service","purchaseflow"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/customize_service",
        "teaser":null},{
        "title": "Tuỳ biến với chức năng của Symfony",
        "excerpt":"Tổng quan   EC-CUBE được phát triển dựa trên Symfony và Doctrine. Vì vậy, bạn có thể sử dụng các cơ chế mở rộng mà Symfony và Doctrine cung cấp.   Dưới đây là một số cơ chế mở rộng tiêu biểu và cách triển khai.   Symfony Event   Bạn có thể sử dụng hệ thống sự kiện của Symfony.   Tạo event listener hiển thị “hello world”   Tạo file HelloListener.php trong app/Customize/EventListener.   &lt;?php  namespace Customize\\EventListener;  use Symfony\\Component\\EventDispatcher\\EventSubscriberInterface; use Symfony\\Component\\HttpKernel\\Event\\FilterResponseEvent; use Symfony\\Component\\HttpKernel\\KernelEvents;  class HelloListener implements EventSubscriberInterface {     public function onResponse(FilterResponseEvent $event)     {         echo 'hello world';     }      public static function getSubscribedEvents()     {         return [             KernelEvents::RESPONSE =&gt; 'onResponse',         ];     } }   Sau khi tạo, hiển thị bất kỳ trang nào sẽ thấy “hello world”.   Nếu không hiển thị, hãy xoá cache bằng lệnh bin/console cache:clear --no-warmup. Có thể kiểm tra các event listener đã đăng ký bằng bin/console debug:event-dispatcher.   Tham khảo thêm:      The HttpKernel Component   Events and Event Listeners   Built-in Symfony Events   Command   Bạn có thể tạo command chạy từ bin/console.   Tạo command hiển thị “hello world”   Tạo file HelloCommand.php trong app/Customize/Command.   &lt;?php  namespace Customize\\Command;  use Symfony\\Component\\Console\\Command\\Command; use Symfony\\Component\\Console\\Input\\InputInterface; use Symfony\\Component\\Console\\Output\\OutputInterface; use Symfony\\Component\\Console\\Style\\SymfonyStyle;  class HelloCommand extends Command {     // Tên command     protected static $defaultName = 'acme:hello';      protected function execute(InputInterface $input, OutputInterface $output)     {         $io = new SymfonyStyle($input, $output);          // Hiển thị hello world         $io-&gt;success('hello world');     } }      $defaultName là tên command.   $io-&gt;success('hello world') để hiển thị hello world.   Sau khi tạo, có thể chạy bằng lệnh:   $ bin/console acme:hello   [OK] hello world   Nếu không nhận diện được command, hãy xoá cache bằng bin/console cache:clear --no-warmup.   Tham khảo thêm:      Console Commands   Doctrine Event   Bạn có thể sử dụng hệ thống sự kiện của Doctrine.   Tạo event listener thêm “Chào mừng” vào tên shop   Tạo file HelloEventSubscriber.php trong app/Customize/Doctrine/EventSubscriber.   &lt;?php  namespace Customize\\Doctrine\\EventSubscriber;  use Doctrine\\Common\\EventSubscriber; use Doctrine\\Common\\Persistence\\Event\\LifecycleEventArgs; use Doctrine\\ORM\\Events; use Eccube\\Entity\\BaseInfo;  class HelloEventSubscriber implements EventSubscriber {     public function getSubscribedEvents()     {         return [Events::postLoad];     }      public function postLoad(LifecycleEventArgs $args)     {         $entity = $args-&gt;getObject();         if ($entity instanceof BaseInfo) {             $shopName = $entity-&gt;getShopName();             $shopName = 'Chào mừng '.$shopName.' đến với shop';             $entity-&gt;setShopName($shopName);         }     } }   Sau khi tạo, mở trang chủ sẽ thấy “Chào mừng [Tên shop] đến với shop”.   Nếu không hiển thị, hãy xoá cache bằng lệnh bin/console cache:clear --no-warmup.   Tham khảo thêm:      The Event System   Doctrine Event Listeners and Subscribers   ※ Doctrine Event Listeners and Subscribers hướng dẫn cấu hình trong services.yaml, nhưng EC-CUBE sẽ tự động đăng ký event listener, không cần cấu hình thêm.   Sử dụng Bundle của Symfony   TODO   ","categories": [],
        "tags": ["core","symfony"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/customize_symfony",
        "teaser":null},{
        "title": "Tuỳ biến Template",
        "excerpt":"Tuỳ biến Template     Thay đổi Twig   Định nghĩa hàm Twig người dùng #2263  ","categories": [],
        "tags": ["core","template"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/customize_template",
        "teaser":null},{
        "title": "Tuỳ biến chức năng throttling",
        "excerpt":"  Chức năng throttling   ※Chức năng này có từ EC-CUBE 4.2.1.      EC-CUBE/ec-cube#5881   EC-CUBE/ec-cube#5942   Chức năng throttling được thêm vào để hạn chế truy cập, ví dụ như chống brute force vào credit master.   Có thể throttling theo IP hoặc theo hội viên.   Các chức năng, số lần thử… được áp dụng mặc định như sau:                  Màn hình       Routing       Theo IP       Theo hội viên       Ghi chú                       Đăng ký hội viên       entry       25 lần/30 phút       -       Khi chuyển từ màn hình nhập sang xác nhận                 Đăng ký hội viên (hoàn tất)       entry       5 lần/30 phút       -       Khi hoàn tất đăng ký hội viên                 Quên mật khẩu       forgot       5 lần/30 phút       -                         Liên hệ       contact       5 lần/30 phút       -                         Xác nhận đơn hàng       shopping_confirm       25 lần/30 phút       10 lần/30 phút       Thực hiện trước khi chuyển sang xử lý thanh toán                 Hoàn tất đơn hàng       shopping_checkout       25 lần/30 phút       10 lần/30 phút       Thực hiện trước khi chuyển sang xử lý thanh toán                 Sửa thông tin hội viên       mypage_change       -       10 lần/30 phút       Chỉ áp dụng cho hội viên đã đăng nhập                 Thêm địa chỉ giao hàng       mypage_delivery_new       -       10 lần/30 phút       Chỉ áp dụng cho hội viên đã đăng nhập                 Sửa địa chỉ giao hàng       mypage_delivery_edit       -       10 lần/30 phút       Chỉ áp dụng cho hội viên đã đăng nhập                 Xoá địa chỉ giao hàng       mypage_delivery_delete       -       10 lần/30 phút       Chỉ áp dụng cho hội viên đã đăng nhập                 Sửa nhiều địa chỉ giao hàng       shopping_shipping_multiple_edit       -       10 lần/30 phút       Chỉ áp dụng cho hội viên đã đăng nhập                 Sửa địa chỉ giao hàng trong giỏ       shopping_shipping_edit       -       10 lần/30 phút       Chỉ áp dụng cho hội viên đã đăng nhập                 Đăng nhập quản trị (2FA)       admin_two_factor_auth       -       5 lần/30 phút       Chỉ áp dụng cho quản trị viên đã đăng nhập           Bạn cũng có thể sử dụng chức năng này trong Plugin hoặc Customize.   Ví dụ mở rộng   Cấu hình bằng yaml   Cấu hình như sau để tự động throttling theo routing.   Có thể chỉ định kiểm soát theo IP hoặc hội viên (hoặc quản trị viên).   File yaml:      Customize: app/Customize/Resource/config/services.yaml   Plugin: app/Plugin/[Plugin Code]/Resource/config/services.yaml   eccube:     rate_limiter:         forgot:             route: forgot # Routing cần throttling             method: ['POST'] # Phương thức cần throttling, mặc định là POST             type: ip # Kiểm soát theo ip, user. Có thể chỉ định nhiều (từ 4.2.3 dùng user thay cho customer)             limit: 5             interval: '30 minutes'         entry:             route: entry             method: ['POST']             params:                 mode: complete # Nếu có bước xác nhận, chỉ định param             type: [ 'ip', 'user' ]             limit: 5             interval: '30 minutes'         shopping_confirm_ip:             route: ~ # Nếu route là null thì không tự động thực thi             limit: 25             interval: '30 minutes'   Tự triển khai throttling riêng   Chỉ định route là null để chỉ tạo RateLimiter, không tự động thực thi.   eccube:     rate_limiter:         hoge:             route: ~              limit: 25             interval: '30 minutes'   Inject RateLimiterFactory vào controller để sử dụng:   class HogeController {    public function index(RateLimiterFactory $hogeLimiter, Request $request) {     $limiter = $hogeLimiter-&gt;create($request-&gt;getClientIp());     if (!$limiter-&gt;consume()-&gt;isAccepted()) {         throw new TooManyRequestsHttpException();     }   }    Ghi đè cấu hình mặc định   Có thể ghi đè cấu hình mặc định của core hoặc plugin bằng Customize.   Ví dụ, core có cấu hình:   eccube:  rate_limiter:   forgot:    route: forgot    method: ['POST']    type: ip    limit: 5    interval: '30 minutes'   Customize ghi đè như sau:   eccube:  rate_limiter:   forgot:    limit: 10    interval: '60 minutes'   Xoá cache throttling   Xoá cache bằng lệnh:   bin/console cache:pool:clear rate_limiter.cache --env=&lt;APP_ENV&gt;    Thay đổi nơi lưu thông tin throttling   Mặc định lưu bằng file system.   Có thể thay đổi tại app/config/eccube/packages/rate_limiter.yml.   # config/packages/rate_limiter.yaml framework:     cache:         pools:             rate_limiter.cache:                 adapter: cache.adapter.filesystem   Tham khảo: https://symfony.com/doc/5.4/cache.html   Hiện tại, EC-CUBE/ec-cube#5957 có bug, không thể dùng cache.adapter.doctrine_dbal. Nếu cần HA, hãy dùng redis hoặc memcached.   Throttling đăng nhập   Tham khảo thêm:      EC-CUBE/ec-cube#4249   EC-CUBE/ec-cube#5473   EC-CUBE/ec-cube#6035   EC-CUBE/ec-cube#6038   Tham khảo   Chức năng throttling sử dụng symfony/rate-limiter. Tham khảo thêm tại tài liệu Symfony:   Rate Limiter  ","categories": [],
        "tags": ["core","throttling"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/customize_throttling",
        "teaser":null},{
        "title": "Kiểm soát danh sách cho phép với Twig Sandbox",
        "excerpt":"  Kiểm soát danh sách cho phép với Twig Sandbox   ※Chức năng này có từ EC-CUBE 4.2.3.   Để tăng cường bảo mật, EC-CUBE bổ sung chức năng kiểm soát bằng danh sách cho phép nhằm ngăn chặn việc thực thi các chức năng twig không mong muốn. Với chức năng này, bạn có thể lựa chọn các chức năng (tag, filter, function) được phép sử dụng trong twig.   Tips: Về chức năng của twig   EC-CUBE sử dụng twig làm template engine. Twig cho phép sử dụng các hàm, biến, giúp xây dựng View linh hoạt. Tuy nhiên, nếu lạm dụng, có thể gây rò rỉ thông tin ngoài ý muốn.   Mặc định, output từ template twig của EC-CUBE sẽ được escape HTML. Tuy nhiên, nếu dùng filter như raw, bạn có thể bỏ escape một cách chủ động. Nếu dữ liệu đầu vào là từ bên ngoài, điều này có thể bị lợi dụng để tấn công.   {{ variable|raw }}   Kiểm soát chức năng bằng Sandbox   Để loại bỏ rủi ro trên, EC-CUBE áp dụng Sandbox cho các khu vực sau:      Free area trên trang chi tiết sản phẩm   Meta tag (Quản trị &gt; Quản lý nội dung &gt; Quản lý trang &gt; Meta tag)   Trong Sandbox, chỉ các chức năng twig có trong danh sách cho phép mới được sử dụng. (Các chuỗi ký tự thông thường vẫn ghi bình thường)      Danh sách cho phép mặc định   ※Chỉ các chức năng twig liệt kê dưới đây mới dùng được trong Sandbox. Nếu cần thêm chức năng khác, hãy bổ sung vào danh sách cho phép.   Xem cấu hình danh sách cho phép mặc định   Chỉnh sửa danh sách cho phép   Cấu hình bằng file yaml. Chỉnh sửa các file sau:      Danh sách cho phép mặc định: app/config/eccube/packages/twig_extensions.yaml   Nếu Customize: app/Customize/Resource/config/services.yaml   Chuẩn bị list dưới đây để thêm/bớt chức năng.   Đối với tag   parameters:     eccube.twig_sandbox.allowed_tags:         - 'apply'         - 'block'         - 'deprecated'         - 'embed'         - 'extends'         - 'flush' # ...   Đối với filter       eccube.twig_sandbox.allowed_filters:         - 'abs'         - 'batch'         - 'capitalize'         - 'column'         - 'convert_encoding'         - 'country_name' # ...   Đối với function       eccube.twig_sandbox.allowed_functions:         - 'cycle'         - 'date'         - 'max'         - 'min'         - 'random'         - 'range' # ...   Khác   Nếu muốn kiểm soát method/property, chỉnh các mục sau:       eccube.twig_sandbox.allowed_methods:         'Symfony\\Bridge\\Twig\\AppVariable': [ 'getrequest' ]         'Symfony\\Component\\HttpFoundation\\Request': [ 'geturi' ]     eccube.twig_sandbox.allowed_properties: []   Hành vi của Sandbox   Hiện tại, nếu có code không nằm trong danh sách cho phép trong Sandbox:      Ở chế độ phát triển (APP_ENV=dev): “Hiển thị lỗi”   Ở chế độ production (APP_ENV=prod): “Ghi log lỗi và xoá nội dung không hợp lệ trong sandbox”   Trường hợp chế độ phát triển   Sẽ hiển thị màn hình lỗi như sau:      Trường hợp production   Log sẽ ghi lại nội dung như sau:   Filter \"abs\" is not allowed in \"__string_template__cceb5b1ce6c6124b4a33368da2e5f5c5\" at line 3      Nếu thông tin chi tiết sản phẩm từng hiển thị nay không còn   Có thể do sử dụng keyword không có trong danh sách cho phép của Sandbox. Hãy kiểm tra log xem có bị hạn chế keyword không. Nếu có, hãy kiểm tra danh sách cho phép và bổ sung nếu cần.   Tham khảo   Chức năng kiểm soát danh sách cho phép này sử dụng Sandbox của twig. Tham khảo thêm tại:   Sandbox Extension  ","categories": [],
        "tags": ["core","twig","sandbox"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/customize_twig_sandbox",
        "teaser":null},{
        "title": "Sử dụng Block",
        "excerpt":"Cách sử dụng Block  EC-CUBE có chức năng quản lý block, cho phép bạn thay đổi thiết kế bằng cách thay đổi vị trí các block đã có sẵn.  Bạn cũng có thể tạo block mới, sau đó bố trí block vừa tạo từ màn hình quản lý layout để dễ dàng thêm hoặc chỉnh sửa thiết kế.   Tạo mới block trong quản lý block   Sau khi đăng nhập vào trang quản trị,  Từ [Quản lý nội dung] -&gt; [Quản lý block], nhấn nút “Nhập mới” để tạo nội dung cho block.    Sau khi nhấn nút “Nhập mới”,      Nhập tên block, tên file (phải là duy nhất), và nhập mã html muốn xuất ra vào phần dữ liệu block, sau đó nhấn nút “Đăng ký” để tạo block.   Cách bố trí block, vui lòng xem tại Quản lý layout.   Xóa block   Các block mặc định không thể xóa, chỉ có thể xóa các block do bạn tự tạo mới.  ","categories": [],
        "tags": ["thiết kế"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/design_block",
        "teaser":null},{
        "title": "Sử dụng CSS",
        "excerpt":"Về việc sử dụng CSS   Trong EC-CUBE, có hai cách để chỉnh sửa CSS:      Chỉnh sửa từ Quản lý CSS trong trang quản trị   Chỉnh sửa trực tiếp file style.css   Một số CSS như slide của hình ảnh chính trên trang chủ được viết trực tiếp trong file twig.  Bạn có thể chỉnh sửa tại [Quản lý nội dung] -&gt; [Quản lý trang] -&gt; Trang TOP trong trang quản trị EC-CUBE.   Chỉnh sửa từ Quản lý CSS trong trang quản trị   Từ [Quản lý nội dung] -&gt; [Quản lý CSS] trong trang quản trị EC-CUBE, bạn có thể viết mã CSS.      Mã bạn viết trong [Quản lý CSS] sẽ được phản ánh vào file customize.css trong thư mục sau:    [html]  └─ [user_data]      └─ [assets]          └─ [css]              └─ customize.css   CSS chỉnh sửa từ trang quản trị (customize.css) sẽ được ưu tiên hơn style.css.   Chỉnh sửa trực tiếp file style.css   CSS của EC-CUBE được tập trung trong file style.css ở thư mục sau:  Về mặt bảo trì CSS, bạn cũng nên cân nhắc sử dụng Sass như sẽ giới thiệu bên dưới.      style.css được lưu tại thư mục sau:   [html]  └─ [template]      └─ [default]             └─[assets]                  ├─ [css]                  │    ├─ style.css     # CSS được sử dụng                  │    └─ style.min.css # CSS phiên bản rút gọn                  └─ [sass]                       ├─...   Về Style Guide   EC-CUBE cung cấp ‘Style Guide’ để bạn có thể kiểm tra các nguyên tắc thiết kế và quy tắc code cho CSS và HTML. Tham khảo thêm tại các link sau:      Style Guide cho giao diện người dùng   Style Guide cho trang quản trị  ","categories": [],
        "tags": ["thiết kế"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/design_css",
        "teaser":null},{
        "title": "Thay đổi bố cục form",
        "excerpt":"Cấu trúc màn hình form  Khi tạo màn hình form, bạn không nên viết trực tiếp thẻ &lt;input type=\"text\" name=\"hoge\"&gt; mà nên sử dụng các hàm Twig để tạo form.   Để hiểu rõ hơn về form, hãy tham khảo trang của Symfony:  https://symfony.com/doc/current/forms.html  https://symfony.com/doc/current/best_practices/forms.html   Cách xuất nội dung form  Khi tạo màn hình form với Twig, bạn sử dụng các hàm và biến chuyên dụng.   {{ form(form) }} → 'form' ở đây là tên key được truyền từ Controller  Khi viết như trên, các trường của form sẽ được hiển thị. Nếu muốn xuất riêng từng trường:   {{ form_row(form.name) }} hoặc {{ form_widget(form.name) }}   Thay đổi bố cục form  Khi sử dụng hàm form, các thẻ sẽ tự động được thêm vào để tạo màn hình form, nhưng đôi khi bạn muốn thay đổi thiết kế form cho phù hợp.   EC-CUBE cung cấp sẵn template để xuất nội dung form, bạn có thể chỉnh sửa file này để thay đổi thiết kế khi xuất form.   Vị trí các file bố cục form cho frontend và admin:           Bố cục form cho frontend  ECCUBEROOT/src/Eccube/Resource/template/default/Form/form_div_layout.twig            Bố cục form cho admin  ECCUBEROOT/src/Eccube/Resource/template/admin/Form/bootstrap_4_layout.html.twig ECCUBEROOT/src/Eccube/Resource/template/admin/Form/bootstrap_4_horizontal_layout.html.twig       Nội dung file form_div_layout.twig sử dụng ở frontend   Nội dung bố cục form được định nghĩa bằng các block (ví dụ: form_errors, form_label) và có thể ghi đè lại theo ý muốn. Các block như form_errors hay form_label tương ứng với các hàm Twig.   Nội dung file form_div_layout.twig   {#  - form_div_layout.html.twig  - https://github.com/symfony/symfony/blob/master/src/Symfony/Bridge/Twig/Resources/views/Form/form_div_layout.html.twig #} {%- extends 'form_div_layout.html.twig' -%}  {%- block form_errors -%}     {%- if errors|length &gt; 0 -%}         {%- for error in errors -%}             &lt;p class=\"ec-errorMessage\"&gt;{{ error.message|trans({}, translation_domain) }}&lt;/p&gt;         {%- endfor -%}     {%- endif -%} {%- endblock form_errors -%}  {%- block form_label -%}     {{ parent() }}     {%- if required -%}         &lt;span class=\"ec-required\"&gt;{{'common.text.message.required'|trans}}&lt;/span&gt;     {%- endif -%} {%- endblock form_label -%}  {% block choice_widget %}     {% if type is defined and type == 'hidden' %}         {{ block('form_widget_simple') }}     {% else %}         {{ parent() }}     {% endif %} {% endblock %}  {%- block textarea_widget -%}     {% if type is defined and type == 'hidden' %}         {{ block('form_widget_simple') }}     {% else %}         {{ parent() }}     {% endif %} {%- endblock textarea_widget -%}  Ví dụ, nếu muốn thay đổi thiết kế hiển thị lỗi bằng form_errors:   {%- block form_errors -%}     {%- if errors|length &gt; 0 -%}         &lt;ul&gt;         {%- for error in errors -%}             &lt;li&gt;{{ error.message|trans({}, translation_domain) }}&lt;/li&gt;         {%- endfor -%}         &lt;/ul&gt;     {%- endif -%} {%- endblock form_errors -%}   Chỉ cần đổi thẻ p thành ul là có thể thay đổi cách hiển thị lỗi.   Các hàm Twig khác cũng có thể thay đổi thiết kế bằng cách ghi đè nội dung block tương ứng.   Cách sử dụng thiết kế form ở frontend   Khi sử dụng form ở frontend, bạn cần khai báo rõ theme cho form bằng dòng sau: {% form_theme form 'Form/form_div_layout.twig' %} Dòng này dùng để chỉ định theme cho form.   Cách sử dụng   {% extends 'default_frame.twig' %}  {% form_theme form 'Form/form_div_layout.twig' %}  {% block main %} ・ ・ ・ {{ form_widget(form.name.name01, {'attr': {'placeholder': 'signup.label.family_name'}}) }} ・ ・ ・ {% endblock %}   Trong đó,   {% form_theme form 'Form/form_div_layout.twig' %}   và   {{ form_widget(form.name.name01, {'attr': {'placeholder': 'signup.label.family_name'}}) }}   biến form là tên biến được truyền từ Controller. Nếu Controller truyền sang là form1, bạn cần viết:   {% form_theme form1 'Form/form_div_layout.twig' %}   hoặc   {{ form_widget(form1.name.name01, {'attr': {'placeholder': 'signup.label.family_name'}}) }}   Để tìm hiểu chi tiết hơn về tuỳ biến form, hãy tham khảo trang Symfony:  http://symfony.com/doc/current/form/form_customization.html  ","categories": [],
        "tags": ["thiết kế"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/design_form",
        "teaser":null},{
        "title": "Quản lý hình ảnh",
        "excerpt":"Về hình ảnh  Khi muốn thêm hình ảnh khi tùy chỉnh thiết kế  Có hai cách: thêm trực tiếp vào thư mục hoặc upload từ trang quản trị.   Cách thêm trực tiếp vào thư mục hình ảnh   Đường dẫn thư mục hình ảnh           Thư mục mặc định    ECCUBEROOT/html/template/default/assets/img/    ※ ECCUBEROOT là thư mục cài đặt EC-CUBE.            Thư mục mặc định khi sử dụng template thiết kế riêng    ECCUBEROOT/html/template/[template_code]/assets/img/    → [template_code] là mã nhận diện template.    Mặc định với frontend là “default”       Cách liên kết tới hình ảnh  Khi muốn gọi hình ảnh, hãy viết theo cú pháp twig như sau:  {{ asset('assets/img/tên_thư_mục/tên_hình_ảnh') }}   Ví dụ: muốn hiển thị hình hoge.jpg trong thư mục top  &lt;img src=\"{{ asset('assets/img/top/hoge.jpg') }}\" alt=\"hoge\"&gt;   Cũng có thể viết như sau, nhưng khi đổi template có thể không hiển thị:  &lt;img src=\"html/template/defult/assets/img/top/hoge.jpg\" alt=\"hoge\"&gt;   Cách thêm hình ảnh từ trang quản trị  Ngay cả khi không thể upload lên ec-cube.co hoặc server, bạn vẫn có thể thêm file hình ảnh từ trang quản trị.   Upload hình ảnh  Từ [Quản lý nội dung] -&gt; [Quản lý file] có thể upload hình ảnh.   Ngoài hình ảnh, bạn cũng có thể upload các file khác.  Khi upload, nên tạo thư mục img trong assets để quản lý dễ dàng hơn.      Chọn file từ “Thêm file”, sau đó nhấn nút upload để thêm file.  ※ Có thể chọn nhiều file cùng lúc bằng Shift hoặc Ctrl khi chọn file.      Đường dẫn thư mục chứa hình ảnh upload từ trang quản trị  Hình ảnh upload sẽ được lưu trong thư mục user_data.      Đường dẫn tới hình ảnh upload    ECCUBEROOT/html/user_data/assets/tên_thư_mục/tên_hình_ảnh    ※ ECCUBEROOT là thư mục cài đặt EC-CUBE.   Cách liên kết tới hình ảnh upload từ trang quản trị  Hình ảnh upload sẽ xuất hiện trong danh sách file.  Nhấn vào icon copy để lấy link hình ảnh và tự động copy vào clipboard.      Ví dụ: muốn hiển thị hình hoge.png trong thư mục img  &lt;img src=\"/html/user_data/assets/img/hoge.png\" alt=\"hoge\"&gt;   Cũng có thể viết như sau:  &lt;img src=\"{{ asset('assets/img/hoge.png','user_data') }}\" alt=\"hoge\"&gt;   【Bổ sung】Về hình ảnh upload từ Quản lý sản phẩm &gt; Đăng ký sản phẩm  Hình ảnh upload khi đăng ký sản phẩm sẽ được lưu ở thư mục khác.  Không nên thêm trực tiếp vào thư mục này.      Đường dẫn tới hình ảnh upload từ đăng ký sản phẩm   ECCUBEROOT/html/upload/save_image/   ※ ECCUBEROOT là thư mục cài đặt EC-CUBE.   Cách liên kết tới hình ảnh upload từ đăng ký sản phẩm  Khi muốn gọi hình ảnh, hãy viết theo cú pháp twig như sau:  {{ asset('tên_hình_ảnh', 'save_image') }}  Tên hình ảnh sẽ bị đổi khi upload, hãy kiểm tra tên hình ảnh hiển thị trên trang chi tiết sản phẩm.   Ví dụ: muốn hiển thị hình hoge-1.jpg  &lt;img src=\"{{ asset('hoge-1.jpg', 'save_image') }}\" alt=\"hoge\"&gt;  ","categories": [],
        "tags": ["thiết kế"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/design_img",
        "teaser":null},{
        "title": "Sử dụng Layout",
        "excerpt":"Về quản lý layout  EC-CUBE 4 có chức năng mới gọi là “Quản lý layout”. Chức năng này cho phép:      Thiết lập layout chung cho từng trang   Có thể nhóm layout cho từng trang như trang chủ và các trang khác   Hỗ trợ layout cho thiết bị di động   Như vậy, layout có thể được thiết lập một cách linh hoạt.      Màn hình quản lý layout     Cách sử dụng quản lý layout   Ở phiên bản 2.x, 3.x, nếu muốn đặt một block cho tất cả các trang ngoài trang chủ, bạn phải đặt block đó cho từng trang một.   Với quản lý layout mới, bạn có thể nhóm các trang thành “Layout cho trang chủ” và “Layout cho các trang con”, từ đó dễ dàng đặt block cho từng nhóm trang.  Mặc định có sẵn “Layout cho trang chủ” và “Layout cho các trang con”, cho phép bạn thiết kế khác nhau cho từng nhóm.   Bạn cũng có thể tạo layout mới, đặt các block khác nhau cho từng layout và gán layout đó cho các trang mong muốn.   Để thay đổi layout cho frontend, vào [Quản lý nội dung] → [Quản lý layout] trong trang quản trị, nhấn vào tên layout để chỉnh sửa.           Ví dụ layout cho trang chủ              Ví dụ layout cho các trang con         Kéo thả block mới tạo từ danh sách block chưa sử dụng vào vị trí mong muốn.  Bạn cũng có thể tạo block mới và bố trí từ quản lý layout để dễ dàng thêm hoặc chỉnh sửa thiết kế.  ","categories": [],
        "tags": ["thiết kế"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/design_layout",
        "teaser":null},{
        "title": "Tuỳ chỉnh thông điệp (message)",
        "excerpt":"Vị trí lưu file thông điệp      Thư mục mặc định chứa file thông điệp  src/Eccube/Resource/locale/   Tên trường và thông điệp lỗi được tập trung trong các file sau:           Tiếng Nhật  src/Eccube/Resource/locale/messages.ja.yaml  src/Eccube/Resource/locale/validators.ja.yaml            Tiếng Anh  src/Eccube/Resource/locale/messages.en.yaml  src/Eccube/Resource/locale/validators.en.yaml       Vị trí lưu file khi tuỳ chỉnh thông điệp      Thư mục lưu file thông điệp tuỳ chỉnh  app/Customize/Resource/locale/   Khi sử dụng tuỳ chỉnh thông điệp, các file sẽ được lưu tại thư mục này.  Bạn thêm hoặc sửa thông điệp tuỳ ý vào các file sau:           Tiếng Nhật  app/Customize/Resource/locale/messages.ja.yaml  app/Customize/Resource/locale/validators.ja.yaml            Tiếng Anh  app/Customize/Resource/locale/messages.en.yaml    app/Customize/Resource/locale/validators.en.yaml       Thay đổi/Thêm thông điệp   File thông điệp là file yaml dạng hash. Key là ID của thông điệp, value là chuỗi đã dịch.  Ví dụ một phần của src/Eccube/Resource/locale/messages.ja.yaml:   #==================================================================================== # Chung #====================================================================================  common.select: Vui lòng chọn common.select__pref: Chọn tỉnh/thành phố common.select__unspecified: Không chỉ định common.select__all_products: Tất cả sản phẩm    Khi muốn thay đổi/thêm thông điệp, hãy ghi vào app/Customize/Resource/locale/messages.ja.yaml như sau:   #==================================================================================== # Thay đổi #==================================================================================== common.select: [Chuỗi muốn ghi đè]  #==================================================================================== # Thêm mới #==================================================================================== [ID thông điệp mới]: [Chuỗi muốn định nghĩa]    Về phiên bản trước 4.0.3   Với phiên bản trước 4.0.3, đường dẫn app/Customize/Resource/locale/ chưa được thêm vào, nên cần thêm dòng sau vào file app/config/eccube/packages/translation.yaml:   framework:     default_locale: '%locale%'     translator:         paths:             - '%kernel.project_dir%/src/Eccube/Resource/locale/'             - '%kernel.project_dir%/app/Customize/Resource/locale/'         fallbacks:             - '%locale%'   ","categories": [],
        "tags": ["thiết kế"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/design_messages",
        "teaser":null},{
        "title": "Tạo trang mới",
        "excerpt":"Về quản lý trang  EC-CUBE 4.0, chức năng “Quản lý trang” chỉ dùng để thêm mới và chỉnh sửa trang, việc bố trí block cho từng trang sẽ thực hiện ở Quản lý layout.  Quản lý trang vẫn cho phép chỉnh sửa trang như các phiên bản 2.x, 3.x.   Tạo mới trang trong quản lý trang   Sau khi đăng nhập vào trang quản trị,  Từ [Quản lý nội dung] -&gt; [Quản lý trang], nhấn nút “Nhập mới” để tạo trang mới.      Nhập tên trang, URL, tên file (phải là duy nhất), nhập mã html muốn hiển thị vào phần chỉnh sửa mã, sau đó nhấn nút “Đăng ký” để tạo trang.  Lưu ý: Nếu đặt tên file trùng với file đã có, trang mới sẽ ghi đè lên trang cũ.   Khi tạo trang mới, hãy viết như sau:   {% extends 'default_frame.twig' %}  {% block main %}     Viết mã html tại đây {% endblock %}  Nếu không viết {% extends 'default_frame.twig' %}, {% block main %}, {% endblock %} thì header sẽ không hiển thị, vì vậy cần phải có các dòng này.   Xoá trang   Các trang mặc định không thể xoá, chỉ có thể xoá các trang do bạn tự tạo mới.  ","categories": [],
        "tags": ["thiết kế"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/design_page",
        "teaser":null},{
        "title": "Cách sử dụng Sass (scss)",
        "excerpt":"CSS của EC-CUBE được viết bằng Sass(scss).      Vị trí lưu source scss   Cấu trúc thư mục và file scss   Cách build Sass(scss)   Vị trí lưu source Sass(scss)     Source Sass được lưu tại thư mục sau:   [html]  └─ [template]      └─ [default] # admin là cho trang quản trị          └─ [assets]              ├─ [css]              └─ [scss]   Cấu trúc thư mục và file scss   Thư mục scss được cấu trúc để dễ bảo trì.  Về thiết kế component và quy tắc viết CSS, EC-CUBE áp dụng quy tắc FLOCSS.  Tham khảo thêm Style Guide.   [assets]  ├─ [css]  │    ├─ style.css     # CSS được build ra từ scss  │    └─ style.min.css # CSS rút gọn được build ra từ scss  └─ [sass]       ├─ [component]   # Chứa các module nhỏ (component) cơ bản       ├─ [project]     # Chứa các module lớn như header, footer, trang chủ       ├─ [mixins]      # Chứa các thiết lập style tái sử dụng       ├─ [sections]    # Dùng để ghi đè       └─ style.scss    # File import các scss khác           component  Chứa các module nhỏ như tiêu đề, nút bấm, v.v…  Tham khảo Style Guide mục 1-9            project  Chứa các module lớn như header, footer, trang chủ, v.v…  Tham khảo Style Guide mục 11-22            mixins   Chứa các thiết lập style tái sử dụng hoặc dùng nhiều nơi.            sections  Dùng để ghi đè các class CSS của component hoặc project.  Khi sử dụng, hãy thêm vào style.scss như sau:       @import \"sections/components\"; @import \"sections/projects\";      style.scss  File này import các file scss khác.  style.scss sẽ được build thành style.css và style.min.css.   Về Style Guide   EC-CUBE cung cấp ‘Style Guide’ để bạn có thể kiểm tra các nguyên tắc thiết kế và quy tắc code cho CSS và HTML. Tham khảo thêm tại các link sau:      Style Guide cho giao diện người dùng   Style Guide cho trang quản trị   Cách build Sass(scss)      Chuẩn bị môi trường build   Cách build cho EC-CUBE 4.0.3 trở về trước   Cách build cho EC-CUBE 4.0.4 trở lên   Chuẩn bị môi trường build   EC-CUBE sử dụng Gulp để build Sass.  Yêu cầu cài đặt Node.js trước.           Node.js  Gulp chạy trên nền Node.js.  ※ Một số phiên bản Node.js mới có thể gây lỗi khi chạy Gulp, tham khảo tại đây.            Gulp  Dùng để chuyển đổi file Sass thành CSS.  EC-CUBE 4.0.3 trở về trước dùng Gulp3, từ 4.0.4 dùng Gulp4       1. Cài Node.js vào máy tính    Tải Node.js từ trang chủ Node.js và cài đặt.  Kiểm tra Node.js đã cài bằng lệnh sau:  node -v   2. Di chuyển vào thư mục gốc của ec-cube  Di chuyển vào thư mục chứa package.json, gulpfile.js.   cd path/to/eccube_root # thay path/to/eccube_root bằng đường dẫn thư mục EC-CUBE   3. Tạo thư mục node_modules    Chạy lệnh sau để tạo thư mục node_modules:   npm install # tạo thư mục node_modules   Cách build cho EC-CUBE 4.0.3 trở về trước   Chạy lệnh sau để chuyển scss thành CSS:   npm run build # build scss thành style.css và style.min.css   CSS sau khi build sẽ được xuất ra html/template/{admin,default}/assets/css/.  Sẽ có file style.css và style.min.css (phiên bản rút gọn).   Lưu ý khi sử dụng template khác default ở EC-CUBE 4.0.3 trở về trước   Nếu bạn đổi template sang tên khác ngoài default, cần sửa giá trị trong gulpfile.js:  Sửa phần default trong srcPattern tại eccube_root/gulpfile.js:  [ec-cube_root]  └─ gulpfile.js # sửa thiết lập srcPattern   const srcPattern = [     'admin',     'default' // đổi 'default' thành tên template đang dùng ];  ※ Từ EC-CUBE 4.0.4 trở lên không cần thiết lập này.  ※ Một số template có thể có vị trí/lưu trữ Sass khác, hãy tham khảo tài liệu của template bạn mua.   Cách build cho EC-CUBE 4.0.4 trở lên   Từ 4.0.4, đã bổ sung chức năng tự động build (watch).  Lưu ý cho Windows   File cấu hình nằm ở gulp/config.js, hãy thiết lập trước khi build.   npm run build # build scss thành style.css và style.min.css  npm run watch # theo dõi thay đổi scss, tự động build style.css và style.min.css  npm run start # theo dõi, tự động build &amp; tự động reload trình duyệt   Dừng watch hoặc start: nhấn tổ hợp phím “Ctrl” + “C”   CSS sau khi build sẽ được xuất ra html/template/{admin,default}/assets/css/.  Sẽ có file style.css và style.min.css (phiên bản rút gọn).   【Lưu ý】Với Windows cần sửa một số đoạn mã   Ở bản đóng gói 4.0.4 trên Windows, có lỗi không build đúng file style.css, hãy sửa 2 chỗ sau trong gulpfile.js (dòng 90 và 115):  path.dirname = path.dirname.replace('/scss', '/css') # trước khi sửa   path.dirname = path.dirname.replace(/scss$/, 'css') # sau khi sửa  ","categories": [],
        "tags": ["thiết kế"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/design_sass",
        "teaser":null},{
        "title": "Cơ bản về template thiết kế",
        "excerpt":"Vị trí lưu file template mặc định   Giả sử thư mục cài đặt EC-CUBE là ECCUBEROOT.  Các file Twig mặc định của hệ thống được lưu tại các thư mục sau:           Thư mục mặc định cho giao diện người dùng (frontend)  ECCUBEROOT/src/Eccube/Resource/template/default            Thư mục mặc định cho trang quản trị  ECCUBEROOT/src/Eccube/Resource/template/admin            Thư mục mặc định cho trang cài đặt  ECCUBEROOT/src/Eccube/Resource/template/install       Vị trí lưu file khi tuỳ chỉnh thiết kế   Trong EC-CUBE, ngoài thư mục mặc định, bạn có thể lưu template thiết kế riêng của mình.   Khi tạo thiết kế mới, không nên chỉnh sửa trực tiếp template mặc định vì có thể bị ghi đè khi nâng cấp phiên bản.      Thư mục mặc định khi lưu template thiết kế riêng  ECCUBEROOT/app/template/[template_code]  → [template_code] là mã nhận diện template.  Mặc định với frontend là “default”, với admin là “admin”.   Thư mục này sẽ được sử dụng khi áp dụng template thiết kế.  Các file template thiết kế sẽ được lưu dưới thư mục này.   Các file resource sẽ được lưu tại ECCUBEROOT/html/template/[template_code].   Thứ tự ưu tiên khi gọi template   Thứ tự gọi file template như sau:      Frontend   1. ECCUBEROOT/app/template/[template_code] 2. ECCUBEROOT/src/Eccube/Resource/template/[template_code] 3. ECCUBEROOT/app/Plugin      Admin   1. ECCUBEROOT/app/template/admin 2. ECCUBEROOT/src/Eccube/Resource/template/admin 3. ECCUBEROOT/app/Plugin   Sẽ kiểm tra xem có template tuỳ chỉnh không, nếu không có sẽ gọi template mặc định.   Ví dụ gọi template      Ví dụ frontend  Nếu sử dụng template_code là “MyDesign” và trong Controller có định nghĩa @Template(\"TemplateDir/template_name.twig\")    1. app/template/MyDesign/TemplateDir/template_name.twig  2. src/Eccube/Resource/template/default/TemplateDir/template_name.twig  3. app/Plugin/[plugin_code]/Resource/template/TemplateDir/template_name.twig  Sẽ hiển thị theo thứ tự trên.      Ví dụ admin  Nếu sử dụng @Template(\"@admin/Product/index.twig\") và đã lưu file template vào app/template/admin, thứ tự gọi sẽ là:    1. app/template/admin/Product/index.twig  2. src/Eccube/Resource/template/admin/Product/index.twig  3. app/Plugin/[plugin_code]/Resource/template/admin/Product/index.twig   Hành vi của file template khi chỉnh sửa từ trang quản trị (chỉnh sửa trang, block)           Chi tiết trang  Mặc định sẽ hiển thị file tương ứng trong ECCUBEROOT/src/Eccube/Resource/template/default.  Khi chỉnh sửa từ chi tiết trang, file sẽ được lưu mới vào ECCUBEROOT/app/template/default/ và từ đó về sau sẽ chỉnh sửa file trong thư mục này.            Chỉnh sửa block  Mặc định sẽ hiển thị file tương ứng trong ECCUBEROOT/src/Eccube/Resource/template/default/Block.  Khi tạo mới hoặc chỉnh sửa block, file sẽ được lưu vào ECCUBEROOT/app/template/default/Block và từ đó về sau sẽ chỉnh sửa file trong thư mục này.      ","categories": [],
        "tags": ["thiết kế"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/design_template",
        "teaser":null},{
        "title": "MailCatcher",
        "excerpt":"Tổng quan   Khi xây dựng môi trường phát triển EC-CUBE trên máy tính, ngoài Web server bạn còn cần một mail server.   Bài viết này hướng dẫn cách xây dựng mail server sử dụng image công khai trên DockerHub.   Điều kiện tiên quyết   Yêu cầu đã cài đặt Docker for Mac hoặc Docker for Windows trên máy tính.   Sử dụng MailCatcher   Bằng cách sử dụng MailCatcher, bạn có thể thêm mail server SMTP vào môi trường phát triển.   Bạn có thể dễ dàng cài đặt mail server bằng cách lấy image MailCatcher từ DockerHub.   Cấu hình EC-CUBE   Thêm cấu hình sau vào file .env của EC-CUBE:   MAILER_URL=smtp://127.0.0.1:1025   Khởi động container Docker  Có 2 cách sau:   Sử dụng lệnh Docker  Chạy lệnh sau để sử dụng SMTP server:   $ docker run -d -p 1080:1080 -p 1025:1025 --name mailcatcher schickling/mailcatcher  $ docker ps CONTAINER ID        IMAGE                    COMMAND                  CREATED              STATUS              PORTS                                            NAMES 41290748f3ab        schickling/mailcatcher   \"mailcatcher --no-qu…\"   About a minute ago   Up 58 seconds       0.0.0.0:1025-&gt;1025/tcp, 0.0.0.0:1080-&gt;1080/tcp   mailcatcher   Dừng hoặc khởi động lại container:   # Dừng container $ docker stop mailcatcher  # Khởi động lại container $ docker start mailcatcher    Sử dụng Docker Compose   Nếu dùng docker-compose, hãy tạo file docker-compose.yml như sau:   version: '3'  services:   mailcatcher:           image: schickling/mailcatcher           ports:               - \"1080:1080\"               - \"1025:1025\"   $ docker-compose up -d  Chạy lệnh trên để tạo container MailCatcher.   Để dừng, dùng lệnh sau:   $ docker-compose down   Mail client   Truy cập http://127.0.0.1:1080/ bằng trình duyệt (ví dụ Google Chrome) sẽ thấy giao diện như sau:      Bạn có thể kiểm tra kết quả gửi mail ngay trên trình duyệt.   Tham khảo      https://mailcatcher.me/   https://hub.docker.com/r/schickling/mailcatcher/  ","categories": [],
        "tags": ["development-tools","mail-catcher"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/development-tools/mail-catcher",
        "teaser":null},{
        "title": "Đóng góp tài liệu",
        "excerpt":"Nội dung tài liệu phát triển được quản lý trên GitHub. Tương tự như mã nguồn EC-CUBE, hãy gửi PullRequest để bổ sung hoặc chỉnh sửa nội dung.   Khi tham gia phát triển   Vui lòng đọc kỹ README.md trên GitHub để nắm các lưu ý và hướng dẫn về môi trường phát triển trước khi gửi PullRequest.   Cách gửi PullRequest   Tham khảo hướng dẫn gửi PullRequest và gửi PullRequest tại đây.  ","categories": [],
        "tags": ["guideline"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/documents/contribute",
        "teaser":null},{
        "title": "Yêu cầu tài liệu",
        "excerpt":"Nội dung tài liệu phát triển được quản lý trên GitHub. Mọi yêu cầu, góp ý vui lòng đăng ISSUE trên GitHub.   Cách đăng ISSUE      Mở trang ISSUE của tài liệu phát triển EC-CUBE 4   Nhấn New issue      Nhập nội dung và nhấn Submit new issue   Ví dụ nội dung ISSUE   ## Tổng quan (Overview)  ## Nội dung mong đợi (Expect)  hoặc Yêu cầu (Requirement)  ## Thông tin liên quan (Ref)   ","categories": [],
        "tags": ["guideline"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/documents/request",
        "teaser":null},{
        "title": "Thêm & Viết tài liệu",
        "excerpt":"Cách thêm trang mới   Trang được tự động sinh bằng Jekyll. Chỉ cần đặt file markdown (.md) vào thư mục _pages trong source code tài liệu phát triển, trang sẽ tự động được thêm mới.   Cách viết phần header của markdown   Đây là thông tin header dùng khi sinh trang. Bắt buộc phải có ở mỗi trang.   --- title: Trang thử nghiệm description: Tổng hợp các lưu ý khi cài đặt công cụ và triển khai xxxx. permalink: test tags: [quickstart, install] ---   title: Sẽ là nội dung thẻ h1. description: Sẽ là og:description khi share. permalink: Đường dẫn URL của trang. Có thể viết dạng hoge/test. tags: Gắn tag cho trang.   Thêm vào menu bên trái   Thêm vào _data/navigation.yml. Có thể tạo menu con đến 2 cấp.   docs:   - title: Danh mục lớn     output: web, pdf     children:       - title: Nội dung         url: /quickstart_requirement         output: web, pdf       - title: Danh mục nhỏ         output: web, pdf         sub_items:         - title: Nội dung           url: /update           output: web, pdf   Cách viết nội dung trang      Viết bằng markdown.   Để xuống dòng (br tag) cần 2 dấu xuống dòng liên tiếp.   Khi link ra ngoài, thêm {:target=\"_blank\"}.   Có thể highlight code bằng cách viết “```php”.   Có thể sử dụng các Utility/Helpers template đã cung cấp:            Utility       Helpers           Ví dụ Utility   Bạn có thể đóng khung thông tin bổ sung để dễ đọc hơn.   Bạn cũng có thể tạo nút link  ","categories": [],
        "tags": ["howto"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/documents/writing-and-formatting",
        "teaser":null},{
        "title": "Tiền tệ",
        "excerpt":"Tổng quan   Mặc định, tiền tệ sẽ hiển thị là Yên Nhật. Bạn có thể chỉ định ký hiệu/định dạng tiền tệ tuỳ ý bằng cách thiết lập biến môi trường.   Cách chuyển đổi hiển thị tiền tệ   Bạn có thể chuyển đổi hiển thị tiền tệ bằng cách chỉ định locale/mã tiền tệ trong biến môi trường.   Tạo file .env ở thư mục gốc của EC-CUBE, thiết lập ECCUBE_LOCALE và ECCUBE_CURRENCY như sau:   //.env  ECCUBE_LOCALE=en ECCUBE_CURRENCY=USD   Sau khi thiết lập biến môi trường, chỉ cần reload trang là tiền tệ sẽ được chuyển đổi. Không cần xoá cache.   ※ Chức năng này chỉ chuyển đổi ký hiệu/định dạng tiền tệ, không thực hiện quy đổi tỷ giá.   PriceType   Đối với các trường nhập số tiền, EC-CUBE cung cấp PriceType mở rộng từ MoneyType. PriceType sẽ tự động xác định scale dựa trên giá trị của ECCUBE_CURRENCY.   Ví dụ, nếu chọn JPY thì scale là 0. Nếu chọn USD thì scale là 2, cho phép nhập đến 2 chữ số thập phân. ※ Nếu nhập quá scale, giá trị sẽ được làm tròn.   Dưới đây là ví dụ hiển thị khi thiết lập ECCUBE_LOCALE: en, ECCUBE_CURRENCY: USD:      price filter   Khi hiển thị số tiền trên twig, bạn có thể sử dụng filter price. Filter này sẽ tự động điều chỉnh ký hiệu và vị trí hiển thị tiền tệ.   Cách sử dụng như sau:   123      Tham khảo   Thêm chức năng chuyển đổi tiền tệ  ","categories": [],
        "tags": ["i18n","currency"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/i18n_currency",
        "teaser":null},{
        "title": "Chế độ debug",
        "excerpt":"Tổng quan   Khi bật chế độ debug, bạn có thể xem thông tin chi tiết như stack trace trên trang lỗi.   Ngoài ra, file cache sẽ được tạo lại mỗi lần request.   Việc bật chế độ debug bằng biến môi trường sẽ giúp phát triển thuận tiện hơn, nhưng khi truy cập từ trình duyệt, thông tin debug sẽ hiển thị công khai. Chỉ nên sử dụng chế độ debug khi phát triển local, khi public lên internet phải tắt chế độ debug.   Thiết lập chế độ debug   Mở file .env ở thư mục gốc dự án ec-cube, tìm biến APP_DEBUG.   Thay đổi giá trị của APP_DEBUG để bật/tắt chế độ debug.   Nếu APP_DEBUG=0, khi có lỗi chỉ hiển thị thông báo tối giản.   Nếu APP_DEBUG=1, chế độ debug sẽ được bật.   Khi có lỗi ở chế độ debug, màn hình sau sẽ hiển thị:      Thông thường, nên đặt APP_DEBUG=1 khi APP_ENV=dev hoặc APP_ENV=test, và đặt APP_DEBUG=0 khi APP_ENV=prod.   ","categories": [],
        "tags": ["debug","env"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/debug_mode",
        "teaser":null},{
        "title": "Thiết lập môi trường",
        "excerpt":"Tổng quan   Mở file .env ở thư mục gốc dự án ec-cube, bạn sẽ thấy biến APP_ENV.   Thay đổi giá trị APP_ENV để thiết lập các cấu hình khác nhau cho từng môi trường.   Khi bật chế độ phát triển bằng biến môi trường, bạn sẽ có nhiều chức năng hỗ trợ phát triển, nhưng thông tin nội bộ sẽ hiển thị khi truy cập từ trình duyệt. Chỉ nên sử dụng chế độ phát triển khi làm local, khi public lên internet phải chuyển sang chế độ production.   Ví dụ thiết lập   Môi trường production   Thiết lập như sau cho môi trường production:   APP_ENV=prod   Môi trường phát triển   Thiết lập như sau cho môi trường phát triển:   APP_ENV=dev   Môi trường test   Thiết lập như sau cho môi trường test:   APP_ENV=test   Vị trí file cấu hình   Các file cấu hình cho từng môi trường nằm trong thư mục app/config/eccube/packages/.   Hiển thị profiler   Khi APP_ENV=dev,   bạn có thể hiển thị thanh công cụ profiler của symfony.      Nhấn vào icon symfony,   sẽ hiển thị thanh công cụ ở dưới cùng màn hình như sau:      Bạn có thể kiểm tra SQL đã thực thi, nội dung request, tốc độ hiển thị và nhiều thông tin khác ngay trên trình duyệt.  ","categories": [],
        "tags": ["debug","env"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/environmental_setting",
        "teaser":null},{
        "title": "Đa ngôn ngữ",
        "excerpt":"Tổng quan   Mặc định sẽ hiển thị bằng tiếng Nhật, nhưng EC-CUBE đã tích hợp sẵn cơ chế hiển thị bằng tiếng Anh hoặc ngôn ngữ khác. Bạn có thể chuyển đổi ngôn ngữ hiển thị bằng cách chỉ định locale trong biến môi trường, hiện tại hỗ trợ tiếng Nhật và tiếng Anh.   Cách chuyển đổi ngôn ngữ   Chỉ định locale trong biến môi trường để chuyển đổi ngôn ngữ hiển thị.   Thiết lập ECCUBE_LOCALE trong file .env ở thư mục gốc EC-CUBE. Mặc định biến này sẽ bị comment. Nếu không thiết lập gì, hệ thống sẽ dùng tiếng Nhật.   //.env  #ECCUBE_LOCALE=ja ECCUBE_LOCALE=en    Sau khi thiết lập biến môi trường, chỉ cần reload trang là ngôn ngữ sẽ được chuyển đổi. Không cần xoá cache.   Chỉ định ngôn ngữ khi cài đặt   Để chỉ định ngôn ngữ khi cài đặt, thiết lập ECCUBE_LOCALE trong file .env.install ở thư mục gốc EC-CUBE. Nếu không chỉ định, hệ thống sẽ cài đặt bằng tiếng Nhật. Nếu có dữ liệu khởi tạo cho ngôn ngữ đó trong /src/Eccube/Resource/doctrine/import_csv, dữ liệu master sẽ được cài đặt theo ngôn ngữ đã chọn.   //.env.install  ECCUBE_LOCALE=en    Sau khi cài đặt, mặc định hệ thống sẽ dùng tiếng Nhật. Nếu muốn sử dụng ngôn ngữ khác, hãy chỉnh lại giá trị ECCUBE_LOCALE trong .env.install.   ※ Hiện tại, dữ liệu lưu trong database sẽ không được dịch tự động. ※ Cả trang shop và trang quản trị đều sẽ chuyển đổi ngôn ngữ hiển thị.   File message (file dịch)   Các file message được lưu trong src/Eccube/Resouce/locale. Tùy theo giá trị ECCUBE_LOCALE, hệ thống sẽ đọc các file:      messages.xxx.yaml   validators.xxx.yaml   Các file message là file yaml dạng hash. Key là ID message, value là chuỗi đã dịch.   #==================================================================================== # Chung #====================================================================================  common.select: Vui lòng chọn common.select__pref: Chọn tỉnh/thành phố common.select__unspecified: Không chỉ định common.select__all_products: Tất cả sản phẩm     ...   Hàm trans và filter trans   Bạn có thể sử dụng hàm trans hoặc filter trans để hiển thị chuỗi đã dịch. Dùng hàm trans trong PHP, dùng filter trans trong twig.   Hàm trans   Chỉ định ID message cho hàm trans để lấy chuỗi đã dịch. Cách sử dụng cơ bản như sau:   &lt;?php  // 'common.label.add' =&gt; 'Tạo mới',  $message = trans('common.label.edit'); var_dump($message);  // Sửa   Nếu message có tham số, sử dụng như sau:   &lt;?php  // 'admin.order.index.paginator_total_count' =&gt; 'Kết quả tìm kiếm: %count% bản ghi',  $message = trans('admin.order.index.paginator_total_count', ['%count%' =&gt; 10]); var_dump($message);  // Kết quả tìm kiếm: 10 bản ghi    ※ Label và message lỗi trong FormType sẽ tự động được dịch, không cần gọi trans trong FormType.   class TemplateType extends AbstractType {     /**      * {@inheritdoc}      */     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder              ...              -&gt;add('file', FileType::class, array(                 'mapped' =&gt; false,                 'required' =&gt; true,                 'constraints' =&gt; array(                     // Chỉ cần chỉ định ID message                     new Assert\\NotBlank(array('message' =&gt; 'template.text.message.select_file')),                     new Assert\\File(array(                         'mimeTypes' =&gt; array('application/zip', 'application/x-tar', 'application/x-gzip'),                         'mimeTypesMessage' =&gt; 'template.text.message.upload_files',                     )),                 ),             ));     }    Filter trans   Khi dịch trong twig, sử dụng filter trans. Cách sử dụng cơ bản như sau:    {{ 'common.label.add'|trans }}  {# Sửa #}    Nếu message có tham số, sử dụng như sau:    {{ 'admin.order.index.paginator_total_count'|trans({     '%count%' : 10 }) }}  {# Kết quả tìm kiếm: 10 bản ghi #}    Tham khảo   Cơ chế dịch của EC-CUBE sử dụng component Translation của Symfony. Tham khảo thêm tại tài liệu chính thức của Symfony:   Translations  ","categories": [],
        "tags": ["i18n","multilingualization"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/i18n_multilingualization",
        "teaser":null},{
        "title": "Thay đổi cách lưu thông tin session",
        "excerpt":"Tổng quan   Mặc định, dữ liệu session sẽ được lưu trên file hệ thống. Tuy nhiên, khi chạy trên nhiều web server, bạn có thể thay đổi cách lưu session. EC-CUBE sử dụng session handler riêng (SameSiteNoneCompatSessionHandler) để hỗ trợ SameSite Cookie. Để thay đổi cách lưu session, hãy thay đổi session handler được sử dụng trong SameSiteNoneCompatSessionHandler.   Lưu vào RDBMS   Ví dụ cấu hình  Để sử dụng cùng database với ứng dụng EC-CUBE, thêm cấu hình sau:   services:   db_session_handler:     class: Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\PdoSessionHandler     public: false     arguments:       - '%env(DATABASE_URL)%'    Eccube\\Session\\Storage\\Handler\\SameSiteNoneCompatSessionHandler:     arguments:       - '@db_session_handler'   Tạo bảng  Trước khi sử dụng, cần tạo bảng lưu session. Chạy DDL phù hợp với RDBMS bạn dùng:           PostgreSQL:         CREATE TABLE sessions (       sess_id VARCHAR(128) NOT NULL PRIMARY KEY,       sess_data BYTEA NOT NULL,       sess_time INTEGER NOT NULL,       sess_lifetime INTEGER NOT NULL   );          pdo_session_storage #postgresql            MySQL:         CREATE TABLE `sessions` (       `sess_id` VARCHAR(128) NOT NULL PRIMARY KEY,       `sess_data` BLOB NOT NULL,       `sess_time` INTEGER UNSIGNED NOT NULL,       `sess_lifetime` MEDIUMINT NOT NULL   ) COLLATE utf8_bin, ENGINE = InnoDB;          pdo_session_storage.html #mysql       Lưu vào Memcache   Thư viện cần thiết     memcached extension   Ví dụ cấu hình   Nếu Memcache chạy trên localhost port 11211, cấu hình như sau:   services:   memcached:     class: Memcached     public: false     arguments: ['sess']     calls:       - [ addServer, [ 'localhost', '11211' ]]    memcached_session_handler:     class: Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\MemcachedSessionHandler     public: false     arguments: [ '@memcached', { prefix: 'sess', expiretime: '3600' }]    Eccube\\Session\\Storage\\Handler\\SameSiteNoneCompatSessionHandler:     arguments:       - '@memcached_session_handler'   Lưu vào MongoDB   Thư viện cần thiết     MongoDB driver extension   mongodb/mongodb package   Cấu hình   Nếu MongoDB chạy trên localhost port 27017, cấu hình như sau:   services:     mongo_client:         class: MongoDB\\Client         arguments: ['mongodb://user:password@localhost:27017']     mongodb_session_handler:         class: Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\MongoDbSessionHandler         arguments: ['@mongo_client', { 'database': 'session_db', 'collection': 'sessions' }]      Eccube\\Session\\Storage\\Handler\\SameSiteNoneCompatSessionHandler:         arguments:             - '@mongodb_session_handler'  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/session_handler_settings",
        "teaser":null},{
        "title": "Múi giờ",
        "excerpt":"Tổng quan   Trang này giải thích về thiết lập múi giờ trong EC-CUBE.   Cách xử lý dữ liệu ngày giờ và cách thay đổi thiết lập múi giờ.   Giá trị mặc định   Múi giờ mặc định của EC-CUBE là Asia/Tokyo.   Lưu ý (về lưu và hiển thị dữ liệu ngày giờ)   ※ Dữ liệu ngày giờ sẽ luôn được lưu trong database dưới dạng UTC.   Dữ liệu nhập từ form sẽ được chuyển sang UTC (trừ 9 tiếng so với giờ Nhật) trước khi lưu vào database.   Khi lấy dữ liệu từ database, hệ thống sẽ chuyển đổi sang múi giờ được thiết lập trong ECCUBE_TIMEZONE.   Tham khảo      Hỗ trợ kiểu dữ liệu ngày giờ - github   Cách thay đổi thiết lập múi giờ   Múi giờ mặc định là Asia/Tokyo,   bạn có thể chuyển đổi múi giờ trong ứng dụng bằng cách chỉ định biến môi trường.   Sao chép file .env.dist ở thư mục gốc EC-CUBE thành file mới tên .env.   Bỏ comment dòng ECCUBE_TIMEZONE trong file .env và ghi múi giờ mong muốn.   //.env  ECCUBE_TIMEZONE=Pacific/Honolulu   Sau khi thiết lập biến môi trường, chỉ cần reload trang là múi giờ sẽ được chuyển đổi. Không cần xoá cache.  ","categories": [],
        "tags": ["i18n","currency"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/i18n_timezone",
        "teaser":null},{
        "title": "Các bước học tập",
        "excerpt":"  ※ Trình độ dự kiến: Đã có kinh nghiệm với ngôn ngữ/framework khác  ※ Thời gian học: Theo thực tế tại công ty EC-CUBE, khoảng 2 tuần (mỗi ngày vài tiếng) là có thể tham gia phát triển core      Nền tảng Symfony            Nhập môn PHP Framework Symfony 4       Tài liệu đào tạo EC-CUBE (Hands-on nhập môn Symfony)           Nền tảng EC-CUBE            Nhập môn xây dựng hệ thống EC-CUBE 4 &amp; Hướng dẫn vận hành, quản lý cửa hàng cho người mới           Phát triển plugin            Đặc tả plugin       Sample plugin thanh toán          ","categories": [],
        "tags": ["learning"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/learning/learning_step",
        "teaser":null},{
        "title": "Giới thiệu về OWASP ZAP",
        "excerpt":"OWASP Zed Attack Proxy (ZAP) là một công cụ kiểm tra bảo mật Web mã nguồn mở do dự án Open Web Application Security Project (OWASP) phát triển. Công cụ này được phát triển sôi nổi bởi một nhóm tình nguyện viên quốc tế.   Official: https://www.zaproxy.org   Quy trình kiểm thử với OWASP ZAP   Kiểm thử cơ bản được thực hiện theo các bước sau:      Dò quét - Sử dụng Local Proxies để duyệt qua tất cả các chức năng.   Spider - Sử dụng Spider để phát hiện các URL ẩn.   Forced Browse - Phát hiện các file hoặc thư mục không được tham chiếu.   Quét động - Phát hiện các lỗ hổng tiềm ẩn mà không thực hiện tấn công thực tế.   Kiểm thử thủ công - Để phát hiện nhiều lỗ hổng hơn, hãy sử dụng các chức năng khác nhau của OWASP ZAP để kiểm thử thủ công.   Lưu ý: Để biết chi tiết, vui lòng tham khảo hướng dẫn sử dụng trên trang trợ giúp của OWASP ZAP.  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/about_owaspzap",
        "teaser":null},{
        "title": "Cải thiện bảo mật",
        "excerpt":"Khi phát hiện lỗ hổng bảo mật trên website   Khi phát hiện lỗ hổng bảo mật trên website, thông tin về lỗ hổng có thể trở thành mối đe dọa đối với cả quản trị viên và người dùng website, do đó cần chú ý khi xử lý thông tin này. Vui lòng quản lý nghiêm ngặt thông tin lỗ hổng, không để rò rỉ ra ngoài những người liên quan.   Quan trọng nhất là không để người khác bị thiệt hại. Cho đến khi có biện pháp an toàn, người phát hiện và quản trị viên nên phối hợp và xử lý một cách thiện chí.   Lưu ý: Tài liệu tham khảo về phát hiện và báo cáo lỗ hổng bảo mật sẽ hữu ích cho bạn.   Cách báo cáo lỗ hổng bảo mật   Vui lòng liên hệ với Cửa sổ tiếp nhận thông tin liên quan đến lỗ hổng bảo mật của IPA hoặc Công ty cổ phần EC-CUBE (support@ec-cube.net).   Phản hồi cho EC-CUBE   Nếu phát hiện lỗ hổng bảo mật trong EC-CUBE, sẽ phối hợp với IPA và JPCERT/CC (tổ chức điều phối thông tin lỗ hổng bảo mật) để xử lý an toàn.   Thông tin lỗ hổng sẽ được quản lý nghiêm ngặt để không gây thiệt hại cho các cửa hàng và người dùng EC-CUBE.   Thông tin lỗ hổng phản hồi cho EC-CUBE sẽ được tổng hợp tại Danh sách lỗ hổng bảo mật EC-CUBE.   Lưu ý: Tất cả các phiên bản mới nhất của EC-CUBE 2, 3, 4 đều đã được áp dụng các biện pháp khắc phục lỗ hổng bảo mật. Nếu bạn đang sử dụng phiên bản cũ, vui lòng chú ý vì có thể còn tồn tại lỗ hổng chưa được vá.   Cải thiện phương pháp kiểm thử   Hiện tại, kiểm thử xâm nhập sử dụng OWASP ZAP vẫn còn nhiều thao tác thủ công, đòi hỏi kiến thức chuyên môn về EC-CUBE và bảo mật, cũng như tài nguyên máy tính lớn.   Trong tương lai, dự kiến sẽ tự động hóa bằng Selenium hoặc GitHub Actions.   Nếu bạn có đề xuất cải thiện kiểm thử, hãy gửi về repository EC-CUBE trên GitHub.   ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/improvement",
        "teaser":null},{
        "title": "Kiểm thử xâm nhập EC-CUBE với OWASP ZAP",
        "excerpt":"Giới thiệu   Chú ý!! Đây là công cụ thực hiện tấn công thực tế vào website để kiểm tra lỗ hổng bảo mật. Chỉ sử dụng trên môi trường Docker local, tuyệt đối không sử dụng trên site đang hoạt động. Có thể gây thay đổi hoặc xóa dữ liệu ngoài ý muốn.  Bạn tự chịu trách nhiệm khi thực hiện test, công ty EC-CUBE và cộng đồng phát triển liên quan không chịu bất kỳ trách nhiệm nào.   Nếu bạn muốn tạo môi trường test nhanh, hãy xem Bắt đầu nhanh.   Hiện tại, quá trình tự động hóa kiểm thử này đang được phát triển. Nếu muốn thử, hãy xem README này.   Tài liệu này được tạo ra nhằm chia sẻ quy trình kiểm thử bảo mật trước khi phát hành EC-CUBE, giúp nhiều người dùng có thể áp dụng. Không chỉ là hướng dẫn thao tác, tài liệu còn bao gồm tư duy kiểm thử, cách cải thiện quy trình, v.v.   OWASP ZAP sử dụng ở đây là một công cụ rất mạnh, nhưng để kiểm thử đầy đủ cần vượt qua một số vấn đề đặc thù của EC-CUBE. Ngay cả khi không phát hiện lỗ hổng bảo mật, cũng có thể do kiểm thử chưa đủ.   Không nên chỉ tin vào kết quả kiểm thử, hãy kết hợp với việc nhờ chuyên gia kiểm tra để xây dựng môi trường bảo mật vững chắc hơn.   Giới thiệu tổng quan      Đối tượng độc giả   Về kiểm thử bảo mật      Các loại kiểm thử bảo mật   Về kiểm thử xâm nhập ứng dụng web   Cấu trúc kiểm thử xâm nhập ứng dụng web   Về OWASP ZAP      Quy trình kiểm thử với OWASP ZAP   Lập kế hoạch kiểm thử      Bối cảnh, mục tiêu kiểm thử   Đối tượng kiểm thử   Chiến lược kiểm thử   Lập lịch kiểm thử   Cách đánh giá kết quả kiểm thử   Thực hiện kiểm thử      Xây dựng môi trường   Lưu ý khi thực hiện kiểm thử   Cách sửa để kiểm thử không bị dừng   Phân loại context   Cách khám phá thủ công   Cách thực hiện dynamic scan   Danh sách URL kiểm thử thủ công   Đánh giá kiểm thử      Xuất báo cáo   Cách đánh giá cảnh báo bảo mật   Cách xác định cảnh báo giả   Cải thiện bảo mật      Khi phát hiện lỗ hổng bảo mật   Cách báo cáo lỗ hổng   Phản hồi vào core EC-CUBE   Cải thiện phương pháp kiểm thử  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing",
        "teaser":null},{
        "title": "Giới thiệu",
        "excerpt":"Đối tượng độc giả   Nhà phát triển EC-CUBE chính   Từ thời EC-CUBE2, chúng tôi đã áp dụng các công cụ kiểm thử bảo mật thương mại và thực hiện kiểm thử bảo mật trước khi phát hành.   Tuy nhiên, do đặc thù của các công cụ này, môi trường kiểm thử bị giới hạn, khó mở rộng và không phải ai cũng có thể thực hiện kiểm thử bảo mật.   Với việc áp dụng OWASP ZAP lần này, bất kỳ ai cũng có thể dễ dàng thử nghiệm kiểm thử bảo mật. Việc kiểm thử toàn diện không phải lúc nào cũng dễ dàng, nhưng với các nhà phát triển nắm rõ cấu trúc bên trong của EC-CUBE, việc kiểm thử sẽ hiệu quả hơn.   Chúng tôi hy vọng không chỉ ở giai đoạn cuối mà cả trong quá trình phát triển thường xuyên, bạn cũng sẽ sử dụng OWASP ZAP để nâng cao bảo mật cho EC-CUBE và đóng góp vào việc cải thiện kiểm thử.   Nhà phát triển tuỳ biến EC-CUBE, nhà phát triển plugin   Trước đây, kiểm thử bảo mật cho từng dự án tuỳ biến thường phải nhờ đến các tổ chức chuyên môn hoặc tự thực hiện, không có phương pháp nào khác.   Do chi phí cao, việc kiểm thử bảo mật chỉ thực hiện ở một số dự án lớn.   Ngay cả khi phát triển plugin, việc kiểm thử bảo mật cũng khó khăn, nhiều trường hợp phát hiện lỗ hổng sau khi phát hành.   Nhờ việc áp dụng OWASP ZAP và xây dựng tài liệu này, giờ đây bạn có thể dễ dàng kiểm thử bảo mật cho các dự án tuỳ biến hoặc plugin của mình. Hãy chủ động áp dụng kiểm thử bảo mật cho các dự án, plugin liên quan để xây dựng một nền tảng EC an toàn, tin cậy.   Người thực hiện kiểm thử phần mềm   Nhờ áp dụng OWASP ZAP, không chỉ nhà phát triển mà bất kỳ ai cũng có thể dễ dàng thiết lập môi trường kiểm thử. Hãy tích cực tham gia kiểm thử bảo mật và áp dụng vào công việc của bạn.   Chuyên gia bảo mật   Kiểm thử bảo mật cho EC-CUBE được thực hiện bởi các nhà phát triển chính của EC-CUBE. Tài liệu này cũng được viết bởi nhà phát triển chính, không phải chuyên gia bảo mật.   Chúng tôi luôn nỗ lực nâng cao kiến thức về bảo mật và cải thiện từng ngày, nhưng vẫn có những giới hạn nhất định. Rất mong bạn cũng thử nghiệm kiểm thử bảo mật này và phản hồi từ góc độ chuyên gia.   Về kiểm thử bảo mật      Các loại kiểm thử bảo mật   Về kiểm thử xâm nhập ứng dụng web   Cấu trúc kiểm thử xâm nhập ứng dụng web  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/introduction",
        "teaser":null},{
        "title": "Cấu trúc kiểm thử xâm nhập ứng dụng web",
        "excerpt":"Sử dụng docker-compose để kết nối EC-CUBE và OWASP ZAP bản Docker. Với OWASP ZAP bản Docker, bạn có thể truy cập giao diện quản lý của OWASP ZAP thông qua Webswing.      Ưu điểm là không phụ thuộc vào môi trường, có thể chuẩn bị cấu hình cơ bản bằng docker-compose, giúp bất kỳ ai cũng dễ dàng xây dựng môi trường giống nhau.   Nếu lưu lại session, bạn có thể mở lại session đã lưu bằng OWASP ZAP bản Windows, Mac hoặc Standalone để xác nhận kết quả quét.   Cấu trúc docker-compose      Ưu điểm      Có thể hoàn thành trong môi trường cục bộ, an toàn vì không gây ảnh hưởng ra bên ngoài            Ở chế độ quét động, sẽ thực hiện tấn công thực tế vào mục tiêu. Ở chế độ bảo vệ, không có tấn công ra bên ngoài       Tuy nhiên, khi sử dụng chế độ tiêu chuẩn hoặc tấn công, cần chú ý vì có thể gửi request ra dịch vụ bên ngoài           Có thể tái hiện lỗ hổng và kiểm thử mà không lo rò rỉ ra ngoài   Chỉ cần lệnh docker-compose là hoàn tất cấu hình ban đầu, dễ dàng xây dựng   Ai cũng có thể xây dựng môi trường giống nhau   Nhược điểm      Không thể kiểm thử các thiết lập liên quan đến môi trường vận hành thực tế của server web   Trong quá trình hoạt động, session có thể tiêu tốn hàng chục GB dung lượng đĩa, nên sẽ khó khăn với môi trường cục bộ ít tài nguyên   Tốc độ chậm hơn so với OWASP ZAP bản Standalone   ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/introduction/layout",
        "teaser":null},{
        "title": "Về kiểm thử bảo mật",
        "excerpt":"   Các loại kiểm thử bảo mật   Về kiểm thử xâm nhập ứng dụng web   Cấu trúc kiểm thử xâm nhập ứng dụng web  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/introduction/overview",
        "teaser":null},{
        "title": "Về kiểm thử xâm nhập ứng dụng web",
        "excerpt":"Kiểm thử xâm nhập ứng dụng web (Penetration Test) là quá trình thực hiện tấn công thực tế vào hệ thống kết nối Internet để xác nhận xem có tồn tại lỗ hổng bảo mật hay không.   Do thực hiện tấn công thực tế để xác nhận khả năng tái hiện, có thể xảy ra trường hợp dữ liệu bị thay đổi hoặc xóa ngoài ý muốn. Khi thực hiện kiểm thử, nhất định phải chuẩn bị môi trường kiểm thử riêng biệt với môi trường thật và chỉ thực hiện trên môi trường kiểm thử   Ngoài ra, việc kiểm thử có thể gây tải lớn lên hệ thống, một số dịch vụ hosting có thể giới hạn kiểm thử, hãy xác nhận kỹ quy định sử dụng dịch vụ hosting trước khi thực hiện kiểm thử.   Tham khảo các dịch vụ cloud tiêu biểu:      Amazon Web Service   Microsoft Azure   Google Cloud Platform   Ưu điểm   Có thể thiết kế kiểm thử phù hợp với môi trường hệ thống, thực hiện kiểm thử xâm nhập trên môi trường kiểm thử nên có thể điều tra an toàn và cụ thể.   Nhiều trường hợp phát hiện lỗ hổng mà khi phát triển không nhận ra, giúp vận hành hệ thống vững chắc hơn.   Nhược điểm   Khi thực hiện kiểm thử, cần có kiến thức chuyên sâu về hệ thống mục tiêu và bảo mật.   Có một số công cụ kiểm thử tự động như OWASP ZAP, nhưng phạm vi kiểm thử tự động vẫn còn hạn chế, cần kết hợp kiểm thử thủ công.   Do đó, chi phí kiểm thử thường cao và mất nhiều thời gian.  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/introduction/penetration-test",
        "teaser":null},{
        "title": "Các loại kiểm thử bảo mật",
        "excerpt":"Kiểm thử bảo mật có nhiều loại khác nhau. Trong mục này, chúng tôi sẽ giải thích sơ lược về các loại kiểm thử bảo mật chính.   Lưu ý: Vui lòng tham khảo thêm OWASP Testing guide - Testing Techniques Explained   Kiểm tra thủ công và review   Kiểm tra thủ công là quá trình kiểm tra bảo mật do con người thực hiện, không sử dụng công cụ tự động. Có những trường hợp kiểm tra cả quy định nội bộ, quy trình, thiết kế kiến trúc hệ thống, v.v.   Chủ yếu thực hiện bằng cách phân tích tài liệu, phỏng vấn nhà thiết kế hoặc quản trị viên hệ thống.   Mô hình hóa mối đe dọa (Threat Modeling)   Đây là phương pháp phân tích sơ đồ cấu trúc hệ thống, sơ đồ luồng dữ liệu để xác định các mối đe dọa. Thông thường thực hiện theo các bước sau:      Nắm bắt tổng thể hệ thống   Lần theo luồng dữ liệu   Liệt kê các mối đe dọa   Lặp lại các bước trên cho từng hoạt động   Các bước này thường được thực hiện ở giai đoạn đầu thiết kế. Cụ thể, sẽ thực hiện khi đã xác định được phương pháp nhập/xuất dữ liệu, phương pháp lưu trữ lâu dài, v.v.   Review mã nguồn   Đây là quá trình kiểm tra mã nguồn để phát hiện các vấn đề bảo mật bằng cách quan sát trực tiếp.   Đặc biệt, với các phần mềm mã nguồn mở như EC-CUBE, nhiều lỗ hổng đã được cải thiện thông qua review mã nguồn.   Việc thực hiện review mã nguồn giúp xây dựng hệ thống vững chắc hơn so với chỉ kiểm thử bằng hộp đen.   Kiểm thử xâm nhập   Kiểm thử xâm nhập (Penetration Test) là quá trình sử dụng các công cụ như OWASP ZAP để thực hiện tấn công thực tế, xác nhận xem có tồn tại lỗ hổng bảo mật hay không.   Đây là phương pháp kiểm thử được đề cập trong tài liệu này.  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/introduction/type",
        "teaser":null},{
        "title": "Kế hoạch kiểm thử",
        "excerpt":"   Bối cảnh, mục đích kiểm thử   Đối tượng kiểm thử   Chiến lược kiểm thử   Dự kiến lập lịch kiểm thử   Phương pháp đánh giá kết quả kiểm thử   ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/planning",
        "teaser":null},{
        "title": "Bối cảnh, mục đích kiểm thử",
        "excerpt":"Những năm gần đây, thị trường thương mại điện tử mở rộng, nhiều cửa hàng trực tuyến ra đời.   Tuy nhiên, các sự cố như website bị tấn công khai thác lỗ hổng, rò rỉ thông tin cá nhân cũng xảy ra nhiều, làm tăng tầm quan trọng của kiểm thử bảo mật.   Phương pháp tấn công ngày càng tinh vi, kiểm thử bảo mật không đảm bảo an toàn tuyệt đối nhưng chắc chắn giúp giảm thiểu rủi ro.   Kiểm thử bảo mật này không chỉ áp dụng cho các đợt phát hành EC-CUBE mà còn hướng tới việc mở rộng cho các dự án tuỳ biến, plugin riêng lẻ. Trong tương lai, đặc biệt mong muốn có thể áp dụng cho các website vận hành trên 3 năm, các site tích hợp với CMS khác, hoặc có nhiều plugin, tuỳ biến riêng.   Khi nhiều người dùng cùng tham gia kiểm thử bảo mật, sức mạnh của OSS sẽ được phát huy, phát triển thành phần mềm vững chắc.   Việc phổ cập kiểm thử bảo mật này sẽ hướng tới xây dựng nền tảng EC an toàn, tin cậy hơn.   ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/planning/purpose",
        "teaser":null},{
        "title": "Scheduling",
        "excerpt":"Khi thực hiện kiểm thử xâm nhập EC-CUBE, kiến thức về EC-CUBE và bảo mật chuyên sâu là rất quan trọng.   Một số chức năng có chuyển trang đặc biệt, upload file, hoặc thực hiện bằng Ajax, v.v. sẽ làm tăng độ khó của kiểm thử bảo mật.   Tài liệu này sẽ cố gắng bổ sung tối đa, giúp hạ thấp rào cản kiểm thử bảo mật, nhưng bạn nên tham khảo lịch trình dưới đây để lập kế hoạch kiểm thử hợp lý.   Dĩ nhiên, số ngày công thực tế sẽ thay đổi tuỳ vào kỹ năng của người kiểm thử      Nắm tổng quan kiểm thử và xây dựng môi trường: 1~2 ngày công   Kiểm thử phía quản trị: 2~3 ngày công   Kiểm thử phía frontend (login): 2~3 ngày công   Kiểm thử phía frontend (guest): 2~3 ngày công   Kiểm thử upload file, chức năng đặc biệt: 1~2 ngày công   Kiểm tra báo cáo, lập tài liệu báo cáo kiểm thử: 2~3 ngày công   Tùy theo nhu cầu, nếu bổ sung các pha như thiết kế kiểm thử, mô hình hoá mối đe doạ, số ngày công sẽ tăng thêm.   Kiểm thử xâm nhập thường thực hiện ở giai đoạn cuối quy trình phát triển. Hãy lập lịch kiểm thử dư dả để tránh bị dồn ép tiến độ.  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/planning/scheduling",
        "teaser":null},{
        "title": "Strategy",
        "excerpt":"Nắm rõ đối tượng kiểm thử   Nắm rõ đối tượng kiểm thử, xác định nên kiểm thử phần nào, kiểm thử như thế nào để đạt hiệu quả tối ưu, không bỏ sót.      Sơ đồ chuyển trang   Danh sách URL   Tài liệu thiết kế form   Phân loại bối cảnh kiểm thử   Cơ bản sẽ phân loại theo session:      Màn hình quản trị   Frontend (login)   Frontend (guest)   Xem xét phương pháp kiểm thử      Kiểm thử theo trình tự nào   Xem xét các add-on cần thiết cho kiểm thử   Rút ra các trường hợp đặc biệt như trang khó kiểm thử, upload file, v.v.  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/planning/strategy",
        "teaser":null},{
        "title": "Đối tượng kiểm thử",
        "excerpt":"Kiểm thử này tập trung vào phạm vi phụ thuộc vào ứng dụng (EC-CUBE).   Đối tượng kiểm thử      Phạm vi phụ thuộc vào ứng dụng (EC-CUBE)   Trong các mục kiểm tra của bản phát hành OWASP ZAP, các mục sau là đối tượng:            CSRF       XSS       Tham số/Parameter Tampering       OS Command Injection       Server Side Code Injection       SQL Injection       Format String Error       External Redirect       Path Traversal       Remote File Inclusion           Ngoài phạm vi kiểm thử   Lưu ý: Một số kiểm thử không áp dụng cho đợt phát hành EC-CUBE, nhưng nên thực hiện khi vận hành thực tế. Hãy cân nhắc tuỳ theo chính sách của từng dự án.      Lộ thông tin thư mục   Server Side Include   Buffer Overflow   Tấn công lỗ hổng của Web server, middleware, PHP   Cấu hình sai của Web server, middleware, PHP   DoS   Tấn công tổng hợp như password   Những gì không thể kiểm thử bằng OWASP ZAP      Kiểm thử về quyền xác thực   Kiểm thử về cấu hình sai của EC-CUBE   ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/planning/target",
        "teaser":null},{
        "title": "Bắt đầu nhanh",
        "excerpt":"Chú ý! Để tránh tấn công ngoài ý muốn đến các site bên ngoài, hãy luôn sử dụng OWASP ZAP ở chế độ bảo vệ (Protect Mode)       Cài đặt EC-CUBE bằng docker-compose   Tạo dữ liệu test      ## Đặt APP_ENV: dev  sed -i.bak -e 's/APP_ENV: \"prod\"/APP_ENV: \"dev\"/g' ./docker-compose.yml  docker-compose up -d # Áp dụng thay đổi  ## Tạo 1 customer  docker-compose -f docker-compose.yml -f docker-compose.owaspzap.yml exec ec-cube bin/console eccube:fixtures:generate --products=0 --customers=1 --orders=0  ## Đổi email thành zap_user@example.com  docker-compose -f docker-compose.yml -f docker-compose.owaspzap.yml exec ec-cube bin/console doctrine:query:sql \"UPDATE dtb_customer SET email = 'zap_user@example.com' WHERE id = 1;\"  ## Khi test với ZAP, đặt lại APP_ENV: prod  sed -i.bak -e 's/APP_ENV: \"dev\"/APP_ENV: \"prod\"/g' ./docker-compose.yml  docker-compose up -d # Áp dụng thay đổi           Khởi động container OWASP ZAP      docker-compose -f docker-compose.yml -f docker-compose.owaspzap.yml up -d zap                 Sẽ mất một chút thời gian để cập nhật addon       Sau khi khởi động, truy cập http://localhost:8081/zap/ bằng trình duyệt (trừ Firefox) để mở giao diện quản lý OWASP ZAP           Lưu ý: Sau khi khởi động OWASP ZAP, giao diện sẽ nhỏ và một số nút toolbar bị ẩn. Hãy chuyển sang chế độ toàn màn hình để dễ sử dụng.         Mở Firefox, vào Cài đặt → Cài đặt mạng → Cài đặt kết nối proxy            Chọn Thiết lập proxy thủ công       HTTP proxy: localhost, Port: 8090       Tick vào Sử dụng proxy này cho cả FTP và HTTPS           Import chứng chỉ gốc SSL CA vào Firefox            Chứng chỉ được tạo ở path/to/ec-cube/zap/owasp_zap_root_ca.cer       Vào Cài đặt → Quyền riêng tư &amp; bảo mật → Chứng chỉ → Xem chứng chỉ để mở trình quản lý chứng chỉ       Chọn Chứng chỉ CA → Nhập, chọn file path/to/ec-cube/zap/owasp_zap_root_ca.cer       Tick vào Tin tưởng CA này để xác thực website, nhấn OK và đóng cài đặt           Truy cập https://ec-cube/ bằng Firefox để kiểm tra đã truy cập EC-CUBE qua proxy thành công   Import context      ## Cho admin  docker-compose -f docker-compose.yml -f docker-compose.owaspzap.yml exec zap zap-cli -p 8090 context import /zap/wrk/admin.context  ## Cho frontend (login)  docker-compose -f docker-compose.yml -f docker-compose.owaspzap.yml exec zap zap-cli -p 8090 context import /zap/wrk/front_login.context  ## Cho frontend (guest)  docker-compose -f docker-compose.yml -f docker-compose.owaspzap.yml exec zap zap-cli -p 8090 context import /zap/wrk/front_guest.context          Lưu ý: Nếu import nhiều context cùng lúc, có thể bị xung đột session và không đăng nhập được       Bật nút Forced User Mode On/Off trên toolbar của OWASP ZAP để kích hoạt tự động đăng nhập khi test    Tiến hành test            Duyệt các trang bằng Firefox (khám phá thủ công)       Thực hiện dynamic scan với các URL đã phát hiện       Kiểm tra các cảnh báo (alert) được phát hiện           Tham khảo      Sử dụng OWASP ZAP với Docker   Chạy OWASP ZAP bản Docker   Hướng dẫn testing  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/quick_start",
        "teaser":null},{
        "title": "Đánh giá kiểm thử",
        "excerpt":"Xuất báo cáo   Từ menu báo cáo, có thể xuất nhiều loại báo cáo khác nhau. Cơ bản sẽ xuất dưới dạng HTML.   Bạn cũng có thể nhập vào các công cụ quản lý lỗ hổng như Faraday để xác nhận.   Phương pháp đánh giá lỗ hổng bảo mật   Khi phát hiện lỗ hổng bảo mật, quan trọng hơn việc chỉ đánh giá mức độ nguy hiểm là đánh giá mức độ ảnh hưởng đến hoạt động kinh doanh.   Về phương pháp đánh giá cụ thể, chủ yếu sử dụng Hệ thống đánh giá lỗ hổng chung CVSS.   Lưu ý: Có thể sử dụng Công cụ tính điểm CVSS đã được công khai.  https://www.first.org/cvss/calculator/3.0   Chi tiết, vui lòng tham khảo trang Hệ thống đánh giá lỗ hổng chung CVSS của IPA.   Phân biệt cảnh báo sai (false positive)   Ngay cả khi phát hiện alert, không phải lúc nào cũng là lỗ hổng bảo mật thực sự, có thể là cảnh báo sai.   Nguyên nhân cảnh báo sai có nhiều, nhưng thường do đặc thù của ứng dụng.      Thử gửi lại request ghi trong báo cáo để xác nhận có tái hiện được không   Nếu tái hiện, xác nhận xem có thực sự gây nguy hiểm không   Đây là các điểm cần lưu ý.   Đặc biệt, nếu phát hiện alert High, cần xác nhận cẩn thận. Nếu phân vân, nên hỏi ý kiến chuyên gia.   Ví dụ cảnh báo XSS được phát hiện, gửi lại request cũng tái hiện nhưng thực tế không thực thi mã độc (cảnh báo sai):   ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/review",
        "teaser":null},{
        "title": "Cách thực hiện quét động",
        "excerpt":"Cơ bản về quét động   Quy trình cơ bản để thực hiện quét động như sau:      Từ lịch sử hoặc danh sách URL trong tab site, chọn URL cần quét   Chọn Tấn công→Quét động và thực thi      Lưu ý: Hãy đảm bảo token CSRF được thiết lập trong tham số POST trùng khớp với token của Firefox khi truy cập qua Local Proxes.  Nếu token CSRF không trùng khớp, quét động sẽ bị lỗi và không thể kiểm thử đầy đủ.   Lưu ý: Các chức năng chỉnh sửa sau của màn hình quản trị có tham số ID trong token CSRF và được thiết lập động. Cần đăng ký từng lần một trong OWASP ZAP tại Công cụ→Tùy chọn→Anti-CSRF Token.      Quản lý quy cách   Quản lý phân loại quy cách   Quản lý danh mục   Quản lý tag   URL có thể truy cập bằng GET   Các URL có thể truy cập bằng GET không bị ảnh hưởng bởi token CSRF, do đó có thể chọn thư mục trong danh sách URL của tab site và thực hiện quét động cho toàn bộ các tầng con bên dưới.      Kiểm thử các pattern chuyển trang đặc biệt   Lưu ý: Phần này đang được viết tiếp   Kiểm thử chuyển trang nhiều màn hình      Nếu bắt buộc nhập tiếng Nhật, nên lặp lại Thăm dò thủ công→Quét động từng màn hình một để đảm bảo   Nếu không liên quan đến nhập tiếng Nhật, có thể sử dụng addon sequence            Tuy nhiên, cần kiểm tra kỹ xem đã quét đầy đủ chưa vì có thể không thành công           Trường hợp nội dung bị xóa      Áp dụng cho xóa ảnh, xóa khỏi giỏ hàng, v.v.   Có thể kiểm thử bằng cách comment out logic xóa hoặc rollback DB   Tuy nhiên, nếu có lỗ hổng SQL Injection trong logic xóa thì sẽ không phát hiện được   Trường hợp điều khiển chuyển trang bằng tham số POST   Danh sách URL trong tab site sẽ không đăng ký các URL có giá trị tham số POST khác nhau. (Ví dụ: chuyển trang với mode=confirm, mode=complete) Cách làm không chính thống, nhưng có thể sử dụng chức năng gửi thủ công để thêm tham số giả và gửi request, từ đó thực hiện quét động.   Giả định rằng URL với mode=confirm đã được đăng ký      Tìm request tương ứng (mode=complete) trong lịch sử   Chuột phải → Gửi lại, thêm tham số giả và gửi lại (mode=complete&amp;mode2=dummy, chỉnh sửa tham số bằng tay)   Lúc này, URL với mode=complete cũng sẽ được đăng ký vào danh sách URL của tab site, có thể thực hiện quét động với URL này   Lưu ý: Áp dụng cho các màn hình như liên hệ, đăng ký thành viên, v.v.   Trường hợp truyền dữ liệu qua session      Nếu chuyển từ màn hình xác nhận sang hoàn tất mà dữ liệu được truyền qua session thì không thể kiểm thử            Có thể kiểm thử bằng cách viết ZAP Script           Lưu ý: Nếu có tuỳ biến hoặc plugin hiển thị thông tin nhập ở màn hình hoàn tất, cần chú ý có thể tiềm ẩn lỗ hổng   Lưu ý: Áp dụng cho màn hình hoàn tất mua hàng.   Kiểm thử upload file   Có thể kiểm thử upload file bằng cách thăm dò thủ công rồi quét động. Nên sử dụng file có dung lượng nhỏ để kiểm thử vì upload file lớn sẽ tốn rất nhiều thời gian.   Kiểm thử các chức năng xóa   Việc kiểm thử xóa đơn hàng, xóa thành viên là khó khăn vì không thể gửi lặp lại request xóa.   Có thể vô hiệu hóa chức năng xóa bằng cách rollback transaction hoặc comment out EntityManager::flush(), từ đó kiểm thử được phần nào.   Tuy nhiên, nếu vô hiệu hóa chức năng xóa thì việc kiểm thử SQL Injection sẽ khó khăn hơn, nên cần chú ý kiểm tra kỹ các tham số gửi khi xóa.  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/testing/active_scan",
        "teaser":null},{
        "title": "Thiết lập để kiểm thử không bị gián đoạn",
        "excerpt":"Ví dụ, trong quá trình kiểm thử, có thể xảy ra trường hợp người dùng đang thực hiện kiểm thử bảo mật bị xóa hoặc quyền truy cập trang bị thay đổi khiến không thể truy cập được nữa. Để ngăn chặn điều này và đảm bảo kiểm thử ổn định, cần chỉnh sửa trực tiếp vào mã nguồn EC-CUBE.   Xem toàn bộ file patch tại đây   Lưu ý: Ngoài các chỉnh sửa này, khi kiểm thử các chức năng xóa, cần comment out EntityManager::flush() trong các xử lý liên quan để đảm bảo thao tác xóa được rollback.   Màn hình quản trị   Ngăn chặn xóa quy cách, phân loại quy cách   diff --git a/src/Eccube/Repository/ClassCategoryRepository.php b/src/Eccube/Repository/ClassCategoryRepository.php index 8f08c2b9b2..4b4d9abdec 100644 --- a/src/Eccube/Repository/ClassCategoryRepository.php +++ b/src/Eccube/Repository/ClassCategoryRepository.php @@ -103,7 +103,7 @@ class ClassCategoryRepository extends AbstractRepository           $em = $this-&gt;getEntityManager();          $em-&gt;remove($ClassCategory); -        $em-&gt;flush(); +        // $em-&gt;flush();      }       /** diff --git a/src/Eccube/Repository/ClassNameRepository.php b/src/Eccube/Repository/ClassNameRepository.php index 7e894b0585..4809d8262b 100644 --- a/src/Eccube/Repository/ClassNameRepository.php +++ b/src/Eccube/Repository/ClassNameRepository.php @@ -92,6 +92,6 @@ class ClassNameRepository extends AbstractRepository           $em = $this-&gt;getEntityManager();          $em-&gt;remove($ClassName); -        $em-&gt;flush(); +        // $em-&gt;flush();      }  }   Ngăn chặn logout   Khi logout, session sẽ bị ngắt và token CSRF sẽ thay đổi, dẫn đến kiểm thử thất bại. Vì vậy, cần vô hiệu hóa chức năng logout.   diff --git a/app/config/eccube/packages/security.yaml b/app/config/eccube/packages/security.yaml index 2ad4e1a608..8da71094d0 100644 --- a/app/config/eccube/packages/security.yaml +++ b/app/config/eccube/packages/security.yaml @@ -34,9 +34,9 @@ security:                  use_forward: false                  success_handler: eccube.security.success_handler                  failure_handler: eccube.security.failure_handler -            logout: -                path: admin_logout -                target: admin_login +            # logout: +            #     path: admin_logout +            #     target: admin_login          customer:              pattern: ^/              anonymous: true    Ngăn chặn cập nhật quản lý quyền hạn   Nếu URL từ chối quyền hạn bị đăng ký là /, sẽ không thể truy cập màn hình quản trị. Cần ngăn chặn điều này.   diff --git a/src/Eccube/Controller/Admin/Setting/System/AuthorityController.php b/src/Eccube/Controller/Admin/Setting/System/AuthorityController.php index 2f69bd5f62..4d2f4fdde1 100644 --- a/src/Eccube/Controller/Admin/Setting/System/AuthorityController.php +++ b/src/Eccube/Controller/Admin/Setting/System/AuthorityController.php @@ -103,7 +103,7 @@ class AuthorityController extends AbstractController                      }                  }              } -            $this-&gt;entityManager-&gt;flush(); +            // $this-&gt;entityManager-&gt;flush();               $event = new EventArgs(                  [    Ngăn chặn cập nhật master data   Ngăn chặn việc master data bị cập nhật không mong muốn, dẫn đến các chức năng không hoạt động.   diff --git a/src/Eccube/Controller/Admin/Setting/System/MasterdataController.php b/src/Eccube/Controller/Admin/Setting/System/MasterdataController.php index 9b661031ab..a517b9a6ff 100644 --- a/src/Eccube/Controller/Admin/Setting/System/MasterdataController.php +++ b/src/Eccube/Controller/Admin/Setting/System/MasterdataController.php @@ -162,7 +162,7 @@ class MasterdataController extends AbstractController                  }                   try { -                    $this-&gt;entityManager-&gt;flush(); +                    // $this-&gt;entityManager-&gt;flush();                       $event = new EventArgs(                          [    Ngăn chặn cập nhật thông tin user quản trị   Ngăn chặn việc thay đổi mật khẩu hoặc ID của user đang kiểm thử.   diff --git a/src/Eccube/Controller/Admin/Setting/System/MemberController.php b/src/Eccube/Controller/Admin/Setting/System/MemberController.php index d1f042f67a..0ce6235b77 100644 --- a/src/Eccube/Controller/Admin/Setting/System/MemberController.php +++ b/src/Eccube/Controller/Admin/Setting/System/MemberController.php @@ -188,7 +188,7 @@ class MemberController extends AbstractController                  $Member-&gt;setPassword($encodedPassword);              }  -            $this-&gt;memberRepository-&gt;save($Member); +            // $this-&gt;memberRepository-&gt;save($Member);               $event = new EventArgs(                  [    Ngăn chặn cập nhật quản lý bảo mật   Ngăn chặn việc thay đổi nội dung quản lý bảo mật khiến không thể truy cập màn hình quản trị.   diff --git a/src/Eccube/Controller/Admin/Setting/System/SecurityController.php b/src/Eccube/Controller/Admin/Setting/System/SecurityController.php index d48b4f36b2..a658bbd33b 100644 --- a/src/Eccube/Controller/Admin/Setting/System/SecurityController.php +++ b/src/Eccube/Controller/Admin/Setting/System/SecurityController.php @@ -71,28 +71,28 @@ class SecurityController extends AbstractController                  'ECCUBE_FORCE_SSL' =&gt; $data['force_ssl'] ? 'true' : 'false',              ]);  -            file_put_contents($envFile, $env); +            // file_put_contents($envFile, $env);  -            // Cập nhật URL màn hình quản trị. Nếu thay đổi thì logout và login lại. -            $adminRoute = $this-&gt;eccubeConfig['eccube_admin_route']; -            if ($adminRoute !== $data['admin_route_dir']) { -                $env = StringUtil::replaceOrAddEnv($env, [ -                    'ECCUBE_ADMIN_ROUTE' =&gt; $data['admin_route_dir'], -                ]); +            // // Cập nhật URL màn hình quản trị. Nếu thay đổi thì logout và login lại. +            // $adminRoute = $this-&gt;eccubeConfig['eccube_admin_route']; +            // if ($adminRoute !== $data['admin_route_dir']) { +            //     $env = StringUtil::replaceOrAddEnv($env, [ +            //         'ECCUBE_ADMIN_ROUTE' =&gt; $data['admin_route_dir'], +            //     ]);  -                file_put_contents($envFile, $env); +            //     file_put_contents($envFile, $env);  -                $this-&gt;addSuccess('admin.setting.system.security.admin_url_changed', 'admin'); +            //     $this-&gt;addSuccess('admin.setting.system.security.admin_url_changed', 'admin');  -                // Đăng xuất -                $this-&gt;tokenStorage-&gt;setToken(null); +            //     // Đăng xuất +            //     $this-&gt;tokenStorage-&gt;setToken(null);  -                // Xóa cache -                $cacheUtil-&gt;clearCache(); +            //     // Xóa cache +            //     $cacheUtil-&gt;clearCache();  -                // Đăng nhập lại vào màn hình quản trị -                return $this-&gt;redirect($request-&gt;getBaseUrl().'/'.$data['admin_route_dir']); -            } +            //     // Đăng nhập lại vào màn hình quản trị +            //     return $this-&gt;redirect($request-&gt;getBaseUrl().'/'.$data['admin_route_dir']); +            // }               $this-&gt;addSuccess('admin.common.save_complete', 'admin');    Màn hình front   Ngăn chặn thay đổi thông tin hội viên   Ngăn chặn việc thay đổi thông tin hội viên khiến không thể đăng nhập lại.   diff --git a/src/Eccube/Controller/Mypage/ChangeController.php b/src/Eccube/Controller/Mypage/ChangeController.php index 70121e110c..1846b6fbe6 100644 --- a/src/Eccube/Controller/Mypage/ChangeController.php +++ b/src/Eccube/Controller/Mypage/ChangeController.php @@ -97,7 +97,7 @@ class ChangeController extends AbstractController                      $encoder-&gt;encodePassword($Customer-&gt;getPassword(), $Customer-&gt;getSalt())                  );              } -            $this-&gt;entityManager-&gt;flush(); +            // $this-&gt;entityManager-&gt;flush();               log_info('Hoàn thành chỉnh sửa hội viên');    Ngăn chặn giới hạn số lượng địa chỉ nhận hàng   Ngăn chặn việc vượt quá số lượng địa chỉ nhận hàng tối đa khiến kiểm thử thất bại.   diff --git a/src/Eccube/Controller/Mypage/DeliveryController.php b/src/Eccube/Controller/Mypage/DeliveryController.php index af8dd653a6..803f3123f2 100644 --- a/src/Eccube/Controller/Mypage/DeliveryController.php +++ b/src/Eccube/Controller/Mypage/DeliveryController.php @@ -77,7 +77,7 @@ class DeliveryController extends AbstractController              $addressCurrNum = count($Customer-&gt;getCustomerAddresses());              $addressMax = $this-&gt;eccubeConfig['eccube_deliv_addr_max'];              if ($addressCurrNum &gt;= $addressMax) { -                throw new NotFoundHttpException(); +                // throw new NotFoundHttpException();              }              $CustomerAddress = new CustomerAddress();              $CustomerAddress-&gt;setCustomer($Customer);   Ngăn chặn xóa thông tin địa chỉ nhận hàng   Ngăn chặn việc xóa thông tin địa chỉ nhận hàng khiến việc mua hàng thất bại.   diff --git a/src/Eccube/Controller/Mypage/DeliveryController.php b/src/Eccube/Controller/Mypage/DeliveryController.php index f3ecbc1ed0..7bd7290c1a 100644 --- a/src/Eccube/Controller/Mypage/DeliveryController.php +++ b/src/Eccube/Controller/Mypage/DeliveryController.php @@ -170,7 +170,7 @@ class DeliveryController extends AbstractController              throw new BadRequestHttpException();          }  -        $this-&gt;customerAddressRepository-&gt;delete($CustomerAddress); +        // $this-&gt;customerAddressRepository-&gt;delete($CustomerAddress);           $event = new EventArgs(              [    Ngăn chặn thêm sản phẩm yêu thích   Ngăn chặn việc kiểm thử thêm sản phẩm yêu thích (/products/add_favorite/&lt;id&gt;) bị thất bại Không thể sử dụng đồng thời với patch ngăn chặn xóa sản phẩm yêu thích   diff --git a/src/Eccube/Repository/CustomerFavoriteProductRepository.php b/src/Eccube/Repository/CustomerFavoriteProductRepository.php index 24430036a4..cff5db5a64 100644 --- a/src/Eccube/Repository/CustomerFavoriteProductRepository.php +++ b/src/Eccube/Repository/CustomerFavoriteProductRepository.php @@ -45,7 +45,7 @@ class CustomerFavoriteProductRepository extends AbstractRepository               $em = $this-&gt;getEntityManager();              $em-&gt;persist($CustomerFavoriteProduct); -            $em-&gt;flush(); +            // $em-&gt;flush();          }      }   Ngăn chặn xóa sản phẩm yêu thích   Ngăn chặn việc xóa sản phẩm yêu thích khiến kiểm thử liên quan đến sản phẩm yêu thích bị thất bại Không thể sử dụng đồng thời với patch ngăn chặn thêm sản phẩm yêu thích   diff --git a/src/Eccube/Controller/Mypage/MypageController.php b/src/Eccube/Controller/Mypage/MypageController.php index d3abe49efd..b02a841954 100644 --- a/src/Eccube/Controller/Mypage/MypageController.php +++ b/src/Eccube/Controller/Mypage/MypageController.php @@ -362,7 +362,7 @@ class MypageController extends AbstractController          $CustomerFavoriteProduct = $this-&gt;customerFavoriteProductRepository-&gt;findOneBy(['Customer' =&gt; $Customer, 'Product' =&gt; $Product]);           if ($CustomerFavoriteProduct) { -            $this-&gt;customerFavoriteProductRepository-&gt;delete($CustomerFavoriteProduct); +            // $this-&gt;customerFavoriteProductRepository-&gt;delete($CustomerFavoriteProduct);          } else {              throw new BadRequestHttpException();          }    Lưu ý: Có thể kiểm thử luồng đăng ký→xóa bằng addon sequence   Ngăn chặn hội viên rút khỏi hệ thống   Ngăn chặn việc hội viên rút khỏi hệ thống khiến kiểm thử bị dừng lại   diff --git a/src/Eccube/Controller/Mypage/WithdrawController.php b/src/Eccube/Controller/Mypage/WithdrawController.php index 796a0b943e..940709df9c 100644 --- a/src/Eccube/Controller/Mypage/WithdrawController.php +++ b/src/Eccube/Controller/Mypage/WithdrawController.php @@ -121,8 +121,8 @@ class WithdrawController extends AbstractController                       // Chuyển sang trạng thái rút khỏi                      $CustomerStatus = $this-&gt;customerStatusRepository-&gt;find(CustomerStatus::WITHDRAWING); -                    $Customer-&gt;setStatus($CustomerStatus); -                    $Customer-&gt;setEmail(StringUtil::random(60).'@dummy.dummy'); +                    //$Customer-&gt;setStatus($CustomerStatus); +                    //$Customer-&gt;setEmail(StringUtil::random(60).'@dummy.dummy');                       $this-&gt;entityManager-&gt;flush();  @@ -140,11 +140,11 @@ class WithdrawController extends AbstractController                      $this-&gt;mailService-&gt;sendCustomerWithdrawMail($Customer, $email);                       // Xóa session giỏ hàng và đơn hàng -                    $this-&gt;cartService-&gt;clear(); -                    $this-&gt;orderHelper-&gt;removeSession(); +                    // $this-&gt;cartService-&gt;clear(); +                    // $this-&gt;orderHelper-&gt;removeSession();                       // Đăng xuất -                    $this-&gt;tokenStorage-&gt;setToken(null); +                    // $this-&gt;tokenStorage-&gt;setToken(null);                       log_info('Hoàn thành đăng xuất');    Ngăn chặn đăng ký hội viên tạm thời   diff --git a/src/Eccube/Controller/EntryController.php b/src/Eccube/Controller/EntryController.php index 076ac0a991..30a089994a 100644 --- a/src/Eccube/Controller/EntryController.php +++ b/src/Eccube/Controller/EntryController.php @@ -180,7 +180,7 @@ class EntryController extends AbstractController                          -&gt;setPoint(0);                       $this-&gt;entityManager-&gt;persist($Customer); -                    $this-&gt;entityManager-&gt;flush(); +                    // $this-&gt;entityManager-&gt;flush();                       log_info('Hoàn thành đăng ký hội viên');    Ngăn chặn đăng ký hội viên chính thức   @@ -293,7 +293,7 @@ class EntryController extends AbstractController          $CustomerStatus = $this-&gt;customerStatusRepository-&gt;find(CustomerStatus::REGULAR);          $Customer-&gt;setStatus($CustomerStatus);          $this-&gt;entityManager-&gt;persist($Customer); -        $this-&gt;entityManager-&gt;flush(); +        // $this-&gt;entityManager-&gt;flush();           log_info('Hoàn thành đăng ký hội viên chính thức');    Không xóa giỏ hàng khi hoàn tất đơn hàng   Ngăn chặn việc xóa giỏ hàng khi hoàn tất đơn hàng.   Việc chuyển từ màn hình xác nhận đơn hàng sang hoàn tất chỉ là POST token CSRF tới /shopping/checkout, nên có thể không quá hữu ích.   diff --git a/src/Eccube/Controller/ShoppingController.php b/src/Eccube/Controller/ShoppingController.php index 8e99094d73..e8e744f39a 100644 --- a/src/Eccube/Controller/ShoppingController.php +++ b/src/Eccube/Controller/ShoppingController.php @@ -386,7 +386,7 @@ class ShoppingController extends AbstractShoppingController                      return $response;                  }  -                $this-&gt;entityManager-&gt;flush(); +                //$this-&gt;entityManager-&gt;flush();                   log_info('[Xử lý đơn hàng] Đã hoàn thành xử lý đơn hàng.', [$Order-&gt;getId()]);              } catch (ShoppingException $e) { @@ -409,7 +409,7 @@ class ShoppingController extends AbstractShoppingController               // Xóa giỏ hàng              log_info('[Xử lý đơn hàng] Xóa giỏ hàng.', [$Order-&gt;getId()]); -            $this-&gt;cartService-&gt;clear(); +            //$this-&gt;cartService-&gt;clear();               // Gán ID đơn hàng vào session              $this-&gt;session-&gt;set(OrderHelper::SESSION_ORDER_ID, $Order-&gt;getId()); @@ -417,7 +417,7 @@ class ShoppingController extends AbstractShoppingController              // Gửi mail              log_info('[Xử lý đơn hàng] Gửi mail đơn hàng.', [$Order-&gt;getId()]);              $this-&gt;mailService-&gt;sendOrderMail($Order); -            $this-&gt;entityManager-&gt;flush(); +            //$this-&gt;entityManager-&gt;flush();               log_info('[Xử lý đơn hàng] Đã hoàn thành xử lý đơn hàng. Chuyển sang màn hình hoàn tất.', [$Order-&gt;getId()]);  @@ -463,7 +463,7 @@ class ShoppingController extends AbstractShoppingController          }           log_info('[Hoàn tất đơn hàng] Xóa session luồng mua hàng.'); -        $this-&gt;orderHelper-&gt;removeSession(); +        //$this-&gt;orderHelper-&gt;removeSession();           $hasNextCart = !empty($this-&gt;cartService-&gt;getCarts());    Gỡ bỏ giới hạn sử dụng plugin coupon   Cho phép sử dụng coupon lặp lại nhiều lần.   diff --git a/Controller/CouponShoppingController.php b/Controller/CouponShoppingController.php index 7551217..091bbd7 100644 --- a/Controller/CouponShoppingController.php +++ b/Controller/CouponShoppingController.php @@ -159,7 +159,7 @@ class CouponShoppingController extends AbstractController                      $form-&gt;get('coupon_cd')-&gt;addError(new FormError(trans('plugin_coupon.front.shopping.sameuser')));                      $error = true;                  } - +                $error = false;                  // ----------------------------------                  // Thêm mục giảm giá / Ghi đè tổng tiền                  // ----------------------------------  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/testing/apply_patch",
        "teaser":null},{
        "title": "Các lưu ý khi thực hiện kiểm thử",
        "excerpt":"Chú ý!! Công cụ này thực sự tấn công vào website để kiểm tra xem có lỗ hổng bảo mật hay không. Chỉ sử dụng trên môi trường Docker cục bộ, tuyệt đối không sử dụng trên website đang hoạt động. Có thể dữ liệu sẽ bị thay đổi hoặc xóa ngoài ý muốn.  Bạn tự chịu trách nhiệm khi kiểm thử, Công ty EC-CUBE và cộng đồng phát triển liên quan sẽ không chịu bất kỳ trách nhiệm nào, xin hãy lưu ý trước khi thực hiện.   Khi thực hiện kiểm thử với OWASP ZAP, có một số điểm cần lưu ý. Nếu không nắm rõ các điểm này, quét động của OWASP ZAP sẽ không đầy đủ và có thể không phát hiện được lỗ hổng.   Sử dụng chế độ Protect Mode   Sau khi khởi động OWASP ZAP, hãy chuyển sang Protect Mode. Chế độ này sẽ giới hạn kiểm tra lỗ hổng trong các URL được phép trong context.      Chú ý! Nếu dùng chế độ Standard hoặc Attack, có thể vô tình tấn công ra ngoài website.   Chức năng tự động sinh token Anti-CSRF   Chức năng tự động sinh token Anti-CSRF có thể không hoạt động tốt. Ngay cả trên OWASP ZAP cũng chỉ là chức năng beta. Lỗi liên quan đến không khớp token CSRF có thể tránh được bằng cách sử dụng cùng một session khi thăm dò thủ công qua Local Proxes và khi quét động.   Thăm dò thủ công và quét động phải dùng cùng một session   Khi thăm dò thủ công qua Local Proxes và khi quét động, cần sử dụng cùng một session. Khi thực hiện quét động, hãy đảm bảo token CSRF hợp lệ và xác nhận chắc chắn tấn công đã được thực hiện.   Sử dụng Spider   Nếu sử dụng Spider, session sẽ không được giữ lại khi quét động, token CSRF sẽ thay đổi và kiểm thử sẽ thất bại. Spider chỉ nên dùng để kiểm thử các request GET.   Form POST   Do vấn đề về session và token CSRF, nên thăm dò thủ công tất cả các form submit bằng POST để đảm bảo.   Pattern chuyển trang đặc biệt   Với các URL điều khiển chuyển trang bằng tham số POST như mode=confirm, mode=complete, không thể quét động toàn bộ từ tầng trên. Cần quét động từng tham số riêng biệt từ lịch sử, v.v.   Về addon sequence   Addon sequence cho phép kiểm thử chuyển trang nhiều màn hình. Tuy nhiên, có vẻ chưa hỗ trợ tốt nhập tiếng Nhật. Chỉ nên dùng cho các chức năng không liên quan đến nhập tiếng Nhật và URL không thay đổi.   Quét động màn hình quản trị   Màn hình quản trị có thể quét động liên tục vì token CSRF không thay đổi trừ khi logout. Tuy nhiên, nếu quét động kéo dài, khả năng thất bại sẽ tăng lên. Nên lặp lại thăm dò thủ công và quét động theo từng chức năng để đảm bảo.   Addon beta, alpha   Nếu cài thêm các addon kiểm tra XSS, SQL Injection beta/alpha, số lượng kiểm tra sẽ tăng rất nhiều. Kết quả là quét động kéo dài, session có thể bị thay đổi và kiểm thử thất bại.   Không nên quá tin vào kết quả kiểm thử   OWASP ZAP cũng có giới hạn, vẫn có thể có lỗ hổng không phát hiện được. Không nên chỉ tin vào một lần kiểm thử, hãy kiểm tra thường xuyên và liên tục.   ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/testing/attention",
        "teaser":null},{
        "title": "Phân loại Context",
        "excerpt":"OWASP ZAP có chức năng đăng nhập tự động để kiểm thử các trang cần đăng nhập, cho phép thiết lập pattern xác thực cho từng context. Vì vậy, context được chia thành 3 loại tùy theo cách sử dụng HTTP Session:      Màn hình quản trị   Front (khách vãng lai)   Front (đã đăng nhập)   Lưu ý: Nếu sử dụng đồng thời nhiều context này, session có thể bị xung đột và không thể đăng nhập, hãy chú ý!   Với từng context, có thể thiết lập các mục sau:      Thiết lập URL kiểm thử   Thiết lập URL loại trừ khỏi kiểm thử   Thiết lập ký tự nối query string, POST (&amp;, =, …)   Thiết lập OS, middleware đang sử dụng   Thiết lập pattern xác thực   Thiết lập user xác thực   Thiết lập cách quản lý HTTP Session   Thiết lập alert filter   Tùy theo loại context, đã chuẩn bị sẵn file cấu hình, hãy import và sử dụng phù hợp.   ## Dành cho màn hình quản trị docker-compose -f docker-compose.yml -f docker-compose.owaspzap.yml exec zap zap-cli -p 8090 context import /zap/wrk/admin.context ## Dành cho front (đã đăng nhập) docker-compose -f docker-compose.yml -f docker-compose.owaspzap.yml exec zap zap-cli -p 8090 context import /zap/wrk/front_login.context ## Dành cho front (khách vãng lai) docker-compose -f docker-compose.yml -f docker-compose.owaspzap.yml exec zap zap-cli -p 8090 context import /zap/wrk/front_guest.context   Hãy thực hiện kiểm thử cho từng context và đánh giá báo cáo kết quả kiểm thử tương ứng.   Lưu ý: Nếu lưu session của OWASP ZAP riêng cho từng context sẽ rất tiện lợi.  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/testing/context",
        "teaser":null},{
        "title": "Thực hiện kiểm thử",
        "excerpt":"   Cấu hình môi trường   Các lưu ý khi thực hiện kiểm thử   Thiết lập để kiểm thử không bị gián đoạn   Phân loại context   Cách thăm dò thủ công   Cách thực hiện quét động   Danh sách URL đối tượng kiểm thử  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/testing",
        "teaser":null},{
        "title": "Cách thăm dò thủ công",
        "excerpt":"Khám phá tất cả các trang bằng Firefox đã thiết lập Local Proxes. Các trang có thể truy cập bằng GET có thể phát hiện bằng chức năng import containing urls hoặc Spider, nên hãy tập trung thăm dò các form chuyển trang bằng POST.   Lưu ý: Khi thăm dò thủ công, hãy chú ý không logout giữa chừng. Nếu logout, token CSRF sẽ thay đổi và quét động có thể thất bại.   Để token CSRF không bị thay đổi trong quá trình kiểm thử, bí quyết là lặp lại thăm dò thủ công → quét động theo từng chức năng.   Form nhập tiếng Nhật   Với các form bắt buộc nhập tiếng Nhật như tên Kana, hãy chắc chắn nhập tiếng Nhật khi thăm dò thủ công. Việc này giúp quét động cũng kiểm thử với dữ liệu tiếng Nhật.   Pattern chuyển trang đặc biệt   Trường hợp điều khiển chuyển trang bằng tham số mode trong POST   Với các chức năng có pattern chuyển trang như Nhập form → Màn hình xác nhận → Màn hình hoàn tất, có 2 loại pattern lớn:   1. Trường hợp màn hình nhập, xác nhận, hoàn tất được phân biệt bằng URL                  Màn hình       Nhập       Xác nhận       Hoàn tất                       URL       /shopping       /shopping/confirm       /shopping/complete           2. Trường hợp chuyển trang nhập, xác nhận được phân biệt bằng tham số mode trong POST                  Màn hình       Nhập       Xác nhận       Hoàn tất                       URL       /contact       /contact       /contact/complete                 POST               mode=confirm       mode=complete           Trường hợp 1 thì không có gì khó, nhưng với trường hợp 2, khi quét động cần có thêm thao tác đặc biệt.   Lưu ý: Áp dụng cho các màn hình như liên hệ, đăng ký hội viên, v.v.   Trường hợp truyền dữ liệu qua session   Với các chức năng có pattern Nhập form → Xác nhận → Hoàn tất, nếu dữ liệu nhập ở màn hình nhập được lưu vào session và khi chuyển từ xác nhận sang hoàn tất không có input (không truyền qua hidden), thì chỉ có thể quét động từ nhập → xác nhận, không thể quét động từ xác nhận → hoàn tất.   Lưu ý: Có thể kiểm thử chuyển trang nhiều màn hình bằng addon sequence hoặc ZAP Script, nhưng phần này xin phép không đề cập chi tiết.   Nếu có tuỳ biến hoặc plugin hiển thị lại nội dung nhập ở màn hình hoàn tất, có thể sẽ không kiểm thử đầy đủ, hãy chú ý.   Lưu ý: Áp dụng cho màn hình hoàn tất mua hàng.  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/testing/manual_explore",
        "teaser":null},{
        "title": "Danh sách URL đối tượng kiểm thử",
        "excerpt":"Tổng hợp danh sách URL của EC-CUBE dựa trên output của lệnh bin/console debug:router. Hãy sử dụng để kiểm tra xem đã kiểm thử đầy đủ khi thăm dò thủ công hoặc quét động chưa.   Danh sách URL có thể import vào OWASP ZAP qua Import → Import a Containing URLs tại đây.   Lưu ý: Hiện đang được cập nhật                  URL       Bắt buộc nhập tiếng Nhật       POST (đang cập nhật)       Chuyển trang bằng mode       Upload file       Khó kiểm thử                       https://ec-cube/                                                         https://ec-cube/admin                                                         https://ec-cube/admin/                                                         https://ec-cube/admin/change_password               ○                                         https://ec-cube/admin/content                                                         https://ec-cube/admin/content/block                                                         https://ec-cube/admin/content/block/1                                                         https://ec-cube/admin/content/block/1/delete               ○                       ○                 https://ec-cube/admin/content/block/1/edit               ○                                         https://ec-cube/admin/content/block/new               ○                                         https://ec-cube/admin/content/cache               ○                                         https://ec-cube/admin/content/css               ○                                         https://ec-cube/admin/content/file_delete               ○                       ○                 https://ec-cube/admin/content/file_delete?select_file=/assets                                       ○                 https://ec-cube/admin/content/file_download                                                         https://ec-cube/admin/content/file_download?select_file=%2Fbbb.html                                                         https://ec-cube/admin/content/file_manager               ○               ○                         https://ec-cube/admin/content/file_view                                                         https://ec-cube/admin/content/file_view?file=%2Fbbb.html                                                         https://ec-cube/admin/content/js               ○                                         https://ec-cube/admin/content/layout                                                         https://ec-cube/admin/content/layout/1                                                         https://ec-cube/admin/content/layout/1/delete               ○                       ○                 https://ec-cube/admin/content/layout/1/edit               ○                                         https://ec-cube/admin/content/layout/1/preview                                                         https://ec-cube/admin/content/layout/new               ○                                         https://ec-cube/admin/content/layout/view_block                                                         https://ec-cube/admin/content/maintenance               ○                                         https://ec-cube/admin/content/news                                                         https://ec-cube/admin/content/news/1                                                         https://ec-cube/admin/content/news/1/delete               ○                       ○                 https://ec-cube/admin/content/news/1/edit               ○                                         https://ec-cube/admin/content/news/new               ○                                         https://ec-cube/admin/content/news/page/1                                                         https://ec-cube/admin/content/page                                                         https://ec-cube/admin/content/page/1                                                         https://ec-cube/admin/content/page/1/delete               ○                       ○                 https://ec-cube/admin/content/page/1/edit               ○                                         https://ec-cube/admin/content/page/new               ○                                         https://ec-cube/admin/customer               ○                                         https://ec-cube/admin/customer/1                                                         https://ec-cube/admin/customer/1/delete               ○                       ○                 https://ec-cube/admin/customer/1/delivery                                                         https://ec-cube/admin/customer/1/delivery/1/delete               ○                       ○                 https://ec-cube/admin/customer/1/delivery/1/edit               ○                                         https://ec-cube/admin/customer/1/delivery/2               ○                                         https://ec-cube/admin/customer/1/delivery/2/delete               ○                       ○                 https://ec-cube/admin/customer/1/delivery/2/edit       ○       ○                                         https://ec-cube/admin/customer/1/delivery/new       ○       ○                                         https://ec-cube/admin/customer/1/edit       ○       ○                                         https://ec-cube/admin/customer/1/resend               ○                                         https://ec-cube/admin/customer/export                                                         https://ec-cube/admin/customer/new       ○       ○                                         https://ec-cube/admin/customer/page                                                         https://ec-cube/admin/customer/page/1               ○                                         https://ec-cube/admin/customer/page/1?resume=1               ○                                         https://ec-cube/admin/login               ○                                         https://ec-cube/admin/logout               ○                                         https://ec-cube/admin/order               ○                                         https://ec-cube/admin/order/1                                                         https://ec-cube/admin/order/1/edit       ○       ○                                         https://ec-cube/admin/order/1/mail                                                         https://ec-cube/admin/order/bulk_delete               ○                       ○                 https://ec-cube/admin/order/csv_template                                                         https://ec-cube/admin/order/export                                                         https://ec-cube/admin/order/export/order                                                         https://ec-cube/admin/order/export/pdf                                                         https://ec-cube/admin/order/export/pdf/download                                                         https://ec-cube/admin/order/export/pdf?ids%5B%5D=3                                                         https://ec-cube/admin/order/export/shipping                                                         https://ec-cube/admin/order/mail/view                                                         https://ec-cube/admin/order/new       ○       ○                                         https://ec-cube/admin/order/page/1                                                         https://ec-cube/admin/order/search/customer/html                                                         https://ec-cube/admin/order/search/customer/html/page/1                                                         https://ec-cube/admin/order/search/customer/id               ○                                         https://ec-cube/admin/order/search/order_item_type                                                         https://ec-cube/admin/order/search/product                                                         https://ec-cube/admin/order/search/product/page/1                                                         https://ec-cube/admin/order/shipping_csv_upload                                                         https://ec-cube/admin/order?order_status_id=1                                                         https://ec-cube/admin/order?order_status_id=4                                                         https://ec-cube/admin/order?resume=1                                                         https://ec-cube/admin/product                                                         https://ec-cube/admin/product/bulk/product-status/1                                                         https://ec-cube/admin/product/category                                                         https://ec-cube/admin/product/category/1                                                         https://ec-cube/admin/product/category/1/delete       ○                               ○                 https://ec-cube/admin/product/category/1/edit                                                         https://ec-cube/admin/product/category/export                                                         https://ec-cube/admin/product/category/sort_no/move                                                         https://ec-cube/admin/product/category_csv_upload                                                         https://ec-cube/admin/product/class_category                                                         https://ec-cube/admin/product/class_category/1                                                         https://ec-cube/admin/product/class_category/1/1                                                         https://ec-cube/admin/product/class_category/1/1/delete                                       ○                 https://ec-cube/admin/product/class_category/1/1/edit                                                         https://ec-cube/admin/product/class_category/1/1/visibility                                                         https://ec-cube/admin/product/class_category/1/2                                                         https://ec-cube/admin/product/class_category/1/2/edit                                                         https://ec-cube/admin/product/class_category/1/2/visibility                                                         https://ec-cube/admin/product/class_category/1/3                                                         https://ec-cube/admin/product/class_category/1/3/edit                                                         https://ec-cube/admin/product/class_category/1/3/visibility                                                         https://ec-cube/admin/product/class_category/sort_no/move                                                         https://ec-cube/admin/product/class_name                                                         https://ec-cube/admin/product/class_name/1/delete                                       ○                 https://ec-cube/admin/product/class_name/1/edit                                                         https://ec-cube/admin/product/class_name/sort_no/move                                                         https://ec-cube/admin/product/classes/1/load                                                         https://ec-cube/admin/product/csv_template                                                         https://ec-cube/admin/product/csv_template/1                                                         https://ec-cube/admin/product/csv_template/category                                                         https://ec-cube/admin/product/csv_template/product                                                         https://ec-cube/admin/product/export                                                         https://ec-cube/admin/product/page                                                         https://ec-cube/admin/product/page/1                                                         https://ec-cube/admin/product/product                                                         https://ec-cube/admin/product/product/1                                                         https://ec-cube/admin/product/product/1/copy                                                         https://ec-cube/admin/product/product/1/delete                                       ○                 https://ec-cube/admin/product/product/1/display                                                         https://ec-cube/admin/product/product/1/edit                                                         https://ec-cube/admin/product/product/class                                                         https://ec-cube/admin/product/product/class/1                                                         https://ec-cube/admin/product/product/class/1/clear                                                         https://ec-cube/admin/product/product/class/1/clear?return_product_list=0                                                         https://ec-cube/admin/product/product/class/1?return_product_list=0                                                         https://ec-cube/admin/product/product/class/2                                                         https://ec-cube/admin/product/product/class/2?return_product_list=0                                                         https://ec-cube/admin/product/product/image/add                               ○                         https://ec-cube/admin/product/product/new                                                         https://ec-cube/admin/product/product_csv_upload                                                         https://ec-cube/admin/product/tag                                                         https://ec-cube/admin/product/tag/1/delete                                       ○                 https://ec-cube/admin/product/tag/sort_no/move                                                         https://ec-cube/admin/sale_chart                                                         https://ec-cube/admin/search_customer                                                         https://ec-cube/admin/search_nonstock                                                         https://ec-cube/admin/setting                               ○                         https://ec-cube/admin/setting/shop                                                         https://ec-cube/admin/setting/shop/csv                                                         https://ec-cube/admin/setting/shop/csv/1                                                         https://ec-cube/admin/setting/shop/csv/2                                                         https://ec-cube/admin/setting/shop/csv/4                                                         https://ec-cube/admin/setting/shop/csv/5                                                         https://ec-cube/admin/setting/shop/delivery                                                         https://ec-cube/admin/setting/shop/delivery/1                                                         https://ec-cube/admin/setting/shop/delivery/1/delete                                       ○                 https://ec-cube/admin/setting/shop/delivery/1/edit                                                         https://ec-cube/admin/setting/shop/delivery/1/visibility                                                         https://ec-cube/admin/setting/shop/delivery/2                                                         https://ec-cube/admin/setting/shop/delivery/new                                                         https://ec-cube/admin/setting/shop/delivery/sort_no/move                                                         https://ec-cube/admin/setting/shop/mail                                                         https://ec-cube/admin/setting/shop/mail/1                                                         https://ec-cube/admin/setting/shop/mail/preview                                                         https://ec-cube/admin/setting/shop/payment                                                         https://ec-cube/admin/setting/shop/payment/1                                                         https://ec-cube/admin/setting/shop/payment/1/delete                                       ○                 https://ec-cube/admin/setting/shop/payment/1/edit                                                         https://ec-cube/admin/setting/shop/payment/1/visible                                                         https://ec-cube/admin/setting/shop/payment/image/add                               ○                         https://ec-cube/admin/setting/shop/payment/new                                                         https://ec-cube/admin/setting/shop/payment/sort_no/move                                                         https://ec-cube/admin/setting/shop/tax                                                         https://ec-cube/admin/setting/shop/tax/1/delete                                       ○                 https://ec-cube/admin/setting/shop/tax/new                                                         https://ec-cube/admin/setting/system                                                         https://ec-cube/admin/setting/system/authority                                                         https://ec-cube/admin/setting/system/log                                                         https://ec-cube/admin/setting/system/masterdata                                                         https://ec-cube/admin/setting/system/masterdata/Eccube-Entity-Master-Work                                                         https://ec-cube/admin/setting/system/masterdata/Eccube-Entity-Master-Work/edit                                                         https://ec-cube/admin/setting/system/member                                                         https://ec-cube/admin/setting/system/member/1                                                         https://ec-cube/admin/setting/system/member/1/delete                                       ○                 https://ec-cube/admin/setting/system/member/1/down                                                         https://ec-cube/admin/setting/system/member/1/edit                                                         https://ec-cube/admin/setting/system/member/1/up                                                         https://ec-cube/admin/setting/system/member/new                                                         https://ec-cube/admin/setting/system/security                                                         https://ec-cube/admin/setting/system/system                                                         https://ec-cube/admin/setting/system/system/phpinfo                                                         https://ec-cube/admin/shipping                                                         https://ec-cube/admin/shipping/1                                                         https://ec-cube/admin/shipping/1/edit       ○                                                 https://ec-cube/admin/shipping/1/order_status                                                         https://ec-cube/admin/shipping/1/tracking_number                                                         https://ec-cube/admin/shipping/2                                                         https://ec-cube/admin/shipping/2/edit       ○                                                 https://ec-cube/admin/shipping/notify_mail/1                                                         https://ec-cube/admin/shipping/preview_notify_mail/1                                                         https://ec-cube/admin/store                                                         https://ec-cube/admin/store/plugin                                                         https://ec-cube/admin/store/plugin/1/disable                                                         https://ec-cube/admin/store/plugin/1/enable                                       ○                 https://ec-cube/admin/store/plugin/1/uninstall                                       ○                 https://ec-cube/admin/store/plugin/1/update                                       ○                 https://ec-cube/admin/store/plugin/api                                       ○                 https://ec-cube/admin/store/plugin/api/delete/1/uninstall                                                         https://ec-cube/admin/store/plugin/api/install                                       ○                 https://ec-cube/admin/store/plugin/api/install/1/confirm                                       ○                 https://ec-cube/admin/store/plugin/api/schema_update                                       ○                 https://ec-cube/admin/store/plugin/api/search                                                         https://ec-cube/admin/store/plugin/api/search/page                                                         https://ec-cube/admin/store/plugin/api/search/page/1                                                         https://ec-cube/admin/store/plugin/api/update                                                         https://ec-cube/admin/store/plugin/api/upgrade                                       ○                 https://ec-cube/admin/store/plugin/api/upgrade/1/confirm                                       ○                 https://ec-cube/admin/store/plugin/authentication_setting                                       ○                 https://ec-cube/admin/store/plugin/install                                                         https://ec-cube/admin/store/template                                                         https://ec-cube/admin/store/template/1                                                         https://ec-cube/admin/store/template/1/delete                                       ○                 https://ec-cube/admin/store/template/1/download                                                         https://ec-cube/admin/store/template/install                                                         https://ec-cube/block                                                         https://ec-cube/block/cart                                                         https://ec-cube/block/cart_sp                                                         https://ec-cube/block/search_product                                                         https://ec-cube/block/search_product_sp                                                         https://ec-cube/cart                                                         https://ec-cube/cart/buystep                                                         https://ec-cube/cart/buystep/1_1                                                         https://ec-cube/cart/down                                                         https://ec-cube/cart/down/1                                                         https://ec-cube/cart/down/11                                                         https://ec-cube/cart/remove                                       ○                 https://ec-cube/cart/remove/11                                       ○                 https://ec-cube/cart/up                                                         https://ec-cube/cart/up/1                                                         https://ec-cube/cart/up/11                                                         https://ec-cube/contact       ○               ○                                 https://ec-cube/contact/complete                                                         https://ec-cube/entry       ○               ○                                 https://ec-cube/entry/activate/xxx/1                                       ○                 https://ec-cube/entry/complete                                                         https://ec-cube/forgot                                                         https://ec-cube/forgot/complete                                                         https://ec-cube/forgot/reset/xxx                                       ○                 https://ec-cube/guide                                                         https://ec-cube/help                                                         https://ec-cube/help/about                                                         https://ec-cube/help/agreement                                                         https://ec-cube/help/privacy                                                         https://ec-cube/help/tradelaw                                                         https://ec-cube/logout                                                         https://ec-cube/mypage                                                         https://ec-cube/mypage/                                                         https://ec-cube/mypage/change       ○                                                 https://ec-cube/mypage/change_complete                                                         https://ec-cube/mypage/delivery                                                         https://ec-cube/mypage/delivery/1                                                         https://ec-cube/mypage/delivery/1/delete       ○                                                 https://ec-cube/mypage/delivery/1/edit       ○                                                 https://ec-cube/mypage/delivery/new       ○                                                 https://ec-cube/mypage/favorite                                                         https://ec-cube/mypage/favorite/1/delete       ○                                                 https://ec-cube/mypage/history                                                         https://ec-cube/mypage/history/1                                                         https://ec-cube/mypage/history/2                                                         https://ec-cube/mypage/login                                                         https://ec-cube/mypage/order/1                                                         https://ec-cube/mypage/withdraw               ○       ○                                 https://ec-cube/mypage/withdraw_complete                                                         https://ec-cube/products                                                         https://ec-cube/products/add_cart                                                         https://ec-cube/products/add_cart/1                                                         https://ec-cube/products/add_cart/2                                                         https://ec-cube/products/add_favorite                                                         https://ec-cube/products/add_favorite/1                                                         https://ec-cube/products/add_favorite/2                                                         https://ec-cube/products/detail                                                         https://ec-cube/products/detail/1                                                         https://ec-cube/products/list                                                         https://ec-cube/products/list?category_id&amp;disp_number=0&amp;mode&amp;name&amp;orderby=0&amp;pageno                                                         https://ec-cube/products/list?category_id=6                                                         https://ec-cube/robots.txt                                                         https://ec-cube/shopping                                                         https://ec-cube/shopping/checkout                                                         https://ec-cube/shopping/complete                                       ○                 https://ec-cube/shopping/confirm                                                         https://ec-cube/shopping/customer                                                         https://ec-cube/shopping/error                                                         https://ec-cube/shopping/login                                                         https://ec-cube/shopping/nonmember       ○                                                 https://ec-cube/shopping/redirect_to                                                         https://ec-cube/shopping/shipping                                                         https://ec-cube/shopping/shipping/1                                                         https://ec-cube/shopping/shipping/4                                                         https://ec-cube/shopping/shipping_edit                                                         https://ec-cube/shopping/shipping_edit/1       ○                                                 https://ec-cube/shopping/shipping_multiple                                                         https://ec-cube/shopping/shipping_multiple_edit                                                         https://ec-cube/user_data/xxx                                       ○          ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/testing/manual_inspection_urls",
        "teaser":null},{
        "title": "Hướng dẫn cấu hình môi trường",
        "excerpt":"Yêu cầu hệ thống      Docker 1.13.0 trở lên        docker-compose 1.10.0 trở lên       Chrome (phiên bản mới nhất) - Dùng để thao tác giao diện quản lý OWASP ZAP   Firefox (phiên bản mới nhất) - Dùng để thăm dò thủ công qua Local Proxes   Cài đặt   Tham khảo Quick Start   Lưu ý: Sẽ bổ sung chi tiết sau   Nội dung được tự động thiết lập bởi docker-compose.owaspzap.yml   Thư mục mount VOLUME   &lt;ec-cube-thư-mục-cài-đặt&gt;/ec-cube/zap:/zap/wrk   Nếu thiết lập lưu session, report, … vào /zap/wrk thì có thể dễ dàng lấy ra từ môi trường local.   Addon được cài đặt      help_ja_JP - Trợ giúp tiếng Nhật   wappalyzer - Phát hiện công nghệ sử dụng   sequence - Addon cho kiểm thử chuyển trang nhiều màn hình   Addon bị gỡ bỏ      hud - Head Up Display. Không sử dụng vì gây xung đột với các công cụ thao tác trình duyệt như Selenium   Các tuỳ chọn được thiết lập tự động      Ngôn ngữ tiếng Nhật   Vô hiệu hoá API key            Để tăng tiện lợi trong môi trường đóng           Token Anti-CSRF (thử nghiệm)   Token HttpSession   Global Alert Filter (thử nghiệm)            Đăng ký các cảnh báo luôn bị false positive           Khác      Tự động xuất chứng chỉ gốc SSL cho Local Proxes            Được xuất ra &lt;ec-cube-thư-mục-cài-đặt&gt;/zap/owasp_zap_root_ca.cer trên môi trường local       Đọc vào Firefox qua Certificate Manager để sử dụng          ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/penetration-testing/testing/settings",
        "teaser":null},{
        "title": "Mở rộng thanh điều hướng quản trị",
        "excerpt":"Thêm menu plugin vào màn hình quản trị. Bằng cách triển khai EccubeNav như bên dưới, bạn có thể ghi đè/thêm menu. Nếu thêm mới, menu sẽ được thêm vào cuối menu mục tiêu. Hãy tham khảo cấu trúc định nghĩa nav của hệ thống chính. Với plugin, menu chỉ hiển thị khi plugin được kích hoạt. Thanh điều hướng quản trị của hệ thống chính được định nghĩa tại /app/config/eccube/packages/eccube_nav.yaml.   class Nav implements EccubeNav {     public static function getNav()     {         return [             'product' =&gt; [                 'children' =&gt; [                     'hoge' =&gt; [                         'name' =&gt; 'Thêm con vào Quản lý sản phẩm',                         'url' =&gt; 'admin_homepage',                     ],                 ],             ],             'piyo' =&gt; [                 'name' =&gt; 'Menu cấp 1 (thêm mới)',                 'icon' =&gt; 'fa-cube',                 'children' =&gt; [                     'piyopiyo1' =&gt; [                         'name' =&gt; 'Menu cấp 2 (không có con)',                         'url' =&gt; 'admin_homepage',                     ],                     'piyopiyo2' =&gt; [                         'name' =&gt; 'Menu cấp 2 (có con)',                         'children' =&gt; [                             'piyopiyopiyo1' =&gt; [                                 'name' =&gt; 'Menu cấp 3 - 1',                                 'url' =&gt; 'admin_homepage',                             ],                             'piyopiyopiyo2' =&gt; [                                 'name' =&gt; 'Menu cấp 3 - 2',                                 'url' =&gt; 'admin_homepage',                             ],                         ],                     ],                 ],             ],         ];     } }  ","categories": [],
        "tags": ["plugin","admin","nav"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/plugin_admin_nav",
        "teaser":null},{
        "title": "Phát triển Plugin",
        "excerpt":"Giải thích các bước cơ bản để phát triển plugin.   Điều kiện tiên quyết      Đã cài đặt EC-CUBE ở môi trường local   Có thể chạy PHP trên dòng lệnh   Tạo khung plugin   Có thể tạo khung plugin bằng lệnh bin/console eccube:plugin:generate.   bin/console eccube:plugin:generate   EC-CUBE Plugin Generator Interactive Wizard ===========================================   name [EC-CUBE Sample Plugin]:  &gt; &lt;Nhập tên plugin rồi Enter&gt;   code [Sample]:  &gt; &lt;Nhập mã plugin rồi Enter&gt;   ver [1.0.0]:  &gt; &lt;Nhập số phiên bản rồi Enter&gt;   [OK] Plugin đã được tạo thành công: EC-CUBE Sample Plugin Sample 1.0.0   Sau đó sẽ tạo ra khung plugin tại app/Plugin/Sample.   Cài đặt plugin   Có thể cài đặt bằng lệnh bin/console eccube:plugin:install --code=&lt;mã plugin&gt;.   bin/console eccube:plugin:install --code Sample   Chạy bin/console cache:clear --no-warmup...   // Đang xóa cache cho môi trường dev với debug  // true   [OK] Đã xóa cache cho môi trường \"dev\" (debug=true).     [OK] Đã cài đặt.   Sau khi cài đặt, có thể xác nhận tại EC-CUBE quản trị → Owners Store → Plugin → Danh sách plugin.   Các lệnh khác có thể sử dụng khi phát triển, vui lòng xem tại đây。   Phát triển plugin   Hãy sửa file trong app/Plugin/&lt;mã plugin&gt; để phát triển.   Khi xóa plugin, toàn bộ file dưới app/Plugin/&lt;mã plugin&gt; cũng sẽ bị xóa vật lý, hãy chú ý!   Khác   Nếu muốn quản lý mã nguồn plugin bằng Git, hãy tham khảo bài viết sau:   Sử dụng Composer để tăng hiệu suất phát triển plugin EC-CUBE4   Nếu muốn viết test E2E cho plugin, hãy tham khảo bài viết sau:   Viết test E2E cho plugin EC-CUBE trong 10 phút   Nếu muốn test plugin trước khi đăng ký lên Owners Store, hãy xem trang sau。  ","categories": [],
        "tags": ["plugin","development"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/plugin_development",
        "teaser":null},{
        "title": "Lưu ý khi sử dụng EC-CUBE4.0 (Composer v1)",
        "excerpt":"Có thông báo rằng metadata của Composer v1 sử dụng trong EC-CUBE4.0 sẽ bị ngừng cung cấp từ sau ngày 1/8/2025.   https://blog.packagist.com/shutting-down-packagist-org-support-for-composer-1-x/   EC-CUBE4.0 sử dụng Composer v1 để quản lý plugin, điều này ảnh hưởng đến việc cài đặt/kích hoạt/vô hiệu hóa/xóa/cập nhật plugin.   Việc ngừng cung cấp chỉ ảnh hưởng đến truy cập metadata của Composer v1 (thông tin version package, URL tải về, v.v.), nên thông thường sẽ không bị ảnh hưởng nếu không cập nhật dependency.   File composer.lock đã lưu URL tải về, nên việc cài đặt package bằng composer install vẫn thực hiện như trước.   Tuy nhiên, do lịch sử phát triển, EC-CUBE4.0 có thể cần truy cập metadata Composer v1 không cần thiết khi cài đặt/kích hoạt/vô hiệu hóa/xóa/cập nhật plugin.   Cách xử lý   Sửa file composer.json           Xóa phần require-dev. Xóa phần require-dev như bên dưới. Phần này chỉ dùng khi phát triển nên xóa không ảnh hưởng.        \"require-dev\": {      \"bheller/images-generator\": \"^1.0\",      \"captbaritone/mailcatcher-codeception-module\": \"^1.2\",      \"codeception/codeception\": \"~2.4.5\",      \"dama/doctrine-test-bundle\": \"^5.0\",      \"fzaninotto/faker\": \"^1.7\",      \"mikey179/vfsstream\": \"^1.6\",      \"phpstan/phpstan\": \"^0.12\",      \"phpunit/phpunit\": \"^6.5\",      \"symfony/browser-kit\": \"^3.4\",      \"symfony/phpunit-bridge\": \"^3.4\"  },                Thêm cấu hình vào phần repositories. Thêm cấu hình tham chiếu eccube-plugin-installer vào GitHub và vô hiệu hóa packagist.org để tránh lỗi không mong muốn. // ここから // ここまで cần xóa khi thêm vào thực tế để tránh lỗi cú pháp.        \"repositories\": {      \"eccube\": {          \"type\": \"composer\",          \"url\": \"https://package-api.ec-cube.net\",          \"options\": {              \"http\": {                  \"header\": [\"X-ECCUBE-KEY: &lt;chuỗi key xác thực&gt;\"]              }          }      }      // ここから      ,      \"packagist.org\": false,      \"eccube/plugin-installer\": {          \"type\": \"vcs\",          \"url\": \"https://github.com/EC-CUBE/eccube-plugin-installer\",          \"no-api\": true      }      // ここまで  }           Chạy lệnh composer install   Tiếp theo, dùng ssh để chạy lệnh composer install –no-scripts –no-plugins. Cần thiết để đảm bảo tính nhất quán dưới vendor. Không thêm –no-dev để cài luôn các package trong require-dev (dù đã xóa khỏi composer.json nhưng composer.lock vẫn còn thông tin).   composer install --no-scripts --no-plugins   Sau khi sửa composer.json và chạy composer install, có thể cài đặt/kích hoạt/vô hiệu hóa/xóa/cập nhật plugin mà không cần cập nhật dependency.   Lưu ý   Trường hợp plugin phụ thuộc package khác   Ví dụ như Web API Plugin, nếu plugin phụ thuộc package khác sẽ bị ảnh hưởng bởi việc ngừng metadata Composer v1.   Có thể xử lý bằng cách thêm cấu hình GitHub của package phụ thuộc vào composer.json.   Nếu trong require của app/Plugin//composer.json có package ngoài ec-cube/plugin-installer thì là có phụ thuộc.   \"require\": {     \"ec-cube/plugin-installer\": \"~0.0.6 || ^2.0\",     \"trikoder/oauth2-bundle\": \"^2.1\",     \"nyholm/psr7\": \"^1.2\",     \"webonyx/graphql-php\": \"^14.0\"   },   Cách xử lý   Ví dụ với Web API Plugin, thêm cấu hình GitHub của các package phụ thuộc vào repositories.   // ここから // ここまで cần xóa khi thêm vào thực tế để tránh lỗi cú pháp       \"repositories\": {         \"eccube\": {             \"type\": \"composer\",             \"url\": \"https://package-api.ec-cube.net\",             \"options\": {                 \"http\": {                     \"header\": [\"X-ECCUBE-KEY: &lt;KEY xác thực&gt;\"]                 }             }         },         \"packagist.org\": false,         \"eccube/plugin-installer\": {             \"type\": \"vcs\",             \"url\": \"https://github.com/EC-CUBE/eccube-plugin-installer\",             \"no-api\": true         }         // ここから         ,         \"trikoder/oauth2-bundle\": {             \"type\": \"vcs\",             \"url\": \"https://github.com/trikoder/oauth2-bundle\",             \"no-api\": true         },         \"nyholm/psr7\": {             \"type\": \"vcs\",             \"url\": \"https://github.com/Nyholm/psr7\",             \"no-api\": true         },         \"webonyx/graphql-php\": {             \"type\": \"vcs\",             \"url\": \"https://github.com/webonyx/graphql-php\",             \"no-api\": true         },         \"php-http/message-factory\": {             \"type\": \"vcs\",             \"url\": \"https://github.com/php-http/message-factory\",             \"no-api\": true         },         \"psr/http-message\": {             \"type\": \"vcs\",             \"url\": \"https://github.com/php-fig/http-message\",             \"no-api\": true         },         \"psr/http-factory\": {             \"type\": \"vcs\",             \"url\": \"https://github.com/php-fig/http-factory\",             \"no-api\": true         },         \"league/oauth2-server\": {             \"type\": \"vcs\",             \"url\": \"https://github.com/thephpleague/oauth2-server\",             \"no-api\": true         },         \"symfony/psr-http-message-bridge\": {             \"type\": \"vcs\",             \"url\": \"https://github.com/symfony/psr-http-message-bridge\",             \"no-api\": true         },         \"league/event\": {             \"type\": \"vcs\",             \"url\": \"https://github.com/thephpleague/event\",             \"no-api\": true         },         \"lcobucci/jwt\": {             \"type\": \"vcs\",             \"url\": \"https://github.com/lcobucci/jwt\",             \"no-api\": true         },         \"defuse/php-encryption\": {             \"type\": \"vcs\",             \"url\": \"https://github.com/defuse/php-encryption\",             \"no-api\": true         },         \"paragonie/random_compat\": {             \"type\": \"vcs\",             \"url\": \"https://github.com/paragonie/random_compat\",             \"no-api\": true         }         // ここまで     }   Khuyến nghị cài đặt/xóa/cập nhật plugin bằng dòng lệnh   Composer v1 sử dụng trong EC-CUBE4.0 cần nhiều tài nguyên, nên trên môi trường shared hosting hoặc tài nguyên hạn chế, việc cài đặt/xóa/cập nhật plugin từ quản trị có thể thất bại.   Ngay cả khi có vẻ hoạt động bình thường, có thể xảy ra bất nhất giữa danh sách package trong composer.json, file dưới app/Plugin, và dữ liệu dtb_plugin.   Khuyến nghị thao tác plugin bằng dòng lệnh để đảm bảo ổn định hơn.   https://qiita.com/nanasess/items/791c9ec98f69ada93ea0#コマンドラインでのプラグインインストール   Khuyến nghị nâng cấp EC-CUBE   Do không thể cập nhật các thư viện liên quan qua Composer, khuyến nghị nâng cấp lên EC-CUBE4.3 trở lên.   Nếu khó nâng cấp lên 4.3, hãy cố gắng nâng cấp lên 4.1 trở lên. EC-CUBE4.0 và 4.1 tương thích plugin nên nâng cấp ít tốn công hơn.   Xử lý sự cố   Q) Khi cập nhật plugin từ quản trị bị lỗi.   A) Có thể đã xảy ra bất nhất plugin. Hãy kiểm tra nội dung lỗi và thử cập nhật bằng dòng lệnh.           Nếu gặp lỗi truy cập metadata packagist.org         Your requirements could not be resolved to an installable set of packages.          Problem 1       - ec-cube/Api 2.1.2 requires nyholm/psr7 ^1.2 -&gt; no matching package found.       - ec-cube/Api 2.1.1 requires nyholm/psr7 ^1.2 -&gt; no matching package found.       - ec-cube/Api 2.1.4 requires nyholm/psr7 ^1.2 -&gt; no matching package found.       - ec-cube/Api 2.1.3 requires nyholm/psr7 ^1.2 -&gt; no matching package found.       - ec-cube/Api 2.1.0 requires nyholm/psr7 ^1.2 -&gt; no matching package found.       - Installation request for ec-cube/api ^2.1 -&gt; satisfiable by ec-cube/Api[2.1.0, 2.1.3, 2.1.4, 2.1.1, 2.1.2].           Nếu gặp lỗi “no matching package found.”, có thể do ảnh hưởng của việc ngừng metadata Composer v1. Hãy tham khảo tại đây để thêm package phụ thuộc vào composer.json            Nếu gặp lỗi khi cập nhật dependency         [21.1MiB/8.61s] Package operations: 0 installs, 0 updates, 42 removals   [21.1MiB/8.61s]   - Removing webmozart/assert (1.6.0)        In Filesystem.php line 217:                                                                                         Could not delete /var/www/html/vendor/webmozart/assert/CHANGELOG.md: The ty       pe \"datetimetz\" was implicitly marked as commented due to the configuration       . This is deprecated and will be removed in DoctrineBundle 2.0. Either set        the \"commented\" attribute in the configuration to \"false\" or mark the type        as commented in \"Eccube\\Doctrine\\DBAL\\Types\\UTCDateTimeTzType::requiresSQLC       ommentHint().\"           Nếu gặp lỗi “Could not delete …”, có thể do không thể giao tiếp với Composer v1. Hãy cập nhật bằng dòng lệnh.       Q) Làm sao tìm GitHub của package phụ thuộc?   A) Trên packagist.org ở phần detail bên phải sẽ có link GitHub.   Cách cài đặt Composer v1   Theo https://getcomposer.org/download/, sau 8/2025 có thể không còn setup v1, nên hướng dẫn cách tải trực tiếp v1.           Di chuyển vào thư mục cài đặt EC-CUBE        cd path/to/ec-cube                Tải composer.phar        curl -O https://getcomposer.org/download/1.10.27/composer.phar                Đổi tên thành composer        mv composer.phar composer           Chạy lệnh sau, nếu hiện logo composer là cài đặt thành công.   php composer list     ______   / ____/___  ____ ___  ____  ____  ________  _____  / /   / __ \\/ __ `__ \\/ __ \\/ __ \\/ ___/ _ \\/ ___/ / /___/ /_/ / / / / / / /_/ / /_/ (__  )  __/ / \\____/\\____/_/ /_/ /_/ .___/\\____/____/\\___/_/                     /_/ Composer version 1.10.27 2023-09-29 10:50:23  Usage:   command [options] [arguments] ...(省略)   Trong bài này, lệnh composer nghĩa là chạy php composer.   Nếu gặp lỗi command not found trên shared hosting, có thể PHP cài ở vị trí khác. Hãy tham khảo tài liệu server và chỉ định đường dẫn PHP như sau:   # Ví dụ trên Xserver /usr/bin/php7.4 composer list   ","categories": [],
        "tags": ["plugin","eccube","composer"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/plugin_eccube40",
        "teaser":null},{
        "title": "Cách xử lý sự cố plugin",
        "excerpt":"  Khi nào xảy ra lỗi?      Ngay sau khi cài plugin thì xuất hiện lỗi, không thể truy cập front hoặc quản trị   Khi kích hoạt plugin thì xuất hiện lỗi, không thể truy cập front hoặc quản trị   Cài đặt/cập nhật/kích hoạt plugin thành công nhưng hiển thị bị lỗi   Trang này sẽ hướng dẫn cách giải quyết các sự cố trên.   Cài đặt khi ở chế độ bảo trì   Khi cài plugin, nên chuyển sang chế độ bảo trì để tránh lỗi cache. Vào quản trị EC-CUBE → Quản lý nội dung → Quản lý bảo trì để bật chế độ bảo trì trước khi cài plugin.   Nếu gặp lỗi khi cài/kích hoạt plugin, không thể truy cập site   Hãy kiểm tra các mục sau.      Nếu là môi trường ec-cube.co -&gt; Liên hệ bộ phận hỗ trợ EC-CUBE   Nếu không thể thao tác trên server (ssh, v.v.) -&gt; Xem FAQ - Lỗi sau khi cài module/plugin   Nếu không thuộc các trường hợp trên, hãy đọc tiếp các hướng dẫn bên dưới.   Cache bị lỗi do quá trình cài đặt bị gián đoạn   Nguyên nhân phổ biến nhất là cache bị lỗi do quá trình cài đặt bị dừng giữa chừng. Hãy xóa cache theo hướng dẫn bên dưới rồi thử cài lại.   Xóa cache bằng lệnh  Xóa cache bằng cách xóa thư mục   Khi thêm menu quản trị, chỉ file Nav được kích hoạt   Nếu plugin thêm menu quản trị, đôi khi chỉ file Nav /ec-cube/app/config/eccube/packages/eccube_nav.yaml được kích hoạt mà routing không được kích hoạt.   Hãy thử các bước sau:      Backup file Nav về local.   Xóa file Nav trên server.   Đăng nhập lại quản trị sẽ được.   Vào quản trị, tạm thời vô hiệu hóa plugin.   Đưa lại file Nav đã backup vào đúng thư mục trên server.   Nếu kích hoạt lại plugin từ quản trị có thể lại bị lỗi, nên nếu có thể hãy kích hoạt plugin bằng lệnh.   Plugin bị xung đột   Nếu cài nhiều plugin và bị xung đột, hãy liên hệ tác giả plugin. Khi liên hệ, nên chuẩn bị log lỗi, cách tái hiện để trao đổi dễ dàng hơn.   Xem FAQ - Lấy log   Nếu các cách trên không giải quyết được   Tham khảo thêm các bài viết chi tiết của evangelist EC-CUBE ông Okouchi:      Cách xử lý lỗi khi cài plugin trên EC-CUBE4   Nguyên nhân và cách phòng tránh lỗi plugin trên EC-CUBE4   Kích hoạt nhưng hiển thị bị lỗi   Có thể gặp các trường hợp sau.  Ngoài ra, lỗi hiển thị có thể xảy ra cả khi cập nhật plugin.      Kích hoạt thành công nhưng menu hoặc icon plugin không hiển thị ở quản trị   Kích hoạt thành công nhưng hiển thị bị lỗi, tiếng Anh hoặc lỗi font   Kích hoạt nhưng menu hoặc icon plugin không hiển thị   Hãy thử vô hiệu hóa rồi kích hoạt lại plugin.   Kích hoạt nhưng hiển thị bị lỗi, tiếng Anh hoặc lỗi font   Hãy thử xóa cache từ quản trị.   Xóa cache từ quản trị   Nếu vẫn không giải quyết được   Hãy liên hệ tác giả plugin.      Phụ lục: Cách xóa cache   Xóa cache từ quản trị   Nếu đăng nhập được quản trị, vào [Quản lý nội dung] &gt; [Quản lý cache] để xóa cache.   Xóa cache bằng lệnh   Nếu không vào được quản trị, hãy xóa cache bằng lệnh qua SSH.  Cần SSH vào server EC-CUBE.   Sau khi SSH, chuyển vào thư mục EC-CUBE.  ## Ghi đúng đường dẫn EC-CUBE vào path/to/eccube_root cd path/to/eccube_root/   Chạy lệnh xóa và tạo lại cache  ## Xóa và tạo lại cache bằng lệnh Symfony bin/console cache:clear --no-warmup bin/console cache:warmup   Nếu lệnh xóa cache không thành công, hãy xóa mạnh tay:  ## Ghi đúng đường dẫn EC-CUBE vào path/to/eccube_root rm -rf path/to/eccube_root/var/cache/*   Xóa cache bằng cách xóa thư mục   Nếu xóa cache bằng lệnh không được, hãy xóa trực tiếp thư mục cache qua FTP.      Kết nối FTP   Xóa thư mục dưới var/cache/ trong thư mục EC-CUBE  ","categories": [],
        "tags": ["quickstart","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/plugin_error",
        "teaser":null},{
        "title": "Cài đặt Plugin",
        "excerpt":"Tổng quan về thao tác plugin      Sau khi cài đặt plugin, cần kích hoạt để sử dụng chức năng.   Nếu muốn tạm thời không sử dụng, có thể chuyển đổi giữa bật/tắt plugin.   Nếu không cần nữa, có thể xóa plugin.   Cài đặt từ màn hình quản trị   Có thể cài plugin từ quản trị bằng các cách sau:      Cài plugin đã mua từ Owners Store   Cài plugin tự phát triển (tar.gz/zip) bằng cách upload   Cài đặt bằng dòng lệnh   Sau khi giải nén plugin mẫu (ProductReview) vào ./app/Plugin/ProductReview, hãy chạy lệnh sau.      Cài đặt  bin/console eccube:plugin:install --code=ProductReview   Kích hoạt  bin/console eccube:plugin:enable --code=ProductReview   Các thao tác khác   Có thể thao tác plugin bằng các lệnh sau trên dòng lệnh.  Nhờ đó có thể quản lý plugin bằng command.   bin/console eccube:plugin:install            // Cài đặt bin/console eccube:plugin:uninstall          // Xóa bin/console eccube:plugin:enable             // Kích hoạt bin/console eccube:plugin:disable            // Vô hiệu hóa   Ví dụ sử dụng      Cài đặt  bin/console eccube:plugin:install --code=&lt;mã plugin&gt;   Kích hoạt  bin/console eccube:plugin:enable --code=&lt;mã plugin&gt;   Vô hiệu hóa  bin/console eccube:plugin:disable --code=&lt;mã plugin&gt;   Xóa  bin/console eccube:plugin:uninstall --code=&lt;mã plugin&gt;   Xóa cả file plugin  bin/console eccube:plugin:uninstall --code=&lt;mã plugin&gt; --uninstall-force=true  ","categories": [],
        "tags": ["quickstart","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/plugin_install",
        "teaser":null},{
        "title": "Kiểm thử cài đặt qua Owners Store",
        "excerpt":"Hướng dẫn cách dựng mock server Owners Store để kiểm thử tải plugin như khi tải qua Owners Store thật. Có thể dùng để kiểm thử plugin trước khi đăng ký lên Owners Store.   Yêu cầu   Cần cài đặt docker để sử dụng mock server.   Hãy cài đặt docker nếu chưa có.   Các bước chạy mock server   Các bước chạy mock server như sau:   // Di chuyển vào thư mục gốc ec-cube $ cd /path/to/ec-cube  // Tạo thư mục lưu plugin $ mkdir ${PWD}/repos  // Khởi động mock server. Ở đây dùng port 9999, có thể đổi nếu cần $ docker run -d --rm -v ${PWD}/repos:/repos -e MOCK_REPO_DIR=/repos -p 9999:8080 eccube/mock-package-api  // Đặt biến môi trường để tham chiếu mock server $ echo ECCUBE_PACKAGE_API_URL=http://127.0.0.1:9999 &gt;&gt; .env  // Thiết lập key xác thực $ psql eccube_db -h 127.0.0.1 -U postgres -c \"update dtb_base_info set authentication_key='test';\"  // Đặt plugin vào thư mục repos. Đổi đuôi thành tgz $ cp /path/to/SamplePlugin.tar.gz repos/SamplePlugin.tgz   Sau khi thực hiện các bước trên, plugin đặt trong thư mục repos sẽ hiển thị khi tìm kiếm plugin.      ","categories": [],
        "tags": ["plugin","mock","package-api"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/plugin_mock_package_api",
        "teaser":null},{
        "title": "Quy tắc đặt tên khuyến nghị cho plugin",
        "excerpt":"Mã plugin   Để tránh trùng lặp, khuyến nghị đặt theo dạng [TênVendor][TênPlugin] Viết theo camelCase   AcmeCategoryContent   Tên bảng   ※ Nếu tạo bảng riêng cho plugin   plg_[mã plugin dạng snake_case]_xxx   use Doctrine\\ORM\\Mapping as ORM;  /**  * Config  *  * @ORM\\Table(name=\"plg_acme_category_content_config\")  * @ORM\\Entity(repositoryClass=\"Plugin\\AcmeCategoryContent\\Repository\\ConfigRepository\")  */ class Config   Tên cột bảng và getter/setter   ※ Nếu dùng trait để thêm cột   [mã plugin dạng snake_case]_xxx getter/setter viết theo camelCase   use Eccube\\Annotation\\EntityExtension; use Doctrine\\ORM\\Mapping as ORM;  /**  * @EntityExtension(\"Eccube\\Entity\\Customer\")  */ trait CustomerTrait {     /**      * @ORM\\Column(name=\"acme_category_content_xxx\" type=\"integer\", nullable=true)      */     private $acme_category_content_xxx;      public function getAcmeCategoryContentXxx()     {     }      public function setAcmeCategoryContentXxx($xxx)     {     } }   Routing   Màn hình front   [mã plugin dạng snake_case]_xxx   class PageController extends AbstractController {     /**      * @Route(\"/acme_category_content/page\", name=\"acme_category_content_page\")      * @Template(\"@AcmeCategoryContent/page.twig\")      */     public function index(Request $request)   Màn hình quản trị   Thêm admin_ ở đầu   admin_[mã plugin dạng snake_case]_xxx   class ConfigController extends AbstractController {     /**      * @Route(\"/%eccube_admin_route%/acme_category_content/config\", name=\"admin_acme_category_content_config\")      * @Template(\"@AcmeCategoryContent/admin/config.twig\")      */     public function index(Request $request)   URL   /[mã plugin dạng snake_case]/xxx/xxx   class ConfigController extends AbstractController {     /**      * @Route(\"/%eccube_admin_route%/acme_category_content/config\", name=\"acme_category_content_admin_config\")      * @Template(\"@AcmeCategoryContent/admin/config.twig\")      */     public function index(Request $request)   Field thêm bằng FormExtension   [mã plugin dạng snake_case]_xxx   class XxxExtention extends AbstractTypeExtension {     public function buildForm(FormBuilderInterface $builder, array $options)     {         $builder-&gt;add('acme_category_content_name', TextType::class);    ID, class dùng trong html   [mã plugin dạng snake_case]_xxx   &lt;div id=\"acme_category_content_info\" class=\"card rounded border-0 mb-4\"&gt;   Tên command   [mã plugin dạng snake_case]:xxx:xxx   class XxxCommand extends Command {     protected static $defaultName = 'acme_category_content:xxx:yyy';   File ngôn ngữ   [mã plugin dạng snake_case].xxx.xxx   # nav acme_category_content.admin.nav.category: Danh sách nội dung danh mục  # flash messages acme_category_content.admin.save.success: Đã đăng ký. acme_category_content.admin.save.failed: Đăng ký thất bại.   Sau phần mã plugin, các quy tắc đặt tên khác tuân theo quy tắc đặt tên của EC-CUBE   Tham số   [mã plugin dạng snake_case].xxx.xxx   parameters:   acme_category_content.xxx: 1  services:   acme_category_content.log.formatter.line:       class: Monolog\\Formatter\\LineFormatter       arguments: ...  ","categories": [],
        "tags": ["plugin","naming","conventions"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/plugin_naming_conventions",
        "teaser":null},{
        "title": "Plugin mẫu",
        "excerpt":"Plugin đánh giá sản phẩm (ProductReview)   Đây là plugin cho phép đăng và hiển thị đánh giá sản phẩm.   Tổng quan tuỳ biến      Thêm hiển thị vào trang front   Thêm trang có form nhập liệu   Thêm bảng vào database và lưu dữ liệu   Tải về &amp; chi tiết      Plugin đánh giá sản phẩm   Plugin mẫu thanh toán   Đây là plugin mẫu cho thanh toán.  Có thể thêm 3 loại thanh toán: thanh toán thẻ tín dụng dạng link, thanh toán thẻ tín dụng dạng token và thanh toán cửa hàng tiện lợi.   Tải về &amp; chi tiết      Plugin mẫu thanh toán  ","categories": [],
        "tags": ["quickstart","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/plugin_sample",
        "teaser":null},{
        "title": "Đặc tả plugin",
        "excerpt":"Tổng quan   Mô tả tổng quan về đặc tả plugin.   Cấu trúc thư mục   Cấu trúc thư mục phổ biến của plugin như sau:   app/Plugin/SamplePlugin/ ├── Command ├── Common │   └── Nav.php ├── Controller ├── Doctrine │   └── Query ├── Entity ├── EventListener │   └── EventListener.php ├── Form │   ├── Extension │   └── Type ├── PluginManager.php ├── Repository ├── Resource │   ├── assets │   ├── config │   │   └── services.yaml │   ├── locale │   └── template └── composer.json   Không bắt buộc phải có tất cả các thư mục/file trên. Chỉ bắt buộc phải có composer.json.   File cấu hình   Có 2 file cấu hình chính: composer.json (mô tả thông tin plugin) và services.yaml (định nghĩa container).   composer.json   Mô tả thông tin plugin. Đặt tại [thư mục plugin]/composer.json.   Các mục cấu hình:      name: Tên package            Ghi dạng “ec-cube/[mã plugin]”           version: Phiên bản            Số version của plugin, theo format version của PHP.           description: Tên plugin   type: Loại package            Ghi là “eccube-plugin”           require: Package phụ thuộc            Nếu plugin dùng package ngoài, thêm vào đây.       Luôn ghi “ec-cube/plugin-installer”: “~0.0.6”           extra: Thông tin bổ sung            Ghi “code”: “[mã plugin]”           Ví dụ:   {     \"name\": \"ec-cube/ProductReview\",     \"version\": \"1.0.0\",     \"description\": \"Plugin đánh giá sản phẩm\",     \"type\": \"eccube-plugin\",     \"require\": {         \"ec-cube/plugin-installer\": \"~0.0.6\"     },     \"extra\": {         \"code\": \"ProductReview\"     } }   services.yaml   Định nghĩa container. Đặt tại [thư mục plugin]/Resouce/config/services.yaml. Có thể viết bằng yaml, php hoặc xml.   Tham khảo thêm về định nghĩa container tại tài liệu chính thức của Symfony: https://symfony.com/doc/current/service_container.html   Các file cấu hình khác  Có thể thêm file cấu hình riêng cho plugin, nhưng các file sinh ra hoặc thay đổi sau khi cài đặt plugin nên đặt dưới app/PluginData. Nếu đặt trong thư mục plugin, các file này sẽ bị mất khi update hoặc cài lại plugin. Khi dùng app/PluginData, nên tạo thư mục app/PluginData/[mã plugin] để tránh xung đột với plugin khác.   Nội dung tĩnh   Các file tĩnh (html, css, js, ảnh, …) dùng trong plugin nên đặt dưới Resource/assets. Khi cài/upgrade plugin, thư mục này sẽ được copy sang [EC-CUBE_HOME]/html/plugin/[mã plugin]/assets. #3821   Ví dụ, nếu đặt file sample.jpg như sau, sẽ được copy sang [EC-CUBE_HOME]/html/plugin/SamplePlugin/assets/sample.jpg:   SamplePlugin  └── Resource       └── assets          └── sample.jpg   Từ file twig, có thể lấy đường dẫn như sau:   {{ asset('SamplePlugin/assets/sample.jpg', 'plugin') }}   Đường dẫn thực tế sẽ là:   /html/plugin/SamplePlugin/assets/sample.jpg   Đóng gói plugin   Khi muốn phân phối hoặc đăng ký plugin lên Owners Store, cần đóng gói plugin thành file tar.gz. Lưu ý:     Không nén cả thư mục cha   Không đưa các file .git, .DS_Store vào gói   $ cd app/Plugin/[PluginDir] $ COPYFILE_DISABLE=1 tar --exclude  \".git\" --exclude \".DS_Store\" -cvzf ../[PluginDir].tar.gz *   Thay đổi so với 3.0.x   Các thay đổi chính so với 3.0.x:      Bỏ ServiceProvider            Định nghĩa container chuyển sang dùng cơ chế của Symfony.           Thay đổi cơ chế migration            Migration dùng doctrine:schema:update.       PluginManager không thực hiện migration, chỉ thêm/sửa/xóa dữ liệu khởi tạo.           Không khuyến khích dùng hook point            Các hook như eccube.event.admin.request không khuyến khích dùng nữa.       Nếu muốn chèn phần vào twig, hãy chuẩn bị snippet để người dùng tự dán vào.       https://github.com/EC-CUBE/ec-cube/issues/2440           Plugin chỉ copy file sẽ không được load            Cần có record trong dtb_plugin.           Plugin mẫu      Plugin mẫu thanh toán  ","categories": [],
        "tags": ["quickstart","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/plugin_spec",
        "teaser":null},{
        "title": "Lưu ý khi triển khai môi trường sản xuất",
        "excerpt":"  Tổng hợp các nội dung cần lưu ý và xác nhận khi xây dựng môi trường sản xuất.      Cài đặt quyền (Permission)   Sử dụng file .env trong môi trường sản xuất   ","categories": [],
        "tags": ["quickstart","install","prod"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/quickstart/cautions_of_prod",
        "teaser":null},{
        "title": "Giao diện dòng lệnh (CLI)",
        "excerpt":"EC-CUBE cung cấp nhiều lệnh tiện ích có thể thực thi qua dòng lệnh. Bạn có thể thực hiện như sau:   $ cd [thư mục gốc ec-cube] $ php bin/console eccube:install   Tên lệnh có thể được rút gọn. Ví dụ, với lệnh eccube:install, bạn có thể dùng e:i.   $ php bin/console e:i   Danh sách lệnh do EC-CUBE cung cấp   Bảng dưới đây liệt kê các lệnh và mô tả ngắn gọn:                  Tên lệnh       Mô tả                       eccube:install       Cài đặt EC-CUBE.                 eccube:plugin:install       Cài đặt plugin EC-CUBE.                 eccube:plugin:enable       Kích hoạt plugin EC-CUBE.                 eccube:plugin:disable       Vô hiệu hóa plugin EC-CUBE.                 eccube:plugin:uninstall       Gỡ plugin EC-CUBE.                 eccube:composer:install       Cài plugin EC-CUBE qua Owners Store dựa trên composer.lock.                 eccube:composer:require       Cài plugin EC-CUBE qua Owners Store.                 eccube:composer:update       Cập nhật plugin EC-CUBE qua Owners Store.                 eccube:composer:remove       Gỡ plugin EC-CUBE qua Owners Store.                 eccube:composer:require-already-installed       Cập nhật composer.json và composer.lock theo trạng thái cài đặt plugin.                 eccube:plugin:generate       Tạo khung plugin EC-CUBE.                 eccube:generate:proxies       Tạo file proxy khi sử dụng mở rộng Entity.                 eccube:fixtures:load       Nạp dữ liệu khởi tạo.                 eccube:fixtures:generate       Nạp dữ liệu mẫu cho sản phẩm, hội viên.                 eccube:delete-carts       Xóa các bản ghi dtb_cart trước ngày chỉ định.           Các lệnh do Symfony và Doctrine cung cấp   Bảng dưới đây liệt kê các lệnh chính:                  Tên lệnh       Mô tả                       cache:clear       Xóa cache. Nên dùng thêm --no-warmup.                 cache:warmup       Sinh cache.                 server:run       Khởi động web server cho phát triển.                 debug:router       Xem danh sách routing.                 doctrine:database:create       Tạo database.                 doctrine:database:drop       Xóa database.                 doctrine:schema:create       Tạo bảng dựa trên mapping Entity.                 doctrine:schema:drop       Xóa bảng dựa trên mapping Entity.                 doctrine:schema:update       Cập nhật bảng dựa trên mapping Entity.           Tham khảo   Ngoài các lệnh trên, còn rất nhiều lệnh khác.   Bạn có thể xem danh sách lệnh bằng:   $ php bin/console list   Hoặc xem hướng dẫn sử dụng từng lệnh:   $ php bin/console [tên lệnh] --help  ","categories": [],
        "tags": ["quickstart","cli"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/quickstart/cli",
        "teaser":null},{
        "title": "Cài đặt từ dòng lệnh",
        "excerpt":"  Đây là phương pháp khuyến nghị cho môi trường phát triển.  Phương pháp này sẽ cài đặt EC-CUBE4 mới nhất từ GitHub.  ※ Khác với bản đóng gói trên trang chủ chính thức, vui lòng lưu ý.      Di chuyển đến thư mục bạn muốn cài đặt EC-CUBE   cd Địa chỉ thư mục (hoặc kéo &amp; thả thư mục)   ※ Thư mục ec-cube sẽ được tạo trong thư mục trên.      Sau khi di chuyển, tạo file composer.phar  Thực hiện lệnh trong phần Cài đặt Composer để tạo file composer.phar.   Cập nhật composer.phar về phiên bản 1.x tương thích với EC-CUBE 4.0.   php composer.phar selfupdate --1      Đảm bảo bạn đang ở đúng thư mục chứa composer.phar, sau đó chạy lệnh sau:   php composer.phar create-project ec-cube/ec-cube ec-cube \"4.1.x-dev\" --keep-vcs   ※ Mặc định sử dụng SQLite3.   ※ Một số phiên bản MacOS có thể thiếu php-intl, hãy cài đặt PHP mới qua homebrew nếu gặp lỗi.      Thư mục ec-cube sẽ được tạo, di chuyển vào đó và chạy web server tích hợp:   cd ec-cube php bin/console server:run --env=dev      Truy cập http://127.0.0.1:8000/admin để kiểm tra màn hình đăng nhập quản trị EC-CUBE.  Đăng nhập với:   ID: admin PW: password   Để dừng web server, nhấn Ctrl+C   Nếu muốn thay đổi loại database   Sau khi cài đặt, chạy lệnh sau và thiết lập Database Url:   ## for MySQL mysql://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;/&lt;database name&gt;  ## for PostgreSQl postgres://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;/&lt;database name&gt;   Nếu sử dụng môi trường Windows   Không thể sử dụng lệnh php bin/console eccube:install. Thay vào đó, sử dụng các lệnh sau:   # (tùy chọn) Xóa database php bin/console doctrine:database:drop --force # Tạo database php bin/console doctrine:database:create # (tùy chọn) Xóa schema php bin/console doctrine:schema:drop --force # Tạo schema php bin/console doctrine:schema:create # Nạp dữ liệu khởi tạo php bin/console eccube:fixtures:load      Lệnh php bin/console eccube:install thực hiện các lệnh trên bên trong.   Do Symfony không tương thích tốt với Windows, tốc độ có thể rất chậm. Khuyến nghị Cài đặt bằng Docker Compose.  ","categories": [],
        "tags": ["quickstart","install","command"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/quickstart/command_install",
        "teaser":null},{
        "title": "Cài đặt bằng Web Installer từ Composer",
        "excerpt":"  Phương pháp này gần giống với Cài đặt từ dòng lệnh.   Khác biệt là sau khi thực hiện, màn hình cài đặt EC-CUBE sẽ xuất hiện. Phù hợp cho ai muốn cài đặt qua giao diện web.   Ở bước 3 trong Cài đặt từ dòng lệnh, thay bằng lệnh sau:   php composer.phar create-project --no-scripts ec-cube/ec-cube ec-cube \"4.1.x-dev\" --keep-vcs   Thư mục ec-cube sẽ được tạo, di chuyển vào đó và chạy web server tích hợp:   cd ec-cube php bin/console server:run   Truy cập http://127.0.0.1:8000/ để bắt đầu cài đặt EC-CUBE qua giao diện web.   Để dừng web server, nhấn Ctrl+C  ","categories": [],
        "tags": ["quickstart","install","composer"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/quickstart/composer_web_installer",
        "teaser":null},{
        "title": "Cài đặt bằng Docker Compose",
        "excerpt":"  Nếu bạn sử dụng EC-CUBE4.0.5 trở xuống, hãy xem tại đây.   Khuyến nghị cho môi trường phát triển khi muốn xây dựng nhanh chóng kèm các dịch vụ liên quan (DB, môi trường debug mail, …)      Yêu cầu cài đặt trước Docker Desktop.            Với Windows, nên sử dụng Docker Desktop WSL 2 Backend và tạo workspace trên hệ thống file Linux để đạt hiệu năng tốt.           Mặc định sử dụng SQLite3.   cd path/to/ec-cube  # Khởi động container (lần đầu sẽ build) docker-compose up -d  # Lần đầu cần chạy script cài đặt (LƯU Ý: chạy bằng user `www-data` và chế độ không tương tác!) docker-compose exec -u www-data ec-cube bin/console eccube:install -n   Các lần khởi động sau cũng dùng lệnh tương tự.   # Khởi động container docker-compose up -d  # Dừng container docker-compose down   Khi cài đặt bằng docker-compose, các thiết lập cơ bản sẽ nằm trong mục environment của file docker-compose.yml (xem thêm ở phần Sử dụng .env). Lưu ý: phải dùng chế độ không tương tác (-n) khi chạy lệnh eccube:install.   Có thể chỉ định các file docker-compose.*.yml để mount thư mục local hoặc thay đổi database.   Sử dụng PostgreSQL   Chỉ định file docker-compose.pgsql.yml.   docker-compose -f docker-compose.yml -f docker-compose.pgsql.yml up -d   Nếu chưa khởi tạo schema database, chạy thêm:   # Tạo schema + nạp dữ liệu mẫu docker-compose -f docker-compose.yml -f docker-compose.pgsql.yml exec ec-cube composer run-script compile   Sử dụng MySQL   Chỉ định file docker-compose.mysql.yml.   docker-compose -f docker-compose.yml -f docker-compose.mysql.yml up -d   Nếu chưa khởi tạo schema database, chạy thêm:   # Tạo schema + nạp dữ liệu mẫu docker-compose -f docker-compose.yml -f docker-compose.mysql.yml exec ec-cube composer run-script compile   Mount thư mục local   Chỉ định file docker-compose.dev.yml.   ## Ví dụ dùng MySQL docker-compose -f docker-compose.yml -f docker-compose.mysql.yml -f docker-compose.dev.yml up -d   Sử dụng .env   Khi cài đặt bằng docker-compose, các biến môi trường như DATABASE_URL nên được thiết lập trong mục environment của file docker-compose.*.yml.   Nếu muốn sử dụng .env, hãy làm như sau:      Trong docker-compose*.yml, đặt APP_ENV: ~   Trong file .env local, comment dòng APP_ENV   Thứ tự ưu tiên của các biến môi trường:      environment trong docker-compose*.yml   .env local (thiết lập qua docker-compose, không phải php dotenv)   .env trong container ec-cube (thiết lập qua php dotenv)   Đồng bộ file   Khi cài đặt bằng docker-compose, thư mục local và file trong container sẽ được đồng bộ. Các file cấu hình như .env cũng chỉnh sửa trực tiếp trên host.   Lưu ý: một số thư mục sẽ bị loại khỏi đồng bộ để tránh giảm hiệu năng nghiêm trọng:     /var   /vendor   /node_modules   Các thư mục này sẽ được lưu trữ riêng bằng Docker Volume.  ","categories": [],
        "tags": ["quickstart","install","docker","docker-compose"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/quickstart/docker_compose_install",
        "teaser":null},{
        "title": "Cài đặt bằng Docker",
        "excerpt":"     Trước tiên, bạn cần cài đặt Docker Desktop.            Đối với Windows, nên sử dụng Docker Desktop WSL 2 Backend và tạo workspace trên hệ thống file Linux để đạt hiệu năng tốt.           Mặc định sử dụng SQLite3.   Có thể sử dụng file trên container hoặc mount VOLUME để sử dụng file local.   cd path/to/ec-cube docker build -t eccube4-php-apache .  ## Sử dụng file trên container Docker run --name ec-cube -p \"8080:80\" -p \"4430:443\" eccube4-php-apache  ## Mount thư mục local # Nếu mount thư mục var sẽ rất chậm, chỉ nên mount src, html, app Docker run --name ec-cube -p \"8080:80\" -p \"4430:443\"  -v \"$PWD/html:/var/www/html/html:cached\" -v \"$PWD/src:/var/www/html/src:cached\" -v \"$PWD/app:/var/www/html/app:cached\" eccube4-php-apache   Từ lần khởi động thứ 2 trở đi, sử dụng lệnh sau:   docker start --attach ec-cube   Chỉnh sửa file cấu hình   Nếu muốn chỉnh sửa file như .env trong thư mục cài đặt, hãy chỉnh sửa trực tiếp trên container hoặc mount riêng file đó.   docker exec -it ec-cube /bin/bash root@de5372ce7139:/var/www/html# vi .env   Sử dụng gửi mail   Sử dụng mailcatcher   ## Trong file .env, đặt MAILER_URL=smtp://mailcatcher:1025 docker run -d -p 1080:1080 -p 1025:1025 --name mailcatcher schickling/mailcatcher docker run --name ec-cube -p \"8080:80\" -p \"4430:443\"  --link mailcatcher:mailcatcher eccube4-php-apache   Xem chi tiết về mailcatcher   Sử dụng PostgreSQL   ## Trong file .env, đặt DATABASE_URL=pgsql://postgres:password@db/cube4_dev docker run --name container_postgres -e POSTGRES_PASSWORD=password  -p 5432:5432 -d postgres docker run --name ec-cube -p \"8080:80\" -p \"4430:443\" --link container_postgres:db eccube4-php-apache   Sử dụng MySQL   ## Trong file .env, đặt DATABASE_URL=mysql://root:password@db/cube4_dev docker run --name container_mysql -e MYSQL_ROOT_PASSWORD=password  -d -p 3306:3306 mysql:5.7 docker run --name ec-cube -p \"8080:80\" -p \"4430:443\" --link container_mysql:db eccube4-php-apache  ","categories": [],
        "tags": ["quickstart","install","docker"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/quickstart/docker_install",
        "teaser":null},{
        "title": "Sử dụng file .env trong môi trường production",
        "excerpt":"Về việc sử dụng file .env trong môi trường production   Sau khi cài đặt xong, một file .env sẽ được tạo ra trong thư mục cài đặt, chứa thông tin kết nối database và các biến môi trường khác. File .env chủ yếu dùng cho mục đích phát triển, không khuyến khích sử dụng trong môi trường production. Trong môi trường production, nên thiết lập biến môi trường trong file cấu hình của server để đảm bảo an toàn, tránh lộ thông tin ra ngoài.   Ví dụ thiết lập với Apache   Thiết lập trong httpd.conf hoặc file .htaccess:   SetEnv APP_ENV prod SetEnv APP_DEBUG 0 SetEnv DATABASE_URL pgsql://dbuser:password@127.0.0.1/cube4_dev SetEnv DATABASE_SERVER_VERSION 10.5 SetEnv ECCUBE_AUTH_MAGIC 8PPlCHZVdH5vbMkIUKeuTeDHycQQMuaB SetEnv ECCUBE_ADMIN_ALLOW_HOSTS [] SetEnv ECCUBE_FORCE_SSL false SetEnv ECCUBE_ADMIN_ROUTE admin SetEnv ECCUBE_COOKIE_PATH /   Tham khảo: Apache HTTP Server 2.4 - SetEnv directive   Lưu ý khi thiết lập biến môi trường trong file cấu hình server   Khi thiết lập biến môi trường trong file cấu hình server, bạn sẽ không thể thay đổi các chức năng sau từ trang quản trị:   Cần thay đổi biến môi trường trong file cấu hình server và xóa cache sau khi thay đổi.      Quản lý template tại: Quản trị → Owners Store → Template   Quản lý bảo mật tại: Quản trị → Cài đặt → Cài đặt hệ thống → Quản lý bảo mật   Về việc sử dụng lệnh bin/console   Khi sử dụng lệnh bin/console, mặc định sẽ lấy biến môi trường từ file .env. Nếu không dùng .env, hãy thiết lập biến môi trường trong shell. Nên đặt quyền file cấu hình shell như .bashrc là 600 để đảm bảo an toàn.   ## Ví dụ thiết lập trong .bashrc export APP_ENV=\"prod\" export APP_DEBUG=\"0\" export DATABASE_URL=\"pgsql://dbuser:password@127.0.0.1/cube4_dev\" export DATABASE_SERVER_VERSION=\"10.5\" export ECCUBE_AUTH_MAGIC=\"8PPlCHZVdH5vbMkIUKeuTeDHycQQMuaB\" export ECCUBE_ADMIN_ALLOW_HOSTS=\"[]\" export ECCUBE_FORCE_SSL=\"false\" export ECCUBE_ADMIN_ROUTE=\"admin\" export ECCUBE_COOKIE_PATH=\"/\"   ","categories": [],
        "tags": ["quickstart","install","dotenv"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/quickstart/dotenv",
        "teaser":null},{
        "title": "Hướng dẫn cài đặt bằng MAMP trên Mac",
        "excerpt":"Trước khi cài đặt  Hướng dẫn cài đặt EC-CUBE trên môi trường Mac bằng MAMP.  Cấu hình môi trường được mô tả như sau.  // サンプルの構築環境 MacOS 10.15.5(Catalina) EC-CUBE 4.0.3 MAMP 5.7   MAMP được tải về và cài đặt  Đầu tiên, chuẩn bị MAMP.   Truy cập trang tải xuống của MAMP và di chuyển đến trang tải xuống. Tải xuống phiên bản mới nhất của “MAMP&amp;MAMP PRO” (trong bài này là 5.7).   Sau khi cài đặt, hai phần mềm MAMP và MAMP PRO sẽ được cài đặt trong ứng dụng.  Trong hướng dẫn này, chúng tôi sẽ sử dụng MAMP.   EC-CUBE được tải về  Tiếp theo, tải về EC-CUBE.  Từ trang tải xuống của EC-CUBE, tải xuống phiên bản mới nhất của EC-CUBE (trong bài này là 4.0.3)  ※ Để tải xuống, bạn cần phải đăng nhập.   Sau khi tải xuống, giải nén.   MAMP được cấu hình EC-CUBE  Giải nén EC-CUBE và đặt vào thư mục htdocs (thư mục) của MAMP.   Cấu trúc thư mục để xác định URL của trang chủ cửa hàng:  http://localhost:8888/{tên thư mục trong htdocs}/   Ví dụ: nếu bạn đặt tên thư mục là eccube-4.0.3 và đặt vào thư mục htdocs của shop, thì: ■ Cấu trúc thư mục /Applications/MAMP/htdocs/shop/  ■ URL của trang chủ cửa hàng http://localhost:8888/shop/  ※ Ở thời điểm này, EC-CUBE chưa được cài đặt, vì vậy không thể truy cập trang chủ cửa hàng.   Cấu hình phiên bản php  EC-CUBE4.0.3 được kiểm tra hoạt động với php7.1 〜7.3.  Thay đổi phiên bản php trong cấu hình môi trường của MAMP.   Khởi động MAMP.   Nhấp vào “MAMP” ở góc trên bên trái của Mac và chọn “Preferences”.        Màn hình cấu hình sẽ xuất hiện. Nhấp vào “PHP” trong mục “PHP” và kiểm tra “7.3.9”, sau đó nhấp “OK”.   Tạo cơ sở dữ liệu  Khởi động máy chủ từ MAMP.      Nhấp vào “Start Server”.   Màn hình trang chủ của MAMP sẽ xuất hiện.     Nhấp vào “TOOLS” ở thanh menu và chọn “PHPMYADMIN”.   phpMyAdmin sẽ xuất hiện.      Nhấp vào “New” và nhập tên cơ sở dữ liệu, sau đó tạo cơ sở dữ liệu.  ※ Hãy đảm bảo rằng tên cơ sở dữ liệu không dễ dàng được dự đoán từ bên ngoài.  Ví dụ Tên cơ sở dữ liệu `eccube123_`  Thứ tự phục vụ là utf8mb4_general_ci, không có vấn đề gì.   MAMP có tài khoản cơ sở dữ liệu mặc định, chúng ta sẽ sử dụng tài khoản đó để cài đặt EC-CUBE.  Nếu bạn muốn tạo tài khoản, hãy làm theo mục “User accounts” ở thanh menu.   ※ Đối với môi trường sản xuất, hãy tạo tài khoản người dùng. Thông tin kết nối cơ sở dữ liệu (tên cơ sở dữ liệu, thông tin tài khoản, v.v.) có thể bị rò rỉ ngoài ý muốn, gây ra hậu quả nghiêm trọng như lộ thông tin cá nhân, v.v. Hãy chú ý khi quản lý.   Cài đặt EC-CUBE   Nhấp vào URL sau từ trình duyệt:  http://localhost:8888/{tên thư mục EC-CUBE được tải lên}/  Ví dụ http://localhost:8888/shop/    Màn hình cài đặt sẽ xuất hiện. Nhấp vào “Tiếp theo” để tiếp tục.    Nhấp vào “Tiếp theo” để tiếp tục.   Cấu hình trang web      Thông tin cơ bản cửa hàng      Tên cửa hàng            Nhập tên cửa hàng của bạn. Bạn có thể nhập tiếng Nhật.           Email            Email này sẽ được sử dụng để gửi thông báo đặt hàng, v.v.           ID đăng nhập trang quản lý            ID đăng nhập để đăng nhập trang quản lý. Đây là người quản lý có quyền lớn nhất, vì vậy hãy tránh sử dụng ID dễ dự đoán như “admin” v.v. Để tránh tối đa rủi ro bất hợp pháp truy cập và lộ thông tin, hãy sử dụng chuỗi ký tự không có ý nghĩa.           Mật khẩu đăng nhập trang quản lý            Nhập mật khẩu để người quản lý đăng nhập. Nếu bạn quên mật khẩu đăng nhập trang quản lý, bạn sẽ không thể đăng nhập trang quản lý vì vậy hãy ghi chú để sử dụng.  EC-CUBE không có chức năng phục hồi lại mật khẩu quản lý.  Hãy tạo mật khẩu phức tạp và không có ý nghĩa để người quản lý đăng nhập.  Không sử dụng “test1234” hoặc “password” v.v. ĐỘC LẬP           Tên thư mục trang quản lý            Đây là URL để truy cập trang quản lý.  http://localhost:8888/{tên thư mục EC-CUBE được cài đặt}/{tên thư mục trang quản lý}/  để truy cập.  Hãy không chỉ định tên thư mục này là “admin” hoặc “dashboard” v.v. Để tránh rủi ro, hãy chỉ định tên thư mục không có ý nghĩa.           Buộc trang web truy cập qua SSL            Không cần nhập trong môi trường cục bộ.           Giới hạn truy cập trang quản lý đến IP sau            Giới hạn truy cập trang quản lý đến IP cố định.  Trong môi trường cục bộ, không cần chỉ định.  Nếu bạn chỉ định IP này, chỉ có IP được chỉ định mới có thể truy cập trang quản lý.  Nếu bạn không có IP cố định, hãy không chỉ định.           ※ Thông tin đăng nhập trang quản lý bị rò rỉ có thể dẫn đến rủi ro lộ thông tin cá nhân và các hậu quả nghiêm trọng khác. Hãy chú ý khi quản lý.   Cấu hình email  Trong môi trường cục bộ, không cần chỉ định.   Nhập thông tin cơ sở dữ liệu     Nhập thông tin cơ sở dữ liệu.  Trong bài này, chúng ta sẽ sử dụng tài khoản cơ sở dữ liệu mặc định của MAMP.   Cách xác định thông tin tài khoản cơ sở dữ liệu của MAMP   Mở MAMP và nhấp vào “Open WebStart page” để khởi động trang chủ của MAMP.    Cuộn xuống, bạn sẽ thấy mục thông tin tài khoản cơ sở dữ liệu được ghi chú.     Hãy nhập thông tin này theo hướng dẫn.      Loại cơ sở dữ liệu            Trong bài này, chúng ta sẽ sử dụng MySQL.           Tên máy chủ cơ sở dữ liệu            localhost.           Cổng cơ sở dữ liệu            8889           Tên cơ sở dữ liệu            Hãy chỉ định tên cơ sở dữ liệu đã chuẩn bị. Trong ví dụ, đó là “eccube123_”.           Tên người dùng            root.           Mật khẩu            root.           ※ Tên người dùng và mật khẩu phải được tạo riêng cho môi trường sản xuất.   Sau khi nhập hết, nhấp vào “Tiếp theo” để tiếp tục.   Khởi tạo cơ sở dữ liệu     Đăng ký dữ liệu khởi tạo cơ sở dữ liệu.   Nhấp vào “Tiếp theo” để tiếp tục.   Hoàn thành cài đặt     Chúc mừng bạn!  Nếu bạn thấy màn hình này, cài đặt đã hoàn thành.   Hướng dẫn sử dụng trang quản lý tại đây。   Nhấp vào “Hiển thị trang quản lý” để chuyển hướng đến trang đăng nhập trang quản lý.  Thông tin cơ bản cửa hàng để đăng nhập trang quản lý.   Nếu bạn không thể đăng nhập, có khả năng bạn đã nhập sai ID đăng nhập hoặc mật khẩu, vì vậy hãy xóa .env của thư mục cài đặt và xóa cơ sở dữ liệu để thực hiện lại quy trình cài đặt.  ","categories": [],
        "tags": ["quickstart","install","gui"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/quickstart/gui_mac_install",
        "teaser":null},{
        "title": "Hướng dẫn cài đặt bằng XAMPP trên Windows",
        "excerpt":"Trước khi cài đặt  Bài viết này hướng dẫn cài đặt EC-CUBE4 trên môi trường Windows sử dụng XAMPP.  Hãy kiểm tra phiên bản PHP phù hợp với EC-CUBE bạn sử dụng tại Yêu cầu hệ thống.  Môi trường mẫu trong bài viết này như sau:  // Môi trường mẫu Windows 10 EC-CUBE 4.0.4 XAMPP 7.4.7   Tải và cài đặt XAMPP  Đầu tiên, hãy chuẩn bị XAMPP.  EC-CUBE4.0.4 hỗ trợ PHP 7.4.  Bạn cần tải đúng phiên bản XAMPP phù hợp với phiên bản PHP của EC-CUBE bạn sử dụng.   Truy cập Trang chủ XAMPP, chọn menu để vào trang tải về.  Tải về phiên bản XAMPP phù hợp.  Bạn cũng có thể tải các phiên bản cũ hơn tại mục “Other downloads”.   Sau khi tải về, hãy cài đặt XAMPP.   Tải EC-CUBE  Tiếp theo, hãy tải EC-CUBE.  Tải phiên bản mới nhất từ Trang tải về EC-CUBE.  ※ Cần đăng ký thành viên để tải về.   Sau khi tải về, hãy giải nén file.   Đặt EC-CUBE vào XAMPP  Giải nén EC-CUBE và đặt vào thư mục htdocs của XAMPP.   URL trang chủ shop sẽ phụ thuộc vào cấu trúc thư mục bạn đặt.  http://127.0.0.1/{tên thư mục bạn tạo trong htdocs}/   Ví dụ: Tạo thư mục test-shop trong htdocs và đặt eccube-4.0.4 vào đó ■ Cấu trúc thư mục Windows(C:)\\xampp\\htdocs\\test-shop\\eccube-4.0.4\\  ■ URL trang chủ shop http://127.0.0.1/test-shop/eccube-4.0.4/  ※ Chưa cài đặt EC-CUBE nên truy cập URL shop sẽ chưa hiển thị trang web.  ※ Tên thư mục eccube-4.0.4 có thể đổi tùy ý.   Nếu chỉ đặt eccube-4.0.4 vào htdocs mà không tạo test-shop, URL shop sẽ là:  http://127.0.0.1/eccube-4.0.4/   Tạo database  Khởi động XAMPP.  Nhấn “Start” cho Apache và MySQL, sau đó nhấn “Admin” để mở phpMyAdmin.     phpMyAdmin sẽ mở ra.    Nhấn “Tạo mới” và nhập tên database, sau đó tạo database.  Ví dụ Tên database `eccube123_`  Collation giữ nguyên utf8mb4_general_ci.   XAMPP có sẵn tài khoản database, bạn có thể dùng để cài EC-CUBE.  Nếu muốn tạo tài khoản mới, vào menu “Tài khoản người dùng” để tạo.   ※ Nếu dùng cho môi trường production, hãy tạo tài khoản riêng cho database.  Thông tin kết nối database (tên, tài khoản, v.v.) nếu bị lộ sẽ gây nguy hiểm.  Hãy quản lý cẩn thận.   Chỉnh sửa file ini   Khởi động XAMPP.  Nhấn “Start” cho Apache và MySQL.     Truy cập trình duyệt với URL:  http://127.0.0.1/{tên thư mục chứa EC-CUBE}/   Màn hình cài đặt sẽ xuất hiện.      Nếu xuất hiện lỗi “intl extension chưa được bật”.   Hãy mở file php.ini tại thư mục sau:  Windows(C:)\\xampp\\php\\php.ini   Tìm kiếm “intl” trong file php.ini.   ;extension=intl  Tìm dòng trên và xóa dấu ; phía trước.  Sau đó lưu lại:  extension=intl   Tiếp theo, chỉnh sửa thời gian timeout trong php.ini.  Tìm kiếm “max_execution_time” trong file:  max_execution_time=30  Sửa thành:  max_execution_time=120  ※ Nếu máy yếu, nên tăng giá trị này lên nữa.   // Ví dụ max_execution_time=300  Khởi động lại XAMPP.  Nhấn “Stop” cho Apache và MySQL, đợi 10 giây rồi nhấn “Start” lại.   Truy cập lại URL:  http://127.0.0.1/{tên thư mục chứa EC-CUBE}/      Nếu không còn lỗi “intl extension chưa được bật” thì đã chỉnh xong php.ini.   Tiếp tục cài đặt EC-CUBE.   Nhấn “Tiếp theo” trên màn hình cài đặt.   Cài đặt EC-CUBE    Nhấn “Tiếp theo”.   Thiết lập website      Thông tin cơ bản của cửa hàng      Tên cửa hàng của bạn            Nhập tên cửa hàng, có thể dùng tiếng Việt hoặc Nhật.           Địa chỉ email            Email này sẽ nhận thông báo đơn hàng.           ID đăng nhập quản trị            ID dùng để đăng nhập trang quản trị. Không nên đặt “admin” hoặc các ID dễ đoán để tránh bị tấn công. Nên đặt chuỗi ngẫu nhiên.           Mật khẩu quản trị            Mật khẩu đăng nhập quản trị. Hãy ghi nhớ, nếu quên sẽ không đăng nhập được.  EC-CUBE không có chức năng lấy lại mật khẩu quản trị.  Nên đặt mật khẩu phức tạp, không dùng “test1234” hay “password”.           Tên thư mục quản trị            URL truy cập quản trị sẽ là:  http://127.0.0.1/{thư mục EC-CUBE}/{tên thư mục quản trị}/  Không nên đặt “admin” hay “dashboard”. Nên đặt tên khó đoán.           Bắt buộc truy cập site qua SSL            Không cần nhập ở môi trường local.           Giới hạn IP truy cập quản trị            Chỉ cho phép IP nhất định truy cập quản trị. Ở local không cần thiết lập. Nếu có IP cố định thì nên thiết lập để tăng bảo mật.           Lưu ý: Nếu thông tin truy cập quản trị bị lộ sẽ rất nguy hiểm. Hãy bảo mật cẩn thận!   Thiết lập email  Ở local không cần thiết lập gì thêm.   Thiết lập database   Nhập thông tin database.  Ở đây dùng tài khoản mặc định của XAMPP.      Loại database            Ở môi trường production nên dùng MySQL hoặc PostgreSQL.           Host database            Là localhost.           Port database            Có thể để trống.           Tên database            Nhập tên database đã tạo, ví dụ “eccube123_”.           Tên người dùng            Là root.           Mật khẩu            Để trống.           ※ Ở môi trường production nên tạo tài khoản riêng.   Nhập xong nhấn “Tiếp theo”.   Khởi tạo database     Nhấn “Tiếp theo” để đăng ký dữ liệu khởi tạo vào database.   Hoàn tất cài đặt     Chúc mừng bạn!  Nếu thấy màn hình này là đã cài đặt thành công.   Hướng dẫn sử dụng trang quản trị: tại đây.   Nhấn Hiển thị trang quản trị để vào màn hình đăng nhập quản trị. Đăng nhập bằng thông tin đã nhập ở Thông tin cơ bản của cửa hàng.   Nếu không đăng nhập được, có thể bạn đã nhập sai ID hoặc mật khẩu quản trị. Hãy xóa file .env trong thư mục cài đặt và làm lại các bước cài đặt từ đầu.  ","categories": [],
        "tags": ["quickstart","install","gui"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/quickstart/gui_win_install",
        "teaser":null},{
        "title": "Hỗ trợ SameSite Cookie",
        "excerpt":"Ngày 17/06/2020, EC-CUBE 4.0.4 đã hỗ trợ tiêu chuẩn mới về SameSite Cookie, do đó trang này đã được cập nhật.   Tổng quan   Từ ngày 14/07/2020, trên Chrome 80 trở lên, khi chuyển từ website khác sang site EC-CUBE, trong một số trường hợp cookie sẽ không được gửi đi, dẫn đến lỗi không hoàn tất thanh toán, v.v. EC-CUBE 4.0.4 đã hỗ trợ tiêu chuẩn này, vì vậy nếu bạn đang sử dụng EC-CUBE 4.0.3 trở xuống, hãy cập nhật lên phiên bản mới. Nếu đã áp dụng hot-fix, bạn cũng nên cập nhật lên EC-CUBE 4.0.4 để đảm bảo an toàn, đồng thời chú ý không để lại file không cần thiết khi update.   Thông tin liên quan     Google Developers Japan: Chuẩn bị cho thiết lập Cookie mới SameSite=None; Secure   SameSite Updates - The Chromium Projects   Chrome80 ảnh hưởng SameSite gây lỗi thanh toán khi dùng 3D Secure, v.v. #4457   Cách hoàn tác hot-fix thủ công      Hoàn tác thay đổi sau trong app/config/eccube/packages/framework.yaml            Xem diff commit           Xóa 2 file sau:            src/Eccube/EventListener/SameSiteCookieHotfixListener.php       src/Eccube/Resource/template/default/error_samesite.twig           Xóa cache bằng một trong các cách sau:            Xóa cache bằng lệnh:           $ bin/console cache:clear --no-warmup                       Hoặc vào trang quản trị → Quản lý nội dung → Quản lý cache và nhấn “Xóa cache”          ","categories": [],
        "tags": ["quickstart","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/hotfix_samesite_cookie",
        "teaser":null},{
        "title": "Các phương pháp cài đặt",
        "excerpt":"  Tổng hợp các phương pháp cài đặt.   Cài đặt vào máy cục bộ   Cài đặt bằng GUI   Phương pháp cài đặt vào máy cục bộ bằng cách tải phiên bản gói và sử dụng trình cài đặt Web (GUI).      Phương pháp cài đặt sử dụng XAMPP trên môi trường Windows   Phương pháp cài đặt sử dụng MAMP trên môi trường Mac   Cài đặt bằng CUI &amp; GUI   Phương pháp cài đặt vào máy cục bộ bằng cách thực hiện lệnh để tải EC-CUBE4 mặc định từ GitHub, sau đó sử dụng trình cài đặt Web (GUI).      Cài đặt từ Composer với trình cài đặt Web   Cài đặt bằng CUI   Phương pháp cài đặt bằng cách clone EC-CUBE4 tùy ý từ GitHub và thực hiện lệnh cài đặt.      Cài đặt sử dụng symfony/cli   Cài đặt sử dụng Docker Compose   Cài đặt sử dụng Docker   Cài đặt từ dòng lệnh   Cài đặt lên máy chủ   Phương pháp cài đặt lên máy chủ bằng cách tải phiên bản gói và sử dụng trình cài đặt Web (GUI).      Cài đặt lên máy chủ   Mẹo      Giao diện dòng lệnh  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/quickstart/install",
        "teaser":null},{
        "title": "Cài đặt bằng Docker Compose (dành cho EC-CUBE4.0.5 trở xuống)",
        "excerpt":"  Đây là phương pháp khuyến nghị nếu bạn muốn xây dựng nhanh môi trường phát triển kèm các dịch vụ liên quan (DB, môi trường debug mail, v.v.)   Yêu cầu đã cài đặt Docker Desktop.      Mặc định sử dụng SQLite3   Mount thư mục local   cd path/to/ec-cube  # Khởi động container (lần đầu sẽ build) docker-compose up -d  # Lần đầu cần chạy script cài đặt (LƯU Ý: chạy bằng user `www-data`!) docker-compose exec -u www-data ec-cube bin/console eccube:install   Từ lần khởi động thứ 2 trở đi cũng dùng các lệnh sau.  # Khởi động container docker-compose up -d  # Dừng container docker-compose down   Sử dụng các container  Bao gồm web server chạy EC-CUBE 4 và các container sau có thể khởi động dễ dàng:                  Tên container       Mô tả       Truy cập trình duyệt                       ec-cube       Web server PHP cho EC-CUBE       http://localhost:8080                 postgres       PostgreSQL database server                         mysql       MySQL database server                         mailcatcher       SMTP server debug MailCatcher       http://localhost:1080           Khi khởi động, liệt kê tên container để chỉ khởi động các dịch vụ cần thiết.  # Ví dụ: Khởi động EC-CUBE, MySQL, phpMyAdmin và MailCatcher docker-compose up -d ec-cube mysql mailcatcher  # Nếu không chỉ định, tất cả dịch vụ sẽ được khởi động docker-compose up -d  Khi kết hợp với các container khác, cần thiết lập như sau.  Sử dụng gửi mail  Trong .env đặt MAILER_URL=smtp://mailcatcher:1025.   Sử dụng PostgreSQL  Trong .env đặt DATABASE_URL=postgres://dbuser:secret@postgres/eccubedb.   Nếu chưa khởi tạo schema database, cần chạy lệnh sau.  # Tạo schema + nạp dữ liệu mẫu docker-compose exec ec-cube composer run-script compile   Sử dụng MySQL  Trong .env   ","categories": [],
        "tags": ["quickstart","install","docker","docker-compose"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/quickstart/install_docker-compose_405orlower",
        "teaser":null},{
        "title": "Phiên bản mới nhất",
        "excerpt":"Thông tin về phiên bản mới nhất hiện tại như sau.      4.3   Ghi chú phát hành 4.3        Tải về 4.3            Yêu cầu hệ thống       Di chuyển từ 4.2 lên 4.3  ","categories": [],
        "tags": ["quickstart","latest_version"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/quickstart/latest_version",
        "teaser":null},{
        "title": "Cài đặt quyền",
        "excerpt":"Về cài đặt quyền (Điểm chung)   Một số tính năng tiện lợi của EC-CUBE dựa trên việc máy chủ web có thể ghi vào tệp. Tuy nhiên, việc ứng dụng có quyền ghi vào tệp là nguy hiểm. Từ góc độ bảo mật, tốt nhất là hạn chế quyền càng nhiều càng tốt và chỉ cấp quyền ghi cho các thư mục/tệp cụ thể. Các cài đặt quyền dưới đây là chung cho mọi phương pháp cài đặt.   Quyền ghi của máy chủ web   Để sử dụng tất cả các tính năng của EC-CUBE, cần có quyền ghi từ máy chủ web cho các thư mục/tệp sau.   [eccube_root/]   │   ├──[app/]   │   ├──[Plugin/]   │   ├──[PluginData/]   │   ├──[proxy/]   │   └──[template/]   ├──[html/]   ├──[var/]   ├──[vendor/]   ├──[composer.json]   └──[composer.lock]   Các thư mục/tệp khác cần có quyền đọc.   eccube_root/   Cần có quyền ghi từ máy chủ web cho thư mục gốc của EC-CUBE. Dưới thư mục gốc có các tệp như .env và .maintenance. Có các quyền khuyến nghị khác cho thư mục gốc, vì vậy hãy cẩn thận không thay đổi quyền một cách toàn diện.   app/   Cần có quyền ghi từ máy chủ web cho thư mục này. Vì cần có quyền ghi từ máy chủ web cho các thư mục con.   app/Plugin/   Cần có quyền ghi từ máy chủ web cho thư mục này. Mã nguồn của plugin được đặt ở đây.   app/PluginData/   Cần có quyền ghi từ máy chủ web cho thư mục này. Dữ liệu của plugin được đặt ở đây.   app/proxy/   Cần có quyền ghi từ máy chủ web cho thư mục này. Các tệp proxy được tạo ra khi mở rộng Entity được đặt ở đây.   app/template/   Cần có quyền ghi từ máy chủ web cho thư mục này. Các tệp mẫu được đặt ở đây.   html/   Cần có quyền ghi từ máy chủ web cho thư mục này. Các tệp css và js được đặt ở đây.   var/   Cần có quyền ghi từ máy chủ web cho thư mục này. Các tệp tạm thời như cache và log được đặt ở đây.   vendor/   Cần có quyền ghi từ máy chủ web cho thư mục này. Các thư viện được cài đặt khi cài đặt plugin và bản đồ lớp được cập nhật.   composer.json / composer.lock   Cần có quyền ghi từ máy chủ web cho các tệp này. Được cập nhật khi cài đặt plugin.   Ví dụ cài đặt quyền   Quyền cần thiết cho các vai trò khác nhau tùy thuộc vào thông số kỹ thuật của máy chủ. Ví dụ, trong trường hợp máy chủ chia sẻ, người dùng FTP đặt tệp và người dùng thực thi máy chủ web có thể khác nhau. Trong trường hợp này, máy chủ web sẽ truy cập với quyền Other, vì vậy cần thiết lập quyền ghi cho Other để sử dụng các tính năng của EC-CUBE.                  Thư mục/Tệp       Quyền cần thiết cho máy chủ web       Ví dụ cài đặt                       eccube_root/   app/    app/Plugin/    app/PluginData/    app/proxy/    app/template/    html/    var/   vendor/       Đọc, ghi       707( rwx---rwx )                 Các thư mục khác       Đọc       705( rwx---r-x )                 composer.json   composer.lock       Đọc, ghi       606( rw----rw- )                 Các tệp khác       Đọc       604( rw----r-- )           Về việc nâng cấp phiên bản chính   Khi nâng cấp phiên bản chính của EC-CUBE bằng plugin cập nhật, cần có quyền ghi từ máy chủ web cho tất cả các tệp. Khi nâng cấp, hãy tạm thời cấp quyền ghi từ máy chủ web, sau khi cập nhật hãy trở lại cài đặt quyền khuyến nghị.   Về bin/console   Khi sử dụng lệnh của EC-CUBE, hãy cấp quyền thực thi cho bin/console.   Cài đặt quyền trong môi trường sản xuất   Phần trước đã đề cập đến quyền ghi từ máy chủ web để sử dụng tất cả các tính năng của EC-CUBE. Trong môi trường sản xuất, có thể giảm rủi ro bảo mật bằng cách hạn chế quyền hơn nữa. Tuy nhiên, việc hạn chế quyền quá mức có thể làm giảm tính tiện lợi và hạn chế một số tính năng. Hãy hiểu rõ vai trò và nội dung hạn chế của từng tệp/thư mục trước khi cài đặt quyền.   Không nên cấp quyền ghi từ máy chủ web cho các thư mục/tệp sau từ góc độ bảo mật.   [eccube_root/]   │   ├──[app/]   │   ├──[Plugin/]   │   ├──[proxy/]   │   └──[template/]   ├──[vendor/]   ├──[.env]   ├──[.htaccess]   ├──[composer.json]   └──[composer.lock]   Khi hạn chế quyền ghi từ máy chủ web cho các thư mục/tệp trên, các tính năng sau sẽ bị hạn chế.      Quản lý nội dung            Quản lý trang       Quản lý khối       Quản lý bảo trì           Cài đặt            Cài đặt cửa hàng                    Cài đặt luật thương mại cụ thể           Cài đặt điều khoản sử dụng           Cài đặt email                       Cài đặt hệ thống                    Quản lý bảo mật                           Cửa hàng chủ sở hữu            Plugin                    Danh sách plugin                       Mẫu                    Danh sách mẫu           Tải lên                       Cài đặt           .env và .htaccess   .env được tạo khi cài đặt EC-CUBE và chứa các cài đặt quan trọng của EC-CUBE. Ngoài ra, .htaccess chứa các cài đặt quan trọng như cài đặt máy chủ web và biến môi trường. Vì cả hai đều chứa các cài đặt quan trọng, nên hạn chế chỉ cho phép quyền đọc và ghi từ máy chủ web. Hãy đặt chủ sở hữu tệp là người dùng máy chủ web và thiết lập quyền 400(rw-------). Về việc sử dụng tệp .env trong môi trường sản xuất, hãy xem thêm Về việc sử dụng tệp .env trong môi trường sản xuất.   var/   Các tệp cần thiết cho hoạt động của EC-CUBE như cache và log được đặt ở đây. Để EC-CUBE hoạt động, cần có quyền ghi từ máy chủ web.   app/PluginData/   Thư mục này dùng để đặt dữ liệu của plugin. Việc sử dụng app/PluginData/ phụ thuộc vào plugin. Nếu có plugin sử dụng app/PluginData/ được cài đặt, cần có quyền ghi từ máy chủ web.   html/   Khi tải lên các hình ảnh sản phẩm, chúng được đặt trong html/. Khi hạn chế quyền ghi từ máy chủ web, các tính năng sau sẽ bị hạn chế.      Quản lý sản phẩm            Đăng ký sản phẩm                    Hình ảnh sản phẩm                           Quản lý nội dung            Quản lý tệp           Cài đặt            Cài đặt cửa hàng                    Cài đặt phương thức thanh toán                            Hình ảnh logo                                                  ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/quickstart/permission",
        "teaser":null},{
        "title": "Yêu cầu hệ thống",
        "excerpt":"4.3                  Phân loại       Phần mềm       Phiên bản                       Máy chủ Web       Apache       2.4.x   (mod_rewrite / mod_ssl bắt buộc)                 PHP       PHP       8.1 〜 8.3                 Cơ sở dữ liệu       PostgreSQL       12.x 〜 16.x   (quyền tham chiếu bảng pg_settings bắt buộc)                 Cơ sở dữ liệu       MySQL       8.0  (InnoDB engine bắt buộc)                 Cơ sở dữ liệu       SQLite(dành cho phát triển)       3.x           4.2                  Phân loại       Phần mềm       Phiên bản                       Máy chủ Web       Apache       2.4.x   (mod_rewrite / mod_ssl bắt buộc)                 PHP       PHP       7.4 〜 8.1                 Cơ sở dữ liệu       PostgreSQL       10.x 〜 14.x   (quyền tham chiếu bảng pg_settings bắt buộc)                 Cơ sở dữ liệu       MySQL       5.7 hoặc 8.0  (InnoDB engine bắt buộc)                 Cơ sở dữ liệu       SQLite(dành cho phát triển)       3.x           4.0/4.1                  Phân loại       Phần mềm       Phiên bản                       Máy chủ Web       Apache       2.4.x   (mod_rewrite / mod_ssl bắt buộc)                 PHP       PHP       7.3 〜 7.4 (※1)                 Cơ sở dữ liệu       PostgreSQL       9.6.x 〜 14.x (※2)  (quyền tham chiếu bảng pg_settings bắt buộc)                 Cơ sở dữ liệu       MySQL       5.7.x (※3)  (InnoDB engine bắt buộc)                 Cơ sở dữ liệu       SQLite(dành cho phát triển)       3.x           ※1 EC-CUBE 4.0.0〜4.0.1 hỗ trợ PHP 7.1〜7.2, 4.0.2〜4.0.3 hỗ trợ PHP 7.1〜7.3, 4.0.4〜4.0.x hỗ trợ PHP 7.1〜7.4  ※2 EC-CUBE 4.0 hỗ trợ PostgreSQL 9.2.x〜13.x  ※3 EC-CUBE 4.0 hỗ trợ MySQL 5.5.x〜5.7.x   Thư viện PHP                  Phân loại       Thư viện                       Thư viện bắt buộc       pgsql / mysqli (phù hợp với cơ sở dữ liệu sử dụng)   pdo_pgsql / pdo_mysql / pdo_sqlite (phù hợp với cơ sở dữ liệu sử dụng)   pdo   phar   mbstring   zlib   ctype   session   JSON   xml   libxml   OpenSSL   zip   cURL   fileinfo   intl   GD   Sodium(※4)                 Thư viện khuyến nghị       hash   APCu / WinCache (phù hợp với môi trường sử dụng)   Zend OPcache           ※4 EC-CUBE 4.2 yêu cầu mở rộng Sodium khi sử dụng plugin Web API.  Nếu không thể cài đặt plugin, hãy tham khảo mục này   Trình duyệt kiểm tra hoạt động   Giao diện quản lý và mẫu giao diện chuẩn                  Hệ điều hành       Trình duyệt                       Windows       Edge mới nhất                         FireFox mới nhất                         Google Chrome mới nhất                 Mac       Safari mới nhất                 iOS       Safari mới nhất                 Android       Trình duyệt chuẩn mới nhất          ","categories": [],
        "tags": ["quickstart","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/quickstart/requirement",
        "teaser":null},{
        "title": "Giải pháp cho vấn đề không thể cài đặt plugin trên phiên bản 4.2",
        "excerpt":"Hiện tượng  Không thể cài đặt plugin trên một số máy chủ cho thuê với EC-CUBE4.2.0.   Đối tượng   Phiên bản chính  EC-CUBE 4.2   Plugin đối tượng  Tất cả   Nguyên nhân   Hiện tượng xảy ra khi không có thư viện mở rộng PHP-sodium, được thêm vào mặc định từ PHP7.2 trở đi. Đây là hiện tượng xảy ra trên một số máy chủ cho thuê cụ thể. (Yêu cầu hệ thống của EC-CUBE4.2 là PHP7.4 trở lên.)   Giải pháp gốc  Cài đặt thư viện mở rộng PHP-sodium.   →Nếu gặp khó khăn với giải pháp này, hãy thử phương pháp tránh dưới đây.   Phương pháp tránh  Gỡ cài đặt plugin WebAPI   →Bằng cách gỡ cài đặt plugin WebAPI, có thể cài đặt plugin.   Đặc điểm của EC-CUBE 4.2.1 trở lên   Từ EC-CUBE 4.2.1, nếu không có mở rộng sodium, plugin WebAPI sẽ được gỡ cài đặt trong trình cài đặt Web.   Xem chi tiết tại các liên kết dưới đây.      EC-CUBE#5912   EC-CUBE#5934  ","categories": [],
        "tags": ["quickstart","plugin"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/quickstart/trouble-shooting-for-plugin-install",
        "teaser":null},{
        "title": "Nâng cấp phiên bản 4.0",
        "excerpt":"Trước khi thực hiện nâng cấp trên môi trường sản xuất, hãy đảm bảo kiểm tra trước trên môi trường thử nghiệm.  Hướng dẫn này giả định rằng bạn đang sử dụng gói EC-CUBE tải về từ ec-cube.net.  Nếu bạn đã tùy chỉnh mã nguồn của EC-CUBE (các thư mục app/config/eccube, app/DoctrineMigrations, bin, src, html), các tệp sẽ bị ghi đè và bạn không thể nâng cấp theo hướng dẫn này. Hãy kiểm tra sự khác biệt giữa các phiên bản và tích hợp các thay đổi cần thiết.  EC-CUBE 4.0.6 trở về trước có chứa lỗ hổng bảo mật mức độ “cao”. Hãy nâng cấp lên phiên bản EC-CUBE 4.0.6-p2 hoặc cao hơn.   Phương pháp nâng cấp sử dụng plugin cập nhật      Đối với việc nâng cấp phiên bản 4.x của EC-CUBE, bạn có thể sử dụng plugin cập nhật.   Plugin cập nhật có thể được tìm kiếm và sử dụng từ “Cửa hàng chủ sở hữu/ Tìm kiếm plugin” trong giao diện quản lý của EC-CUBE.   Nếu bạn đã thực hiện nâng cấp bằng plugin cập nhật, các bước dưới đây không cần thiết.   Quy trình công việc     Sao lưu trang web   Kích hoạt chế độ bảo trì   Thay thế các tệp nguồn của EC-CUBE bằng phiên bản đã nâng cấp   Thay thế tệp riêng lẻ   Cập nhật composer.json/composer.lock   Cập nhật schema/di chuyển   Tái tạo proxy   Cập nhật tệp mẫu giao diện   Vô hiệu hóa chế độ bảo trì   Khác   Chi tiết các bước   1. Sao lưu trang web   Hãy sao lưu toàn bộ thư mục cài đặt của EC-CUBE.   Cũng hãy sao lưu toàn bộ cơ sở dữ liệu của bạn.   2. Kích hoạt chế độ bảo trì (phiên bản 4.0.1 trở lên)   Truy cập giao diện quản lý của EC-CUBE, từ “Quản lý nội dung” chọn “Quản lý bảo trì” và kích hoạt chế độ bảo trì.   Hoặc, bạn có thể kích hoạt chế độ bảo trì bằng cách tạo tệp “.maintenance” trong thư mục gốc của EC-CUBE.   [root]   │   ├──.maintenance   │   ※ Khi sử dụng chế độ bảo trì, nếu truy cập vào các trang ngoài giao diện quản lý, màn hình bảo trì sẽ được hiển thị.   ※ Tính năng này chỉ có thể sử dụng nếu phiên bản EC-CUBE là “4.0.1” trở lên.   3. Thay thế các tệp nguồn của EC-CUBE bằng phiên bản đã nâng cấp   Về các tệp nguồn của EC-CUBE, hãy thay thế từng thư mục bằng các tệp nguồn đã nâng cấp. Các thư mục cần thay thế là những thư mục đã thay đổi trong lần nâng cấp này. （app/config/eccube app/DoctrineMigrations bin src html vendor v.v…）   Thay thế ngoài thư mục vendor   Hãy xóa các thư mục cần thay thế và thay thế bằng các thư mục của phiên bản EC-CUBE đã nâng cấp.   （Không chỉ ghi đè lên các thư mục mục tiêu mà cần thay thế toàn bộ các tệp trong thư mục. Nếu các tệp cũ còn sót lại, có thể dẫn đến hoạt động không mong muốn, vì vậy hãy chắc chắn thay thế toàn bộ các tệp trong từng thư mục mục tiêu.）   [root]   │   ├──[app/config/eccube]   ├──[app/DoctrineMigrations]   ├──[bin]   ├──[src]   ├──[html]   │   Thay thế thư mục vendor   Thư mục vendor không cần xóa, hãy ghi đè lên bằng thư mục vendor của phiên bản EC-CUBE đã nâng cấp.   （Nếu bạn sử dụng các plugin Web API hoặc Symfony bundle, việc xóa hoàn toàn thư mục vendor có thể gây ra lỗi trong các bước tiếp theo. Lệnh bin/console eccube:composer:require-already-installed trong bước (5) sẽ xóa các tệp không cần thiết trong thư mục vendor）   [root]   │   ├──[vendor]   │   4. Thay thế tệp riêng lẻ   Đối với từng phiên bản, cần thay thế các tệp riêng lẻ.   Hãy kiểm tra các tệp cần thay thế từ dưới đây và ghi đè bằng các tệp mới nhất.   | Phiên bản nâng cấp | Tệp cần thay thế                                                                              | |———————-|—————————————————————————————————| | 4.0.0 → 4.0.1        | composer.json composer.lock .htaccess index.php maintenance.php| | 4.0.1 → 4.0.2        | composer.json composer.lock| | 4.0.2 → 4.0.3        | composer.json composer.lock .htaccess index.php| | 4.0.3 → 4.0.4        | composer.json composer.lock .htaccess app/Customize/Resource var/.htaccess| | 4.0.4 → 4.0.5-p1        | composer.json composer.lock .htaccess robots.txt app/template/plugin| | 4.0.5 → 4.0.6        | composer.lock symfony.lock .htaccess| | 4.0.6 → 4.0.6-p1     | .htaccess| | 4.0.6-p1 → 4.0.6-p2     | -|     ※ Nếu tệp cần thay thế bao gồm composer.json/composer.lock, sau khi ghi đè, hãy thực hiện bước cập nhật composer.json/composer.lock.   ※ Nếu thực hiện nâng cấp qua nhiều phiên bản như 4.0.0 → 4.0.2, hãy nâng cấp từng bước như 4.0.0 → 4.0.1→4.0.1 → 4.0.2.   ※ Khi tải lên tệp qua FTP, có thể quyền truy cập sẽ bị thay đổi. Hãy tham khảo cài đặt quyền truy cập để kiểm tra quyền truy cập.   ※ Hãy kiểm tra danh sách lỗ hổng bảo mật trên trang chính thức và tìm kiếm theo phiên bản tương ứng để áp dụng các bản vá cần thiết.   Sau khi ghi đè, hãy xóa bộ nhớ đệm bằng lệnh dưới đây.   bin/console cache:clear --no-warmup   5. Cập nhật composer.json/composer.lock   Bước này chỉ cần thiết nếu bạn đáp ứng tất cả các điều kiện dưới đây. Nếu không, hãy bỏ qua.      Tệp cần thay thế trong bước thay thế tệp riêng lẻ bao gồm composer.json/composer.lock   Đã cài đặt plugin   Hãy thực hiện lệnh dưới đây.   bin/console eccube:composer:require-already-installed   Nếu bạn đã tự cài đặt các thư viện bên ngoài như packagist, hãy yêu cầu lại.   Ví dụ, nếu bạn đã cài đặt psr/http-message, hãy thực hiện lệnh dưới đây.   composer require psr/http-message   6. Cập nhật schema/di chuyển   Sử dụng chức năng cập nhật schema và di chuyển để nâng cấp cơ sở dữ liệu.   Hãy thực hiện lệnh dưới đây.   ※ Không cần cập nhật schema khi nâng cấp lên các phiên bản 4.0.0 → 4.0.1, 4.0.1 → 4.0.2, 4.0.4 → 4.0.5-p1, 4.0.5 → 4.0.6, 4.0.6 → 4.0.6-p1, 4.0.6-p1 → 4.0.6-p2.   Tham khảo: Khi plugin bị vô hiệu hóa, Doctrine SchemaTool không nhận diện được mở rộng entity   Cập nhật schema   bin/console doctrine:schema:update --force --dump-sql   Di chuyển   bin/console doctrine:migrations:migrate   7. Tái tạo proxy   Chỉ cần tái tạo proxy khi nâng cấp lên phiên bản 4.0.3. Nếu không, hãy bỏ qua.   Xóa tệp proxy  rm -rf app/proxy/entity/*   Tái tạo tệp autoload  composer dump-autoload   Tái tạo tệp proxy  bin/console eccube:generate:proxies   Tái tạo tệp bộ nhớ đệm  bin/console cache:warmup --env=prod   8. Cập nhật tệp mẫu giao diện   Đối với từng phiên bản, cần cập nhật tệp mẫu giao diện (twig).   Từ “Quản lý nội dung” hoặc “Cài đặt cửa hàng &gt; Cài đặt email” trong giao diện quản lý, hãy chỉnh sửa trang/khối/mẫu email tương ứng.   Bạn có thể kiểm tra sự khác biệt của các thay đổi từ sự khác biệt giữa các phiên bản.   4.0.0 → 4.0.1                  Tên trang       Tên tệp                       Đăng ký thành viên (trang nhập)       Contact/index.twig                 Đăng ký thành viên (trang nhập)       Entry/index.twig                 Trang của tôi/Thay đổi thông tin đăng ký thành viên (trang nhập)       Mypage/change.twig                 Trang của tôi/Thêm địa chỉ giao hàng       Mypage/delivery_edit.twig                 Mua hàng       Shopping/index.twig                 Mua hàng không đăng ký       Shopping/nonmember.twig                 Mua hàng/Thêm địa chỉ giao hàng       Shopping/shipping_edit.twig                 Mua hàng/Chỉ định nhiều địa chỉ giao hàng (Thêm địa chỉ giao hàng)       Shopping/shipping_multiple_edit.twig           4.0.1 → 4.0.2                  Tên trang       Tên tệp                       Trang của tôi/Chi tiết lịch sử mua hàng       Mypage/history.twig                 Email xác nhận đơn hàng       Mail/order.twig                 Email xác nhận đơn hàng (HTML)       Mail/order.html.twig           4.0.2 → 4.0.3   Sự khác biệt của tệp mẫu giao diện   4.0.3 → 4.0.4   Sự khác biệt của tệp mẫu giao diện   4.0.4 → 4.0.5-p1   Sự khác biệt của tệp mẫu giao diện   4.0.5-p1 → 4.0.6、4.0.6 → 4.0.6-p1, 4.0.6-p1 → 4.0.6-p2   Không có cập nhật tệp mẫu giao diện.   9. Vô hiệu hóa chế độ bảo trì (phiên bản 4.0.1 trở lên)   Truy cập giao diện quản lý của EC-CUBE, từ “Quản lý nội dung” chọn “Quản lý bảo trì” và vô hiệu hóa chế độ bảo trì.   Hoặc, bạn có thể vô hiệu hóa chế độ bảo trì bằng cách xóa tệp “.maintenance” trong thư mục gốc của EC-CUBE.   ※ Tính năng này chỉ có thể sử dụng nếu phiên bản EC-CUBE là “4.0.1” trở lên.   10. Khác   4.0.0 -&gt; 4.0.1   Nếu bạn muốn sử dụng tính năng bảo trì được triển khai trong phiên bản 4.0.1, cần ghi vào .env hoặc định nghĩa các giá trị dưới đây như biến môi trường.   ECCUBE_LOCALE=ja ECCUBE_ADMIN_ROUTE=admin ECCUBE_TEMPLATE_CODE=default  ※ Giá trị cài đặt là ví dụ. Hãy thay đổi theo môi trường của bạn.   4.0.1 -&gt; 4.0.2      Nếu bạn muốn sử dụng thay đổi đường dẫn favicon, sau khi áp dụng sự khác biệt, hãy tải lên tệp favicon từ quản lý tệp để thay đổi favicon.   Nếu bạn muốn sử dụng quản lý CSS, cần áp dụng sự khác biệt.   Nếu bạn muốn sử dụng quản lý Javascript, cần áp dụng sự khác biệt.   4.0.2 -&gt; 4.0.3      Nếu bạn muốn sử dụng hỗ trợ cho hệ thống thuế suất giảm, cần áp dụng sự khác biệt. ※ Hãy kiểm tra lưu ý kèm theo.   Nếu bạn muốn sử dụng thay đổi hình ảnh logo PDF, cần áp dụng sự khác biệt.   Nếu bạn muốn sử dụng tải lên nhiều tệp, cần áp dụng sự khác biệt.   Quy trình nâng cấp phiên bản của EC-CUBE đã hoàn tất.   Sự khác biệt giữa các phiên bản   Bạn có thể kiểm tra sự khác biệt chi tiết giữa các phiên bản từ các liên kết dưới đây.                  Phiên bản       Trang sự khác biệt                       4.0.0 → 4.0.1       https://github.com/EC-CUBE/ec-cube/compare/4.0.0…4.0.1                 4.0.1 → 4.0.2       https://github.com/EC-CUBE/ec-cube/compare/4.0.1…4.0.2                 4.0.2 → 4.0.3       https://github.com/EC-CUBE/ec-cube/compare/4.0.2…4.0.3                 4.0.3 → 4.0.4       https://github.com/EC-CUBE/ec-cube/compare/4.0.3…4.0.4                 4.0.4 → 4.0.5-p1       https://github.com/EC-CUBE/ec-cube/compare/4.0.4…4.0.5-p1                 4.0.5-p1 → 4.0.6       https://github.com/EC-CUBE/ec-cube/compare/4.0.5-p1…4.0.6                 4.0.6 → 4.0.6-p1       https://github.com/EC-CUBE/ec-cube/compare/4.0.6…4.0.6-p1                 4.0.6-p1 → 4.0.6-p2       https://github.com/EC-CUBE/ec-cube/compare/4.0.6-p1…4.0.6-p2           ","categories": [],
        "tags": ["quickstart","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/update",
        "teaser":null},{
        "title": "Nâng cấp từ 4.0 lên 4.1",
        "excerpt":"Trước khi thực hiện nâng cấp trên môi trường sản xuất, hãy đảm bảo kiểm tra trước trên môi trường thử nghiệm.  Hướng dẫn này giả định rằng bạn đang sử dụng gói EC-CUBE tải về từ ec-cube.net.  Hướng dẫn này giả định rằng bạn đang nâng cấp từ EC-CUBE 4.0.6-p1 lên 4.1.0.  Nếu bạn đã tùy chỉnh mã nguồn của EC-CUBE (các thư mục app/config/eccube, app/DoctrineMigrations, bin, src, html), các tệp sẽ bị ghi đè và bạn không thể nâng cấp theo hướng dẫn này. Hãy kiểm tra sự khác biệt giữa các phiên bản và tích hợp các thay đổi cần thiết.   Chuẩn bị trước   Kiểm tra phiên bản của plugin      Nếu bạn đã cài đặt plugin, hãy kiểm tra xem chúng có tương thích với EC-CUBE 4.1 hay không.   Trước khi thực hiện nâng cấp lên 4.1, hãy cập nhật các plugin đang sử dụng lên phiên bản tương thích với 4.1.   Di chuyển khi sử dụng tùy chỉnh hoặc plugin riêng      Nếu bạn đã sử dụng tùy chỉnh trong vùng Customize hoặc plugin riêng, hãy tham khảo Di chuyển từ EC-CUBE 4.0 lên 4.1 để thực hiện tương thích với 4.1.   Vô hiệu hóa plugin đã được tích hợp vào mã nguồn      Từ phiên bản 4.1.0, các plugin sau đã được tích hợp vào mã nguồn của EC-CUBE.            taba secure 2段階認証プラグイン for EC-CUBE 4           Nếu bạn đang sử dụng các plugin này, hãy xóa chúng.   Phương pháp nâng cấp sử dụng plugin cập nhật      Đối với việc nâng cấp phiên bản 4.x của EC-CUBE, bạn có thể sử dụng plugin cập nhật.   Plugin cập nhật có thể được tìm kiếm và sử dụng từ “Cửa hàng chủ sở hữu/ Tìm kiếm plugin” trong giao diện quản lý của EC-CUBE.   Nếu bạn đã thực hiện nâng cấp bằng plugin cập nhật, các bước dưới đây không cần thiết.   Quy trình công việc      Sao lưu trang web   Kích hoạt chế độ bảo trì   Thay thế các tệp nguồn của EC-CUBE bằng phiên bản đã nâng cấp   Thay thế tệp riêng lẻ   Cập nhật composer.json/composer.lock   Cập nhật schema/di chuyển   Tái tạo cache và các tệp khác   Cập nhật tệp mẫu giao diện   Vô hiệu hóa chế độ bảo trì   Chi tiết các bước   1. Sao lưu trang web   Hãy sao lưu toàn bộ thư mục cài đặt của EC-CUBE.   Cũng hãy sao lưu toàn bộ cơ sở dữ liệu của bạn.   2. Kích hoạt chế độ bảo trì (phiên bản 4.0.1 trở lên)   Truy cập giao diện quản lý của EC-CUBE, từ “Quản lý nội dung” chọn “Quản lý bảo trì” và kích hoạt chế độ bảo trì.   Hoặc, bạn có thể kích hoạt chế độ bảo trì bằng cách tạo tệp “.maintenance” trong thư mục gốc của EC-CUBE.   [root]   ├──.maintenance   │   ※ Khi sử dụng chế độ bảo trì, nếu truy cập vào các trang ngoài giao diện quản lý, màn hình bảo trì sẽ được hiển thị.   3. Thay thế các tệp nguồn của EC-CUBE bằng phiên bản đã nâng cấp   Về các tệp nguồn của EC-CUBE, hãy thay thế từng thư mục bằng các tệp nguồn đã nâng cấp. Các thư mục cần thay thế là những thư mục đã thay đổi trong lần nâng cấp này. （app/config/eccube app/DoctrineMigrations bin src html vendor v.v…）   Thay thế ngoài thư mục vendor   Hãy xóa các thư mục cần thay thế và thay thế bằng các thư mục của phiên bản EC-CUBE đã nâng cấp.   （Không chỉ ghi đè lên các thư mục mục tiêu mà cần thay thế toàn bộ các tệp trong thư mục. Nếu các tệp cũ còn sót lại, có thể dẫn đến hoạt động không mong muốn, vì vậy hãy chắc chắn thay thế toàn bộ các tệp trong từng thư mục mục tiêu.）   [root]   ├──[app/config/eccube]   ├──[app/DoctrineMigrations]   ├──[bin]   ├──[src]   ├──[html]   │   Thay thế thư mục vendor   Thư mục vendor không cần xóa, hãy ghi đè lên bằng thư mục vendor của phiên bản EC-CUBE đã nâng cấp.   （Nếu bạn sử dụng các plugin Web API hoặc Symfony bundle, việc xóa hoàn toàn thư mục vendor có thể gây ra lỗi trong các bước tiếp theo. Lệnh bin/console eccube:composer:require-already-installed trong bước (5) sẽ xóa các tệp không cần thiết trong thư mục vendor）   [root]   ├──[vendor]   │   4. Thay thế tệp riêng lẻ   Hãy kiểm tra các tệp cần thay thế từ dưới đây và ghi đè bằng các tệp mới nhất.      composer.json   composer.lock   .htaccess   symfony.lock   index.php   5. Cập nhật composer.json/composer.lock   Nếu bạn đã tự cài đặt các thư viện bên ngoài như packagist, hãy yêu cầu lại.   Ví dụ, nếu bạn đã cài đặt psr/http-message, hãy thực hiện lệnh dưới đây.   composer require psr/http-message --no-plugins --no-scripts   Nếu bạn sử dụng plugin với Symfony Bundle, hãy kiểm tra composer.json của plugin và cài đặt các thư viện phụ thuộc.   Ví dụ, đối với plugin API, hãy kiểm tra composer.json và cài đặt các thư viện phụ thuộc như dưới đây.   $ cat app/Plugin/Api/composer.json ...   \"require\": {     \"ec-cube/plugin-installer\": \"~0.0.6 || ^2.0\",     \"trikoder/oauth2-bundle\": \"^2.1\",     \"nyholm/psr7\": \"^1.2\",     \"webonyx/graphql-php\": \"^14.0\"  $ composer require trikoder/oauth2-bundle:^2.1 --no-plugins --no-scripts $ composer require nyholm/psr7:^1.2 --no-plugins --no-scripts $ composer require webonyx/graphql-php:^14.0 --no-plugins --no-scripts   Hãy xóa bộ nhớ đệm bằng lệnh dưới đây.   bin/console cache:clear --no-warmup   Hãy thực hiện lệnh dưới đây.   bin/console eccube:composer:require-already-installed   6. Cập nhật schema/di chuyển   Sử dụng chức năng cập nhật schema và di chuyển để nâng cấp cơ sở dữ liệu.   Hãy thực hiện lệnh dưới đây.   Cập nhật schema   bin/console doctrine:schema:update --force --dump-sql   Di chuyển   bin/console doctrine:migrations:migrate   7. Tái tạo cache và các tệp khác   Tái tạo tệp autoload  composer dump-autoload   Tái tạo tệp proxy  bin/console eccube:generate:proxies   Tái tạo tệp bộ nhớ đệm  bin/console cache:warmup --env=prod   Xóa phiên làm việc  rm -rf var/sessions   8. Cập nhật tệp mẫu giao diện   Đối với từng phiên bản, cần cập nhật tệp mẫu giao diện (twig).   Từ “Quản lý nội dung” hoặc “Cài đặt cửa hàng &gt; Cài đặt email” trong giao diện quản lý, hãy chỉnh sửa trang/khối/mẫu email tương ứng.   Danh sách các tệp thay đổi từ 4.0.6-p1 lên 4.1.0 như sau. Bạn có thể kiểm tra sự khác biệt của các thay đổi từ sự khác biệt.      src/Eccube/Resource/template/admin/default_frame.twig   src/Eccube/Resource/template/default/Contact/confirm.twig   src/Eccube/Resource/template/default/Contact/index.twig   src/Eccube/Resource/template/default/Entry/confirm.twig   src/Eccube/Resource/template/default/Entry/index.twig   src/Eccube/Resource/template/default/Mail/contact_mail.twig   src/Eccube/Resource/template/default/Mail/customer_withdraw_mail.twig   src/Eccube/Resource/template/default/Mail/entry_complete.twig   src/Eccube/Resource/template/default/Mail/entry_confirm.twig   src/Eccube/Resource/template/default/Mail/forgot_mail.twig   src/Eccube/Resource/template/default/Mail/order.html.twig   src/Eccube/Resource/template/default/Mail/order.twig   src/Eccube/Resource/template/default/Mail/reset_complete_mail.twig   src/Eccube/Resource/template/default/Mail/shipping_notify.twig   src/Eccube/Resource/template/default/Mypage/change.twig   src/Eccube/Resource/template/default/Mypage/delivery_edit.twig   src/Eccube/Resource/template/default/Mypage/index.twig   src/Eccube/Resource/template/default/Product/detail.twig   src/Eccube/Resource/template/default/Product/list.twig   src/Eccube/Resource/template/default/Shopping/shipping_edit.twig   src/Eccube/Resource/template/default/Shopping/shipping_multiple_edit.twig   src/Eccube/Resource/template/default/default_frame.twig   src/Eccube/Resource/template/default/meta.twig   src/Eccube/Resource/template/default/sitemap.xml.twig   src/Eccube/Resource/template/default/sitemap_index.xml.twig   9. Vô hiệu hóa chế độ bảo trì   Truy cập giao diện quản lý của EC-CUBE, từ “Quản lý nội dung” chọn “Quản lý bảo trì” và vô hiệu hóa chế độ bảo trì.   Hoặc, bạn có thể vô hiệu hóa chế độ bảo trì bằng cách xóa tệp “.maintenance” trong thư mục gốc của EC-CUBE.   Sự khác biệt   Bạn có thể kiểm tra sự khác biệt chi tiết từ 4.0.6-p1 lên 4.1.0 từ liên kết dưới đây.   https://github.com/EC-CUBE/ec-cube/compare/4.0.6-p1…4.1.0  ","categories": [],
        "tags": ["quickstart","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/update41",
        "teaser":null},{
        "title": "Nâng cấp phiên bản 4.1",
        "excerpt":"Trước khi thực hiện nâng cấp trên môi trường sản xuất, hãy đảm bảo kiểm tra trước trên môi trường thử nghiệm.  Hướng dẫn này giả định rằng bạn đang sử dụng gói EC-CUBE tải về từ ec-cube.net.  Nếu bạn đã tùy chỉnh mã nguồn của EC-CUBE (các thư mục app/config/eccube, app/DoctrineMigrations, bin, src, html), các tệp sẽ bị ghi đè và bạn không thể nâng cấp theo hướng dẫn này. Hãy kiểm tra sự khác biệt giữa các phiên bản và tích hợp các thay đổi cần thiết.  Lỗ hổng bảo mật “Xử lý tiêu đề HTTP Host” được công bố vào ngày 21 tháng 2 năm 2022 sẽ không được sửa chữa ngay cả khi bạn nâng cấp EC-CUBE. Hãy tham khảo trang chi tiết lỗ hổng bảo mật để thực hiện các cài đặt phù hợp.   Quy trình công việc     Sao lưu trang web   Kích hoạt chế độ bảo trì   Cập nhật plugin   Thay thế các tệp nguồn của EC-CUBE bằng phiên bản đã nâng cấp   Thay thế tệp riêng lẻ   Cập nhật composer.json/composer.lock   Cập nhật schema/di chuyển   Cập nhật tệp mẫu giao diện   Vô hiệu hóa chế độ bảo trì   Chi tiết các bước   1. Sao lưu trang web   Hãy sao lưu toàn bộ thư mục cài đặt của EC-CUBE.   Cũng hãy sao lưu toàn bộ cơ sở dữ liệu của bạn.   2. Kích hoạt chế độ bảo trì   Truy cập giao diện quản lý của EC-CUBE, từ “Quản lý nội dung” chọn “Quản lý bảo trì” và kích hoạt chế độ bảo trì.   Hoặc, bạn có thể kích hoạt chế độ bảo trì bằng cách tạo tệp “.maintenance” trong thư mục gốc của EC-CUBE.   [root]   │   ├──.maintenance   │   ※ Khi sử dụng chế độ bảo trì, nếu truy cập vào các trang ngoài giao diện quản lý, màn hình bảo trì sẽ được hiển thị.   3. Cập nhật plugin   Nếu có plugin đã cài đặt có thể cập nhật, hãy thực hiện cập nhật trước.   4. Thay thế các tệp nguồn của EC-CUBE bằng phiên bản đã nâng cấp   Về các tệp nguồn của EC-CUBE, hãy thay thế từng thư mục bằng các tệp nguồn đã nâng cấp. Các thư mục cần thay thế là những thư mục đã thay đổi trong lần nâng cấp này. （app/config/eccube app/DoctrineMigrations bin src html vendor v.v…）   Thay thế ngoài thư mục vendor   Hãy xóa các thư mục cần thay thế và thay thế bằng các thư mục của phiên bản EC-CUBE đã nâng cấp.   （Không chỉ ghi đè lên các thư mục mục tiêu mà cần thay thế toàn bộ các tệp trong thư mục. Nếu các tệp cũ còn sót lại, có thể dẫn đến hoạt động không mong muốn, vì vậy hãy chắc chắn thay thế toàn bộ các tệp trong từng thư mục mục tiêu.）   [root]   │   ├──[app/config/eccube]   ├──[app/DoctrineMigrations]   ├──[bin]   ├──[src]   ├──[html]   │   Thay thế thư mục vendor   Thư mục vendor không cần xóa, hãy ghi đè lên bằng thư mục vendor của phiên bản EC-CUBE đã nâng cấp.   （Nếu bạn sử dụng các plugin Web API hoặc Symfony bundle, việc xóa hoàn toàn thư mục vendor có thể gây ra lỗi trong các bước tiếp theo. Lệnh bin/console eccube:composer:require-already-installed trong bước (5) sẽ xóa các tệp không cần thiết trong thư mục vendor）   [root]   │   ├──[vendor]   │   5. Thay thế tệp riêng lẻ   Đối với từng phiên bản, cần thay thế các tệp riêng lẻ.   Hãy kiểm tra các tệp cần thay thế từ dưới đây và ghi đè bằng các tệp mới nhất.                  Phiên bản nâng cấp       Tệp cần thay thế                       4.1.0 → 4.1.1       composer.json composer.lock .htaccess index.php symfony.lock package.json package-lock.json                 4.1.1 → 4.1.2       composer.json composer.lock .htaccess index.php symfony.lock package.json package-lock.json                 4.1.2 → 4.1.2-p1       -           ※ Khi tải lên tệp qua FTP, có thể quyền truy cập sẽ bị thay đổi. Hãy tham khảo cài đặt quyền truy cập để kiểm tra quyền truy cập.   Sau khi ghi đè, hãy xóa bộ nhớ đệm bằng lệnh dưới đây.   bin/console cache:clear --no-warmup   6. Cập nhật composer.json/composer.lock   Hãy thực hiện lệnh dưới đây.   bin/console eccube:composer:require-already-installed   Nếu bạn đã tự cài đặt các thư viện bên ngoài như packagist, hãy yêu cầu lại.   Ví dụ, nếu bạn đã cài đặt psr/http-message, hãy thực hiện lệnh dưới đây.   composer require psr/http-message   7. Cập nhật schema/di chuyển   Sử dụng chức năng cập nhật schema và di chuyển để nâng cấp cơ sở dữ liệu.   Hãy thực hiện lệnh dưới đây.   Cập nhật schema   bin/console doctrine:schema:update --force --dump-sql   Di chuyển   bin/console doctrine:migrations:migrate   8. Cập nhật tệp mẫu giao diện   Đối với từng phiên bản, cần cập nhật tệp mẫu giao diện (twig).   Từ “Quản lý nội dung” hoặc “Cài đặt cửa hàng &gt; Cài đặt email” trong giao diện quản lý, hãy chỉnh sửa trang/khối/mẫu email tương ứng.   Bạn có thể kiểm tra sự khác biệt của các thay đổi từ sự khác biệt giữa các phiên bản.   4.1.0 → 4.1.1   Sự khác biệt của tệp mẫu giao diện   4.1.1 → 4.1.2   Sự khác biệt của tệp mẫu giao diện   9. Vô hiệu hóa chế độ bảo trì   Truy cập giao diện quản lý của EC-CUBE, từ “Quản lý nội dung” chọn “Quản lý bảo trì” và vô hiệu hóa chế độ bảo trì.   Hoặc, bạn có thể vô hiệu hóa chế độ bảo trì bằng cách xóa tệp “.maintenance” trong thư mục gốc của EC-CUBE.     Quy trình nâng cấp phiên bản của EC-CUBE đã hoàn tất.   Sự khác biệt giữa các phiên bản   Bạn có thể kiểm tra sự khác biệt chi tiết giữa các phiên bản từ các liên kết dưới đây.                  Phiên bản       Trang sự khác biệt                       4.1.0 → 4.1.1       https://github.com/EC-CUBE/ec-cube/compare/4.1.0…4.1.1                 4.1.1 → 4.1.2       https://github.com/EC-CUBE/ec-cube/compare/4.1.1…4.1.2                 4.1.2 → 4.1.2-p1       https://github.com/EC-CUBE/ec-cube/compare/4.1.2…4.1.2-p1           ","categories": [],
        "tags": ["quickstart","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/update41x",
        "teaser":null},{
        "title": "Nâng cấp phiên bản 4.2",
        "excerpt":"Trước khi thực hiện nâng cấp trên môi trường sản xuất, hãy đảm bảo kiểm tra trước trên môi trường thử nghiệm.  Hướng dẫn này giả định rằng bạn đang sử dụng gói EC-CUBE tải về từ ec-cube.net.   Quy trình công việc     Sao lưu trang web   Kích hoạt chế độ bảo trì   Cập nhật plugin   Thay thế các tệp nguồn của EC-CUBE bằng phiên bản đã nâng cấp   Thay thế tệp riêng lẻ   Cập nhật composer.json/composer.lock   Cập nhật schema/di chuyển   Cập nhật tệp mẫu giao diện   Vô hiệu hóa chế độ bảo trì   Chi tiết các bước   1. Sao lưu trang web   Hãy sao lưu toàn bộ thư mục cài đặt của EC-CUBE.   Cũng hãy sao lưu toàn bộ cơ sở dữ liệu của bạn.   2. Kích hoạt chế độ bảo trì   Truy cập giao diện quản lý của EC-CUBE, từ “Quản lý nội dung” chọn “Quản lý bảo trì” và kích hoạt chế độ bảo trì.   Hoặc, bạn có thể kích hoạt chế độ bảo trì bằng cách tạo tệp “.maintenance” trong thư mục gốc của EC-CUBE.   [root]   │   ├──.maintenance   │   ※ Khi sử dụng chế độ bảo trì, nếu truy cập vào các trang ngoài giao diện quản lý, màn hình bảo trì sẽ được hiển thị.   3. Cập nhật plugin   Nếu có plugin đã cài đặt có thể cập nhật, hãy thực hiện cập nhật trước.   4. Thay thế các tệp nguồn của EC-CUBE bằng phiên bản đã nâng cấp   Về các tệp nguồn của EC-CUBE, hãy thay thế từng thư mục bằng các tệp nguồn đã nâng cấp. Các thư mục cần thay thế là những thư mục đã thay đổi trong lần nâng cấp này. （app/config/eccube app/DoctrineMigrations bin src html vendor v.v…）   Thay thế ngoài thư mục vendor   Hãy xóa các thư mục cần thay thế và thay thế bằng các thư mục của phiên bản EC-CUBE đã nâng cấp.   （Không chỉ ghi đè lên các thư mục mục tiêu mà cần thay thế toàn bộ các tệp trong thư mục. Nếu các tệp cũ còn sót lại, có thể dẫn đến hoạt động không mong muốn, vì vậy hãy chắc chắn thay thế toàn bộ các tệp trong từng thư mục mục tiêu.）   [root]   │   ├──[app/config/eccube]   ├──[app/DoctrineMigrations]   ├──[bin]   ├──[src]   ├──[html]   │   Thay thế thư mục vendor   Thư mục vendor không cần xóa, hãy ghi đè lên bằng thư mục vendor của phiên bản EC-CUBE đã nâng cấp.   （Nếu bạn sử dụng các plugin Web API hoặc Symfony bundle, việc xóa hoàn toàn thư mục vendor có thể gây ra lỗi trong các bước tiếp theo. Lệnh bin/console eccube:composer:require-already-installed trong bước (5) sẽ xóa các tệp không cần thiết trong thư mục vendor）   [root]   │   ├──[vendor]   │   5. Thay thế tệp riêng lẻ   Đối với từng phiên bản, cần thay thế các tệp riêng lẻ.   Hãy kiểm tra các tệp cần thay thế từ dưới đây và ghi đè bằng các tệp mới nhất.                  Phiên bản nâng cấp       Tệp cần thay thế                       4.2.0 → 4.2.1       composer.json composer.lock package.json package-lock.json                       4.2.1 → 4.2.2       package.json package-lock.json                       4.2.2 → 4.2.3       package.json package-lock.json           ※ Khi tải lên tệp qua FTP, có thể quyền truy cập sẽ bị thay đổi. Hãy tham khảo cài đặt quyền truy cập để kiểm tra quyền truy cập.   6. Cập nhật composer.json/composer.lock   ※ Khi nâng cấp lên phiên bản 4.2.2, cần thay đổi thứ tự các bước. Hãy thực hiện bước “7. Cập nhật schema/di chuyển” trước, sau đó tiến hành bước “6. Cập nhật composer.json/composer.lock”. Thông thường, trong bước “6. Cập nhật composer.json/composer.lock”, lệnh require-already-installed sẽ được thực hiện. Lúc này, do cần truy cập vào dtb_base_info, có thể xảy ra lỗi. Thay đổi thứ tự các bước như trên sẽ giúp tránh lỗi này.    Nếu bạn đã tự cài đặt các thư viện bên ngoài như packagist, hãy yêu cầu lại.   Ví dụ, nếu bạn đã cài đặt psr/http-message, hãy thực hiện lệnh dưới đây.   composer require psr/http-message --no-plugins --no-scripts   Nếu bạn sử dụng plugin với Symfony Bundle, hãy kiểm tra composer.json của plugin và cài đặt các thư viện phụ thuộc.   Ví dụ, đối với plugin API, hãy kiểm tra composer.json và cài đặt các thư viện phụ thuộc như dưới đây.   $ cat app/Plugin/Api/composer.json ...   \"require\": {     \"ec-cube/plugin-installer\": \"~0.0.6 || ^2.0\",     \"trikoder/oauth2-bundle\": \"^2.1\",     \"nyholm/psr7\": \"^1.2\",     \"webonyx/graphql-php\": \"^14.0\"  $ composer require trikoder/oauth2-bundle:^2.1 --no-plugins --no-scripts $ composer require nyholm/psr7:^1.2 --no-plugins --no-scripts $ composer require webonyx/graphql-php:^14.0 --no-plugins --no-scripts   Hãy xóa bộ nhớ đệm bằng lệnh dưới đây.   bin/console cache:clear --no-warmup   Hãy thực hiện lệnh dưới đây.   bin/console eccube:composer:require-already-installed   7. Cập nhật schema/di chuyển   Sử dụng chức năng cập nhật schema và di chuyển để nâng cấp cơ sở dữ liệu.   Hãy thực hiện lệnh dưới đây.   Cập nhật schema   bin/console doctrine:schema:update --force --dump-sql   Di chuyển   bin/console doctrine:migrations:migrate   8. Cập nhật tệp mẫu giao diện   Đối với từng phiên bản, cần cập nhật tệp mẫu giao diện (twig).   Từ “Quản lý nội dung” hoặc “Cài đặt cửa hàng &gt; Cài đặt email” trong giao diện quản lý, hãy chỉnh sửa trang/khối/mẫu email tương ứng.   Bạn có thể kiểm tra sự khác biệt của các thay đổi từ sự khác biệt giữa các phiên bản.   4.2.0 → 4.2.1  Sự khác biệt của tệp mẫu giao diện   4.2.1 → 4.2.2  4.2.2 không có thay đổi tệp mẫu giao diện.   4.2.2 → 4.2.3   Đối với các trang bảo mật, có ghi chú các thay đổi của tệp mẫu giao diện. Hãy tham khảo trang này để áp dụng.   9. Vô hiệu hóa chế độ bảo trì   Truy cập giao diện quản lý của EC-CUBE, từ “Quản lý nội dung” chọn “Quản lý bảo trì” và vô hiệu hóa chế độ bảo trì.   Hoặc, bạn có thể vô hiệu hóa chế độ bảo trì bằng cách xóa tệp “.maintenance” trong thư mục gốc của EC-CUBE.     Quy trình nâng cấp phiên bản của EC-CUBE đã hoàn tất.   Sự khác biệt giữa các phiên bản   Bạn có thể kiểm tra sự khác biệt chi tiết giữa các phiên bản từ các liên kết dưới đây.                  Phiên bản       Trang sự khác biệt                       4.2.0 → 4.2.1       https://github.com/EC-CUBE/ec-cube/compare/4.2.0…4.2.1                 4.2.1 → 4.2.2       https://github.com/EC-CUBE/ec-cube/compare/4.2.1…4.2.2                 4.2.2 → 4.2.3       https://github.com/EC-CUBE/ec-cube/compare/4.2.2…4.2.3\\n          ","categories": [],
        "tags": ["quickstart","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/update42x",
        "teaser":null},{
        "title": "Nâng cấp từ 4.2 lên 4.3",
        "excerpt":"Trước khi thực hiện nâng cấp trên môi trường sản xuất, hãy đảm bảo kiểm tra trước trên môi trường thử nghiệm.  Hướng dẫn này giả định rằng bạn đang sử dụng gói EC-CUBE tải về từ ec-cube.net.  Hướng dẫn này giả định rằng bạn đang nâng cấp từ EC-CUBE 4.2.3 lên 4.3.0.  Nếu bạn đã tùy chỉnh mã nguồn của EC-CUBE (các thư mục app/config/eccube, app/DoctrineMigrations, bin, src, html), các tệp sẽ bị ghi đè và bạn không thể nâng cấp theo hướng dẫn này. Hãy kiểm tra sự khác biệt giữa các phiên bản và tích hợp các thay đổi cần thiết.   Chuẩn bị trước   Kiểm tra phiên bản của plugin      Nếu bạn đã cài đặt plugin, hãy kiểm tra xem chúng có tương thích với EC-CUBE 4.3 hay không.   Trước khi thực hiện nâng cấp lên 4.3, hãy cập nhật các plugin đang sử dụng lên phiên bản tương thích với 4.3.   Di chuyển khi sử dụng tùy chỉnh hoặc plugin riêng      Nếu bạn đã sử dụng tùy chỉnh trong vùng Customize hoặc plugin riêng, hãy tham khảo Di chuyển từ EC-CUBE 4.2 lên 4.3 để thực hiện tương thích với 4.3.   Quy trình công việc      Sao lưu trang web   Kích hoạt chế độ bảo trì   Cập nhật plugin   Thay thế các tệp nguồn của EC-CUBE bằng phiên bản đã nâng cấp   Thay thế tệp riêng lẻ   Cập nhật composer.json/composer.lock   Cập nhật schema/di chuyển   Tái tạo cache và các tệp khác   Cập nhật tệp mẫu giao diện   Vô hiệu hóa chế độ bảo trì   Chi tiết các bước   1. Sao lưu trang web   Hãy sao lưu toàn bộ thư mục cài đặt của EC-CUBE.   Cũng hãy sao lưu toàn bộ cơ sở dữ liệu của bạn.   2. Kích hoạt chế độ bảo trì   Truy cập giao diện quản lý của EC-CUBE, từ “Quản lý nội dung” chọn “Quản lý bảo trì” và kích hoạt chế độ bảo trì.   Hoặc, bạn có thể kích hoạt chế độ bảo trì bằng cách tạo tệp “.maintenance” trong thư mục gốc của EC-CUBE.   [root]   │   ├──.maintenance   │   ※ Khi sử dụng chế độ bảo trì, nếu truy cập vào các trang ngoài giao diện quản lý, màn hình bảo trì sẽ được hiển thị.   3. Cập nhật plugin   Nếu có plugin đã cài đặt có thể cập nhật, hãy thực hiện cập nhật trước.   4. Thay thế các tệp nguồn của EC-CUBE bằng phiên bản đã nâng cấp   Về các tệp nguồn của EC-CUBE, hãy thay thế từng thư mục bằng các tệp nguồn đã nâng cấp. Các thư mục cần thay thế là những thư mục đã thay đổi trong lần nâng cấp này. （app/config/eccube app/DoctrineMigrations bin src html vendor v.v…）   Thay thế ngoài thư mục vendor   Hãy xóa các thư mục cần thay thế và thay thế bằng các thư mục của phiên bản EC-CUBE đã nâng cấp.   （Không chỉ ghi đè lên các thư mục mục tiêu mà cần thay thế toàn bộ các tệp trong thư mục. Nếu các tệp cũ còn sót lại, có thể dẫn đến hoạt động không mong muốn, vì vậy hãy chắc chắn thay thế toàn bộ các tệp trong từng thư mục mục tiêu.）   [root]   │   ├──[app/config/eccube]   ├──[app/DoctrineMigrations]   ├──[bin]   ├──[src]   ├──[html]   │   Thay thế thư mục vendor   Thư mục vendor không cần xóa, hãy ghi đè lên bằng thư mục vendor của phiên bản EC-CUBE đã nâng cấp.   （Nếu bạn sử dụng các plugin Web API hoặc Symfony bundle, việc xóa hoàn toàn thư mục vendor có thể gây ra lỗi trong các bước tiếp theo. Lệnh bin/console eccube:composer:require-already-installed trong bước (5) sẽ xóa các tệp không cần thiết trong thư mục vendor）   [root]   │   ├──[vendor]   │   5. Thay thế tệp riêng lẻ   Hãy kiểm tra các tệp cần thay thế từ dưới đây và ghi đè bằng các tệp mới nhất.      composer.json   composer.lock   package.json   package-lock.json   index.php   6. Cập nhật composer.json/composer.lock   Nếu bạn đã tự cài đặt các thư viện bên ngoài như packagist, hãy yêu cầu lại.   Ví dụ, nếu bạn đã cài đặt psr/http-message, hãy thực hiện lệnh dưới đây.   composer require psr/http-message --no-plugins --no-scripts   Nếu bạn sử dụng plugin với Symfony Bundle, hãy kiểm tra composer.json của plugin và cài đặt các thư viện phụ thuộc.   Ví dụ, đối với plugin API, hãy kiểm tra composer.json và cài đặt các thư viện phụ thuộc như dưới đây.   $ cat app/Plugin/Api42/composer.json ...   \"require\": {     \"ec-cube/plugin-installer\": \"^2.0\",     \"league/oauth2-server-bundle\": \"^0.5\",     \"nyholm/psr7\": \"^1.2\",     \"php-http/message-factory\": \"*\",     \"webonyx/graphql-php\": \"^14.0\"  $ composer require league/oauth2-server-bundle:^0.5 --no-plugins --no-scripts $ composer require nyholm/psr7:^1.2 --no-plugins --no-scripts $ composer require php-http/message-factory --no-plugins --no-scripts $ composer require webonyx/graphql-php:^14.0 --no-plugins --no-scripts   Hãy xóa bộ nhớ đệm bằng lệnh dưới đây.   rm -rf var bin/console cache:clear --no-warmup   Hãy thực hiện lệnh dưới đây.   bin/console eccube:composer:require-already-installed   6. Cập nhật schema/di chuyển   Sử dụng chức năng cập nhật schema và di chuyển để nâng cấp cơ sở dữ liệu.   Hãy thực hiện lệnh dưới đây.    ※ Có thể xảy ra lỗi sau khi thực hiện lệnh cập nhật schema.    In Eccube_KernelProdContainer.php line 1936: Attempted to call an undefined method named \"registerUniqueLoader\" of class \"Doctrine\\\\Common\\\\Annotations\\\\AnnotationRegistry\".   Lỗi này xảy ra do cấu hình cache của Symfony vẫn còn cũ mặc dù dữ liệu của Symfony đã thay đổi. Để giải quyết vấn đề này, cần xóa thư mục var chứa cache và các tệp log. Hãy xóa thư mục var bằng lệnh dưới đây và thực hiện lại cập nhật schema.   Xóa thư mục var   rm -rf var   Cập nhật schema   bin/console doctrine:schema:update --force --dump-sql   Di chuyển   bin/console doctrine:migrations:migrate   7. Tái tạo cache và các tệp khác   Tái tạo tệp autoload  composer dump-autoload   Tái tạo tệp proxy  bin/console eccube:generate:proxies   Tái tạo tệp bộ nhớ đệm  bin/console cache:warmup --env=prod   Xóa phiên làm việc  rm -rf var/sessions   8. Cập nhật tệp mẫu giao diện   Đối với từng phiên bản, cần cập nhật tệp mẫu giao diện (twig).   Từ “Quản lý nội dung” hoặc “Cài đặt cửa hàng &gt; Cài đặt email” trong giao diện quản lý, hãy chỉnh sửa trang/khối/mẫu email tương ứng.   Danh sách các tệp thay đổi từ 4.2.3 lên 4.3.0 như sau. Bạn có thể kiểm tra sự khác biệt của các thay đổi từ sự khác biệt.      src/Eccube/Resource/template/admin/Content/news_edit.twig   src/Eccube/Resource/template/admin/Order/index.twig   src/Eccube/Resource/template/admin/Order/shipping.twig   src/Eccube/Resource/template/admin/Product/category.twig   src/Eccube/Resource/template/admin/Product/class_category.twig   src/Eccube/Resource/template/admin/Product/class_name.twig   src/Eccube/Resource/template/admin/Product/csv_class_category.twig   src/Eccube/Resource/template/admin/Product/csv_class_name.twig   src/Eccube/Resource/template/admin/Product/product_class.twig   src/Eccube/Resource/template/admin/Setting/Shop/mail.twig   src/Eccube/Resource/template/admin/Setting/Shop/payment_edit.twig   src/Eccube/Resource/template/admin/Setting/Shop/shop_master.twig   src/Eccube/Resource/template/admin/Setting/System/system.twig   src/Eccube/Resource/template/admin/Store/plugin_table.twig   src/Eccube/Resource/template/admin/change_password.twig   src/Eccube/Resource/template/admin/default_frame.twig   src/Eccube/Resource/template/admin/error.twig   src/Eccube/Resource/template/admin/info.twig   src/Eccube/Resource/template/admin/notice_debug_mode.twig   src/Eccube/Resource/template/default/Block/auto_new_item.twig   src/Eccube/Resource/template/default/Block/google_analytics.twig   src/Eccube/Resource/template/default/Block/new_item.twig   src/Eccube/Resource/template/default/Cart/index.twig   src/Eccube/Resource/template/default/Shopping/alert.twig   src/Eccube/Resource/template/default/Shopping/shipping.twig   src/Eccube/Resource/template/default/default_frame.twig   9. Vô hiệu hóa chế độ bảo trì   Truy cập giao diện quản lý của EC-CUBE, từ “Quản lý nội dung” chọn “Quản lý bảo trì” và vô hiệu hóa chế độ bảo trì.   Hoặc, bạn có thể vô hiệu hóa chế độ bảo trì bằng cách xóa tệp “.maintenance” trong thư mục gốc của EC-CUBE.   Sự khác biệt   Bạn có thể kiểm tra sự khác biệt chi tiết từ 4.2.3 lên 4.3.0 từ liên kết dưới đây.   https://github.com/EC-CUBE/ec-cube/compare/4.2.3…4.3.0  ","categories": [],
        "tags": ["quickstart","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/update43",
        "teaser":null},{
        "title": "Di chuyển từ 4.0 lên 4.1",
        "excerpt":"Giải thích về di chuyển từ EC-CUBE 4.0 lên 4.1.   Tổng hợp các phần cần chuyển mã để EC-CUBE 4.1 tương thích với EC-CUBE bản chính và một số plugin chính thức.      Lộ trình EC-CUBE 4.1   Nhánh GitHub 4.1   Plugin Web API: Tương thích Symfony 4.4   Plugin Đánh giá sản phẩm: Tương thích Symfony 4.4   Tương thích Composer2.0   Cần thay đổi composer.json của plugin để tương thích với Composer 2.0.   name   ec-cube/&lt;PluginCode viết thường&gt;   PluginCode cần tương ứng với namespace của plugin và phải viết thường.   &lt;?php namespace Plugin\\ExamplePlugin;  // Với namespace trên, name trong composer.json sẽ là ec-cube/exampleplugin.   require   Cần bao gồm ec-cube/plugin-installer: \"~0.0.6 || ^2.0\"     \"require\": {     \"ec-cube/plugin-installer\": \"~0.0.6 || ^2.0\"   },   Ví dụ thay đổi composer.json   { -   \"name\": \"ec-cube/ExamplePlugin\", +   \"name\": \"ec-cube/exampleplugin\", -  \"version\": \"1.0.0\", +  \"version\": \"2.0.0\",   \"description\": \"Plugin mẫu\",   \"type\": \"eccube-plugin\",   \"require\": { -     \"ec-cube/plugin-installer\": \"~0.0.6\" +     \"ec-cube/plugin-installer\": \"~0.0.6 || ^2.0\"    },   \"extra\": {     \"code\": \"ExamplePlugin\"   } }   Xem chi tiết về nội dung sửa đổi tại Issue trên GitHub.   Tính đến ngày 09/12/2020, phía package-api của Owner’s Store mà EC-CUBE giao tiếp chưa hỗ trợ 4.1.   Việc kiểm tra cài đặt plugin trên 4.1 có thể thực hiện tương tự như trên 4.0 thông qua kiểm tra cài đặt qua Owner’s Store.   Tương thích Symfony4.4   Không thể bao quát hết các thay đổi trong Symfony4.4, nếu có vấn đề không được đề cập, hãy tham khảo tài liệu UPGRADE của Symfony.      UPGRADE-4.0.md   Ngoài ra, để duy trì tính tương thích giữa EC-CUBE4.0 và EC-CUBE4.1, có một số phần không sửa đổi các thông báo deprecation.   ※ Có thể xuất hiện thông báo User Deprecated: xxx trong log, nhưng không ảnh hưởng đến hoạt động.   Dù thực hiện sửa đổi này, EC-CUBE vẫn hoạt động trên cả Symfony3.4/4.4, ngoại trừ mục Lấy container trong mã kiểm tra.   Liên quan đến Form   Xác thực Form   Không thể gọi isValid() một mình. Hãy kiểm tra bằng isSubmitted() &amp;&amp; isValid().   - if ($form-&gt;isValid()) { + if ($form-&gt;isSubmitted() &amp;&amp; $form-&gt;isValid()) {      // do something...  }   FormExtension   Thêm phương thức getExtendedTypes.   Để duy trì tính tương thích với EC-CUBE4.0.x(Symfony3.4), cần giữ lại phương thức getExtendedType.       /**      * {@inheritdoc}      */     public function getExtendedType()     {         return EntryType::class;     } + +    /** +     * Return the class of the type being extended. +     */ +    public static function getExtendedTypes(): iterable +    { +        return [EntryType::class]; +    }   Liên quan đến Translator   message.[locale].yaml   Nếu sử dụng biến, cần đặt trong dấu nháy đơn.   - common.password_sample: 半角英数記号%min%〜%max%文字 + common.password_sample: '半角英数記号%min%〜%max%文字'   Liên quan đến Log   Cài đặt monolog   Nếu có ghi đè channels, hãy xóa.   monolog:     channels: ['sample_payment']     handlers:         sample_payment:             type: fingers_crossed             action_level: info             passthru_level: info             handler: sample_payment_rotating_file             channels: ['sample_payment'] -            channels: ['!event', '!doctrine']         sample_payment_rotating_file:             type: rotating_file             max_files: 60             path: '%kernel.logs_dir%/%kernel.environment%/sample_payment.log'             formatter: eccube.log.formatter.line             level: debug   Liên quan đến Container   Chỉ định interface khi injection   Khi sử dụng constructor injection hoặc method injection, nếu chỉ định class cụ thể, hãy chỉ định interface.   - public function __construct(Session $session) + public function __construct(SessionInterface $session)  - public function index(Request $request, $page_no = 1, Paginator $paginator) + public function index(Request $request, $page_no = 1, PaginatorInterface $paginator)   Hạn chế lấy dịch vụ từ container   Ngoại trừ một số dịch vụ (như doctrine), không thể lấy dịch vụ bằng $container-&gt;get(Hoge::class).   Hãy sử dụng injection hoặc thiết lập dịch vụ là public trong services.yaml.   ※ Tuy nhiên, nếu thay đổi thành public, sẽ ảnh hưởng đến hiệu suất. Nên sử dụng injection.   Ví dụ về sử dụng injection:   - - public function index() - { -     $customerRepository = $this-&gt;container-&gt;get(CustomerRepository::class); -     $customerRepository-&gt;find(1); - }  + + public function __construct(CustomerRepository $customerRepository) + { +     $this-&gt;customerRepository = $customerRepository; + } + + public function index() + { +     $this-&gt;customerRepository-&gt;find(1); + }   Ví dụ về services.yaml:   + services: +      Plugin\\SamplePayment\\Service\\HogeService +          public: true   Trong PluginManager, không thể sử dụng injection. Khi lấy Repository, hãy sử dụng mã sau.   - $pageRepository = $container-&gt;get(PageRepository::class); + $entityManager = $container-&gt;get('doctrine')-&gt;getManager(); + $pageRepository = $entityManager-&gt;getRepository(Page::class);   Mã kiểm tra   Lấy container   Container đã được thay đổi từ biến thành viên sang biến lớp.       public function setUp()     {         parent::setUp();  -       $this-&gt;helper = $this-&gt;container-&gt;get(OrderHelper::class); +       $this-&gt;helper = self::$container-&gt;get(OrderHelper::class);     }   Thông điệp xác thực   Một số thông điệp xác thực đã thay đổi. Các bài kiểm tra tự động kiểm tra thông điệp xác thực có thể cần sửa đổi. Không cần sửa mã sản phẩm.   Các thay đổi khác   Thay đổi cách lấy thông tin khách hàng khi mua hàng không đăng ký   Khi mua hàng không đăng ký, thông tin khách hàng được lưu trong session, nhưng định dạng lưu trữ đã thay đổi từ entity sang mảng. Nếu có tùy chỉnh để lấy hoặc thay đổi thông tin khách hàng khi mua hàng không đăng ký, cần sửa đổi.   - $NonMember = $this-&gt;session-&gt;get('eccube.front.shopping.nonmember') + $NonMember = $this-&gt;orderHelper-&gt;getNonMember('eccube.front.shopping.nonmember')   Xem chi tiết về sửa đổi do Serializable của Customer   Tương thích WebAPI   EC-CUBE 4.1 đóng gói Plugin Web API, cho phép sử dụng Web API khi cài đặt EC-CUBE.   Dữ liệu có thể lấy qua Web API theo danh sách cho phép, do đó, Entity được thêm bởi plugin không thể lấy mặc định.   Để cho phép lấy Entity được thêm, hãy định nghĩa component với tag eccube.api.allow_list.   ID dịch vụ nên có dạng [PluginCode].api.allow_list.   Ví dụ, trong plugin quản lý nhà sản xuất, thêm định nghĩa ArrayObject sau vào services.yaml của plugin.   services:     maker4.api.allow_list:         class: ArrayObject         tags: ['eccube.api.allow_list']         arguments:             - #                 Eccube\\Entity\\Product: ['maker_url', 'Maker']                 Plugin\\Maker4\\Entity\\Maker: ['id', 'name', 'sort_no', 'create_date', 'update_date']   Xem chi tiết tại tài liệu plugin Web API.   Các hàm và tính năng bị xóa khác   Application.php   Eccube\\Application đã bị xóa. Do đó, ServiceProvider cũng bị loại bỏ. Hãy sử dụng Container của Symfony.   Ví dụ thay đổi khi lấy session bằng app[‘session’]   Đến 4.0       public function index(Application $app, Request $request)     {         // Lấy session từ SessionServiceProvider         $session = $app['session'];     }    Từ 4.1 trở đi       use Symfony\\Component\\HttpFoundation\\Session\\SessionInterface;      /** @var SessionInterface */     protected $session      /**      * @param SessionInterface $session      */     public function __construct(SessionInterface $session)     {         $this-&gt;session = $session;     }      public function index(Request $request)     {         // Lấy session qua constructor injection         $session = $this-&gt;session;     }   Kiểm tra cài đặt plugin qua Owner’s Store   EC-CUBE 4.1 yêu cầu tương thích với Composer2. Do đó, endpoint khi cài đặt plugin qua Owner’s Store đã thay đổi. Nếu muốn kiểm tra trên EC-CUBE 4.1 beta3 trở về trước, có thể chuyển sang endpoint tương thích với Composer2 bằng cách thiết lập biến môi trường sau trong EC-CUBE. Nhánh 4.1 mới nhất trên GitHub không cần thực hiện điều này.   ECCUBE_PACKAGE_API_URL=https://package-api-c2.ec-cube.net  ","categories": [],
        "tags": ["quickstart","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/update-40-41",
        "teaser":null},{
        "title": "Di chuyển từ 4.1 lên 4.2",
        "excerpt":"Giải thích về di chuyển từ EC-CUBE 4.1 lên 4.2.   Tổng hợp các phần cần chuyển mã để EC-CUBE 4.2 tương thích với EC-CUBE bản chính và một số plugin chính thức.      Lộ trình EC-CUBE 4.2   Hỗ trợ Symfony5   Plugin Mail Magazine   Thay đổi mã plugin   4.2 là phiên bản không tương thích với 4.1.   Do không thể đồng tồn tại mã nguồn, cần triển khai như một plugin riêng biệt so với plugin hỗ trợ 4.0/4.1.   composer.json   Thay đổi mã plugin trong composer.json.   Dưới đây là ví dụ sửa đổi của plugin Mail Magazine.   { -  \"name\": \"ec-cube/mailmagazine4\", +  \"name\": \"ec-cube/mailmagazine42\",   \"version\": \"4.2.0\",   \"description\": \"Plugin Mail Magazine\",   \"type\": \"eccube-plugin\",   \"require\": {     \"ec-cube/plugin-installer\": \"~0.0.6 || ^2.0\"   },   \"extra\": { -    \"code\": \"MailMagazine4\" +    \"code\": \"MailMagazine42\"   } }   Thay đổi namespace   Thay đổi namespace để phù hợp với mã plugin.   Dưới đây là ví dụ sửa đổi của plugin Mail Magazine.   &lt;?php - namespace Plugin\\MailMagazine4; + namespace Plugin\\MailMagazine42;  use Eccube\\Common\\EccubeNav;  class MailMagazineNav implements EccubeNav {    Tương thích Symfony5.4   Không thể bao quát hết các thay đổi trong Symfony5.4, nếu có vấn đề không được đề cập, hãy tham khảo tài liệu UPGRADE của Symfony.      UPGRADE-5.0.md   Liên quan đến Form   FormExtension   Cần định nghĩa kiểu trả về của getExtendedTypes.       /**      * Return the class of the type being extended.      */ -    public static function getExtendedTypes() +    public static function getExtendedTypes(): iterable     {         return [EntryType::class];     }   Liên quan đến Repository   ManagerRegistry   Namespace của ManagerRegistry đã thay đổi.   Thay đổi thành Doctrine\\Persistence\\ManagerRegistry.   &lt;?php  namespace Plugin\\MailMagazine4\\Repository;  - use Doctrine\\Common\\Persistence\\ManagerRegistry; + use Doctrine\\Persistence\\ManagerRegistry;  use Eccube\\Repository\\AbstractRepository; use Plugin\\MailMagazine4\\Entity\\MailMagazineSendHistory; use Eccube\\Doctrine\\Query\\Queries;   Liên quan đến twig   Sử dụng if trong vòng lặp for   Không thể sử dụng if trong vòng lặp for. Hãy sử dụng filter.    - {% for f in searchForm if f.vars.eccube_form_options.auto_render %} + {% for f in searchForm|filter(f =&gt; f.vars.eccube_form_options.auto_render) %}    Liên quan đến SwiftMailer   Chuyển sang SymfonyMailer   Thư viện gửi mail đã chuyển từ SwiftMailer sang SymfonyMailer.   Nếu sử dụng trực tiếp SwiftMailer, hãy chuyển sang triển khai với SymfonyMailer.   -        $message = (new \\Swift_Message()) -            -&gt;setSubject('['.$this-&gt;BaseInfo-&gt;getShopName().'] '.$formData['mail_subject']) -            -&gt;setFrom([$this-&gt;BaseInfo-&gt;getEmail01() =&gt; $this-&gt;BaseInfo-&gt;getShopName()]) -            -&gt;setTo([$Order-&gt;getEmail()]) -            -&gt;setBcc($this-&gt;BaseInfo-&gt;getEmail01()) -            -&gt;setReplyTo($this-&gt;BaseInfo-&gt;getEmail03()) -            -&gt;setReturnPath($this-&gt;BaseInfo-&gt;getEmail04()) -            -&gt;setBody($formData['tpl_data']); +        $message = (new Email()) +            -&gt;subject('['.$this-&gt;BaseInfo-&gt;getShopName().'] '.$formData['mail_subject']) +            -&gt;from(new Address($this-&gt;BaseInfo-&gt;getEmail01(), $this-&gt;BaseInfo-&gt;getShopName())) +            -&gt;to($Order-&gt;getEmail()) +            -&gt;bcc($this-&gt;BaseInfo-&gt;getEmail01()) +            -&gt;replyTo($this-&gt;BaseInfo-&gt;getEmail03()) +            -&gt;returnPath($this-&gt;BaseInfo-&gt;getEmail04()) +            -&gt;text($formData['tpl_data']);   Tham khảo thêm sự khác biệt tại đây.   https://github.com/EC-CUBE/ec-cube/pull/5353/commits/ff6a6962736c87fe8e9b7427ba2cbebbb3000c43   Liên quan đến Event   Thay đổi chữ ký của EventDispatcher   Thứ tự tham số của $eventDispatcher-&gt;dispatch() đã thay đổi.   Nếu tự định nghĩa hook point, hãy thay đổi thứ tự tham số.    -        $this-&gt;eventDispatcher-&gt;dispatch(EccubeEvents::FRONT_ENTRY_INDEX_INITIALIZE, $event); +        $this-&gt;eventDispatcher-&gt;dispatch($event, EccubeEvents::FRONT_ENTRY_INDEX_INITIALIZE);    Liên quan đến tham số   Tham số env   Không thể sử dụng bool hoặc số trong tham số env.   Nếu sử dụng tham số env trong services.yaml, hãy thay đổi thành chuỗi.   parameters:  -    env(ECCUBE_FORCE_SSL): false +    env(ECCUBE_FORCE_SSL): '0'  -    env(ECCUBE_2FA_EXPIRE): 14 +    env(ECCUBE_2FA_EXPIRE): '14'   Mã kiểm tra   setUp/tearDown   Cần định nghĩa kiểu trả về cho phương thức setUp/tearDown.    -   setUp() +   setUp(): void  -   tearDown() +   tearDown(): void    Tương thích Bootstrap5   Đã cập nhật Bootstrap lên 5.0.   Dưới đây là một phần nội dung thay đổi. Xem chi tiết tại tài liệu dưới đây.   https://getbootstrap.jp/docs/5.0/migration/   Biến data có tiền tố bs   Các biến data sử dụng trong bootstrap như modal đã có tiền tố bs.    - data-keyword + data-bs-keyword  - data-dismiss  data-bs-dismiss  - data-toggle + data-bs-toggle    Nút đóng   Tên lớp của nút đóng đã thay đổi.    - .close  + .btn-close    text-right, text-left   Tên lớp căn phải, căn trái đã thay đổi.    - .text-left + .text-start  - .text-right + .text-end    Các thay đổi khác   Các hàm và tính năng bị xóa khác  ","categories": [],
        "tags": ["quickstart","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/update-41-42",
        "teaser":null},{
        "title": "Di chuyển từ 4.2 lên 4.3",
        "excerpt":"Giải thích về di chuyển từ EC-CUBE 4.2 lên 4.3.   Tổng hợp các phần cần chuyển mã để EC-CUBE 4.3 tương thích với EC-CUBE bản chính và một số plugin chính thức.      Lộ trình EC-CUBE 4.3   Tương thích Symfony6   Plugin Đánh giá sản phẩm: Tương thích Symfony 6   Plugin API: Tương thích Symfony 6   Plugin Mail Magazine: Tương thích Symfony 6   Về tính tương thích của plugin   EC-CUBE 4.2 và 4.3 đảm bảo tính tương thích của plugin.   Bằng cách thực hiện các sửa đổi trong tài liệu này, có thể chạy plugin trên cả hai phiên bản.   Nếu chạy plugin trên cả hai phiên bản, không cần thay đổi mã plugin trong composer.json.   Tương thích PHP8.3   Trong EC-CUBE 4.3, yêu cầu hệ thống PHP là 8.1〜8.3.   Các cảnh báo không khuyến khích trong PHP7.4〜8.1, đặc biệt là liên quan đến tham số kiểu, sẽ trở thành lỗi và không hoạt động.   Dưới đây là một ví dụ về lỗi.   $ bin/console PHP Fatal error:  Declaration of Eccube\\Kernel::getCacheDir() must be compatible with Symfony\\Component\\HttpKernel\\Kernel::getCacheDir(): string in /path/to/ec-cube/src/Eccube/Kernel.php on line 68 Symfony\\Component\\ErrorHandler\\Error\\FatalError^ {#45   #message: \"Compile Error: Declaration of Eccube\\Kernel::getCacheDir() must be compatible with Symfony\\Component\\HttpKernel\\Kernel::getCacheDir(): string\"   #code: 0   #file: \"./src/Eccube/Kernel.php\"   #line: 68   -error: array:4 [     \"type\" =&gt; 64     \"message\" =&gt; \"Declaration of Eccube\\Kernel::getCacheDir() must be compatible with Symfony\\Component\\HttpKernel\\Kernel::getCacheDir(): string\"     \"file\" =&gt; \"/path/to/ec-cube/src/Eccube/Kernel.php\"     \"line\" =&gt; 68   ] }    Nếu gặp lỗi như vậy, có thể giải quyết bằng cách chỉ định tham số kiểu cho tham số và giá trị trả về.   Dưới đây là ví dụ sửa lỗi trên.   class Kernel extends BaseKernel {  ...  -    public function getCacheDir() +    public function getCacheDir(): string     {         return $this-&gt;getProjectDir().'/var/cache/'.$this-&gt;environment;     }   Về các thay đổi không tương thích của PHP, hãy tham khảo hướng dẫn di chuyển trên php.net.      https://www.php.net/manual/ja/migration82.php   https://www.php.net/manual/ja/migration83.php   Tương thích Symfony6   Không thể bao quát hết các thay đổi trong Symfony6, nếu có vấn đề không được đề cập, hãy tham khảo tài liệu UPGRADE của Symfony.      UPGRADE-6.0.md   Ngoài ra, để duy trì tính tương thích giữa EC-CUBE4.2 và EC-CUBE4.3, có một số phần không sửa đổi các thông báo deprecation.   ※ Có thể xuất hiện thông báo User Deprecated: xxx trong log, nhưng không ảnh hưởng đến hoạt động.   Dù thực hiện sửa đổi này, EC-CUBE vẫn hoạt động trên cả EC-CUBE 4.2/4.3.   Liên quan đến Session   Bỏ injection của SessionInterface   Injection bằng SessionInterface đã bị loại bỏ.   Khi sử dụng Session, hãy lấy từ RequestStack.   - use Symfony\\Component\\HttpFoundation\\Session\\SessionInterface; + use Symfony\\Component\\HttpFoundation\\RequestStack;  ...  - public function index(SessionInterface $session) + public function index(RequestStack $requestStack) { +    $session = $requestStack-&gt;getSession();         $session-&gt;get('key'); }   Nếu không cần chạy trên EC-CUBE 4.2 (chỉ hỗ trợ 4.3), có thể sử dụng Eccube\\Session\\Session.   - use Symfony\\Component\\HttpFoundation\\Session\\SessionInterface; + use Eccube\\Session\\Session;  ...  - public function index(SessionInterface $session) + public function index(Session $session) {     $session-&gt;get('key'); }   Liên quan đến Container   Hạn chế lấy dịch vụ từ container   Khi lấy dịch vụ bằng $container-&gt;get(Hoge::class), cần chỉ định là service locator.   Ngoài ra, khi sử dụng container class, hãy sử dụng Psr\\Container\\ContainerInterface thay vì Symfony\\Component\\DependencyInjection\\ContainerInterface.   - use Symfony\\Component\\DependencyInjection\\ContainerInterface; + use Psr\\Container\\ContainerInterface;  ...  public function __construct(ContainerInterface $container) {     $this-&gt;customerRepository = $this-&gt;container-&gt;get(CustomerRepository::class); }    Ví dụ về services.yaml:   services     Eccube\\Controller\\SampleController:         arguments:             $container: !service_locator                 Eccube\\Repository\\CustomerRepository: '@Eccube\\Repository\\CustomerRepository'   Việc gọi dịch vụ trong PluginManager cũng bị ảnh hưởng bởi thay đổi này.   Có thể lấy dịch vụ từ container như sau.   // ManagerRegistory - $container-&gt;get('doctrine'); - $container-&gt;get(ManagerRegistry::class);  // EntityManager - $container-&gt;get('doctrine.orm.default_entity_manager'); - $container-&gt;get('doctrine.orm.entity_manager'); - $container-&gt;get(EntityManagerInterface::class);  // EccubeConfig - $container-&gt;get(EccubeConfig::class);   Thay đổi cách lấy tham số   Không thể lấy tham số bằng $container-&gt;getParameter('key').   Thay vào đó, hãy sử dụng Eccube\\Common\\EccubeConfig.   - use Symfony\\Component\\DependencyInjection\\ContainerInterface; + use Eccube\\Common\\EccubeConfig;   ...  - public function index(ContainerInterface $container) + public function index(EccubeConfig $eccubeConfig) { -    $projectDir = $container-&gt;getParameter('kernel.project_dir'); +    $projectDir = $eccubeConfig-&gt;get('kernel.project_dir'); }   Liên quan đến PasswordEncoder   Bỏ PasswordEncoder   PasswordEncoder đã bị loại bỏ, thay vào đó sử dụng PasswordHaser.   Khi sử dụng PasswordHaser để mã hóa mật khẩu, mã sẽ như sau.   - use Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface; + use Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface;  ...  public function __construct( -    EncoderFactoryInterface $encoderFactory, +    UserPasswordHasherInterface $passwordHasher ) { -    $this-&gt;encoderFactory = $encoderFactory; +    $this-&gt;passwordHasher = $passwordHasher; }  ...  - $encoder = $this-&gt;encoderFactory-&gt;getEncoder($Customer);  if ($Customer-&gt;getPlainPassword() !== $this-&gt;eccubeConfig['eccube_default_password']) { -    $Customer-&gt;setPassword($encoder-&gt;encodePassword($Customer-&gt;getPlainPassword(), $Customer-&gt;getSalt())); +    $Customer-&gt;setPassword($this-&gt;passwordHasher-&gt;hashPassword($Customer, $Customer-&gt;getPlainPassword())); }   Nếu tự triển khai PasswordEncoder, hãy thay đổi để sử dụng PasswordHasher như sau.   - class UserPasswordEncoder implements UserPasswordEncoderInterface + class UserPasswordEncoder   Plugin\\Api42\\EventListener\\UserResolveListener:     arguments:         - '@Eccube\\Security\\Core\\User\\MemberProvider' -        - '@Plugin\\Api42\\Security\\Core\\Encoder\\UserPasswordEncoder' +        - '@Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface'   Nếu thay thế bằng @Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface và hoạt động, có thể xóa PasswordEncoder.   Tự động cập nhật thuật toán mã hóa mật khẩu   Bằng cách sử dụng PasswordHaser, thuật toán mã hóa mật khẩu sẽ tự động cập nhật.   Kiểm tra thuật toán sử dụng sẽ được thực hiện khi người dùng đăng nhập, nếu cần cập nhật thuật toán, mật khẩu sẽ được mã hóa lại bằng thuật toán mới và lưu vào DB.   Nếu sử dụng thuật toán AUTH_MAGIC truyền thống của EC-CUBE, thuật toán sẽ được cập nhật khi đăng nhập. Thuật toán mới sẽ bao gồm giá trị salt trong mật khẩu đã mã hóa, do đó, cột salt trong dtb_member/customer sẽ không còn sử dụng.   Tham khảo thêm Password Hashing and Verification.   Mã kiểm tra   Không thể kiểm tra bằng expectOutputRegex   Khi kiểm tra phản hồi tải xuống csv bằng expectOutputRegex, có thể không hoạt động.   Có thể lấy nội dung xuất ra bằng $client-&gt;getInternalResponse()-&gt;getContent(), hãy sử dụng cách này.   ...  - $this-&gt;expectOutputRegex(\"/{$review-&gt;getTitle()}/\");  $this-&gt;client-&gt;request(     'POST',     $this-&gt;generateUrl('product_review_admin_product_review_download') );  $this-&gt;assertTrue($this-&gt;client-&gt;getResponse()-&gt;isSuccessful());  + $content = $this-&gt;client-&gt;getInternalResponse()-&gt;getContent(); + $content = mb_convert_encoding($content, 'UTF-8', 'SJIS-win'); // Nếu cần, chuyển đổi mã hóa + $this-&gt;assertMatchesRegularExpression(\"/{$review-&gt;getTitle()}/\", $content);   Muốn kiểm tra session   Nếu muốn kiểm tra giá trị session, static::getContainer()-&gt;get('session') không hoạt động.   Hãy sử dụng Eccube\\Tests\\Web\\AbstractWebTestCase::createSession.    - $session = static::getContainer()-&gt;get('session'); + $session = $this-&gt;createSession($this-&gt;client) $outPut = $session-&gt;getFlashBag()-&gt;get('eccube.admin.success');    Thông điệp xác thực   Một số thông điệp xác thực đã thay đổi. Các bài kiểm tra tự động kiểm tra thông điệp xác thực có thể cần sửa đổi. Không cần sửa mã sản phẩm.   Các thay đổi khác   Kiểm tra cài đặt plugin qua Owner’s Store   Endpoint khi cài đặt plugin qua Owner’s Store đã thay đổi.   Hiện tại (31/01/2024) chưa được triển khai, nhưng dự kiến sẽ là endpoint dưới đây.   ECCUBE_PACKAGE_API_URL=https://package-api-c2.ec-cube.net/v43   Thay đổi purchaseflow.yaml  Từ 4.3, định dạng của purchaseflow.yaml đã thay đổi. Thay đổi từ cách “thiết lập phương thức từ cha đến con” sang cách “thiết lập phương thức cho cha nào”. Ngoài ra, có thể thay đổi thứ tự thực thi trong purchaseflow bằng cách thiết lập priority. Xem chi tiết tại đây.  Ví dụ sửa đổi  Lấy ví dụ về thay đổi của ProductStatusValidator.  Dưới đây là định nghĩa trong 4.2.  # 4.2_purchaseflow.yaml eccube.purchase.flow.cart:     class: Eccube\\Service\\PurchaseFlow\\PurchaseFlow     calls:         - [setFlowType, ['cart']]         - [setItemValidators, ['@eccube.purchase.flow.cart.item_validators']]              eccube.purchase.flow.cart.item_validators:     class: Doctrine\\Common\\Collections\\ArrayCollection     arguments:         - #             - '@Eccube\\Service\\PurchaseFlow\\Processor\\ProductStatusValidator' # Kiểm tra trạng thái công khai của sản phẩm   Tiếp theo là định nghĩa trong 4.3.  # 4.3_purchaseflow.yaml eccube.purchase.flow.cart:     class: Eccube\\Service\\PurchaseFlow\\PurchaseFlow     calls:         - [ setFlowType, [ 'cart' ] ]  eccube.purchase.flow.item.validator.product.status.validator: # Kiểm tra trạng thái công khai của sản phẩm     class: Eccube\\Service\\PurchaseFlow\\Processor\\ProductStatusValidator     tags:         - { name: eccube.item.validator, flow_type: cart, priority: 900 }   Hỗ trợ cả hai phiên bản 4.2/4.3 trong plugin   Khi sử dụng purchase flow trong plugin và muốn hỗ trợ cả hai phiên bản 4.2/4.3, hãy làm theo hướng dẫn dưới đây.   Khi chỉ định bằng annotation   Các annotation như @CartFlow vẫn có thể sử dụng trong 4.3.   priority luôn là 0 và processor sẽ được thêm vào cuối danh sách như trước.   Khi chỉ định bằng tệp yaml   Nếu ghi đè cài đặt hiện có bằng tệp yaml, hãy chuyển sang cài đặt bằng tệp php và phân nhánh theo phiên bản EC-CUBE.   Dưới đây là ví dụ sửa đổi khi thực hiện SampleProcessor trước các processor hiện có.   SampleProcessor  &lt;?php  namespace Plugin\\Sample\\Service\\PurchaseFlow;  use Eccube\\Entity\\ItemInterface; use Eccube\\Service\\PurchaseFlow\\ItemValidator; use Eccube\\Service\\PurchaseFlow\\PurchaseContext;  class SampleProcessor extends ItemValidator {     protected function validate(ItemInterface $item, PurchaseContext $context)     {         dump(123);     } }   Cài đặt trong 4.2  # Plugin/Sample/Resource/config/services.yaml  eccube.purchase.flow.cart.item_validators:   class: Doctrine\\Common\\Collections\\ArrayCollection   arguments:     - #       - '@Plugin\\Sample\\Service\\PurchaseFlow\\SampleProcessor' # SampleProcessor       - '@Eccube\\Service\\PurchaseFlow\\Processor\\DeliverySettingValidator' # Kiểm tra cài đặt giao hàng       - '@Eccube\\Service\\PurchaseFlow\\Processor\\ProductStatusValidator' # Kiểm tra trạng thái công khai của sản phẩm       - '@Eccube\\Service\\PurchaseFlow\\Processor\\PriceChangeValidator' # Phát hiện thay đổi giá sản phẩm       - '@Eccube\\Service\\PurchaseFlow\\Processor\\StockValidator' # Kiểm tra tồn kho       - '@Eccube\\Service\\PurchaseFlow\\Processor\\SaleLimitValidator' # Kiểm tra giới hạn bán hàng       - '@Eccube\\Service\\PurchaseFlow\\Processor\\ClassCategoryValidator' # Kiểm tra trạng thái công khai của loại sản phẩm   Cài đặt hỗ trợ cả hai phiên bản 4.2/4.3   Xóa services.yaml và tạo services.php. Phân nhánh theo phiên bản EC-CUBE trong services.php.  # Plugin/Sample/Resource/config/services.php  &lt;?php  namespace Symfony\\Component\\DependencyInjection\\Loader\\Configurator;  use Doctrine\\Common\\Collections\\ArrayCollection; use Eccube\\Common\\Constant; use Plugin\\Sample\\Service\\PurchaseFlow\\SampleProcessor;  return function(ContainerConfigurator $containerConfigurator) {     $services = $containerConfigurator-&gt;services();      // 4.3     if (version_compare(Constant::VERSION, '4.3', '&gt;=')) {         $services             -&gt;set(SampleProcessor::class)             -&gt;tag('eccube.item.validator', ['flow_type' =&gt; 'cart', 'priority' =&gt; 2000]); // Thực hiện trước, priority lớn hơn các processor hiện có     // 4.2     } else {         $services             -&gt;set(SampleProcessor::class);          $services             -&gt;set('eccube.purchase.flow.cart.item_validators')             -&gt;class(ArrayCollection::class)             -&gt;args([[service('Plugin\\Sample\\Service\\PurchaseFlow\\SampleProcessor'), # SampleProcessor                 service('Eccube\\Service\\PurchaseFlow\\Processor\\DeliverySettingValidator'), # Kiểm tra cài đặt giao hàng                 service('Eccube\\Service\\PurchaseFlow\\Processor\\ProductStatusValidator'), # Kiểm tra trạng thái công khai của sản phẩm                 service('Eccube\\Service\\PurchaseFlow\\Processor\\PriceChangeValidator'), # Phát hiện thay đổi giá sản phẩm                 service('Eccube\\Service\\PurchaseFlow\\Processor\\StockValidator'), # Kiểm tra tồn kho                 service('Eccube\\Service\\PurchaseFlow\\Processor\\SaleLimitValidator'), # Kiểm tra giới hạn bán hàng                 service('Eccube\\Service\\PurchaseFlow\\Processor\\ClassCategoryValidator'), # Kiểm tra trạng thái công khai của loại sản phẩm             ]]);     } };  ","categories": [],
        "tags": ["quickstart","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/update-42-43",
        "teaser":null},{
        "title": "Lưu ý khi cập nhật lên 4.0.3",
        "excerpt":"Bối cảnh     Trong các phiên bản trước 4.0.2 của EC-CUBE, có lỗi trong tính toán liên quan đến đơn hàng, nhưng đã được sửa trong 4.0.3.   Do sửa lỗi này, sau khi cập nhật, cần sửa thông tin đơn hàng.   Nội dung ảnh hưởng   Về hiển thị tổng khi giảm giá      Do giảm giá như sử dụng điểm là giảm giá không chịu thuế, nên đúng ra phải được trừ từ tổng số tiền, vì vậy vị trí hiển thị đã được sửa.   Thay vì hiển thị giảm giá trong tổng số tiền như trước 4.0.2, đã sửa để hiển thị dưới tổng số tiền và tổng số tiền thanh toán.   Ngoài ra, để hỗ trợ thuế suất giảm, đã thay đổi để hiển thị tổng số tiền theo từng thuế suất dưới tổng số tiền. Về thuế suất, xem chi tiết tại đây.                  Hiển thị tổng trên màn hình trước 4.0.2       Hiển thị tổng trên màn hình từ 4.0.3 trở đi                                                        Hiển thị tổng trên màn hình quản lý/chi tiết đơn hàng trước 4.0.2       Hiển thị tổng trên màn hình quản lý/chi tiết đơn hàng từ 4.0.3 trở đi                                         Về giảm giá bằng plugin coupon      Trong plugin coupon trước phiên bản 4.0.4, khi sử dụng coupon, có lỗi hiển thị giảm giá là “chịu thuế” với “0%”.   Nếu bạn đang sử dụng plugin coupon trước 4.0.4, hãy cập nhật từ “Màn hình quản lý/Plugin” của EC-CUBE.   Đối với thông tin đơn hàng sử dụng plugin coupon trước 4.0.4, cần sửa dữ liệu sau khi cập nhật lên EC-CUBE 4.0.3.                  Hiển thị chi tiết đơn hàng với plugin coupon trước 4.0.4 trên màn hình quản lý                                  Cách sửa chi tiết đơn hàng đã đăng ký với plugin coupon (trước 4.0.4)      Để sửa chi tiết đã đăng ký với plugin coupon (trước 4.0.4) mà vẫn giữ là chịu thuế, có thể sửa bằng cách thiết lập “thuế suất” cho chi tiết.   Trong EC-CUBE 4.0.3, khi thêm chi tiết từ nút “Thêm chi tiết khác” trong chi tiết đơn hàng, có thể đăng ký giảm giá chịu thuế và không chịu thuế.   Để sửa thành giảm giá không chịu thuế, hãy xóa chi tiết đã đăng ký bằng coupon, sau đó thêm chi tiết mới từ “Thêm chi tiết khác”.                  Thêm chi tiết khác trong chi tiết đơn hàng trên màn hình quản lý                                 ","categories": [],
        "tags": [],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/update/4_0_3",
        "teaser":null},{
        "title": "Cài đặt lên máy chủ",
        "excerpt":"Trước khi cài đặt  Hãy kiểm tra xem bạn có đáp ứng yêu cầu hệ thống hay không.   Hướng dẫn cài đặt này không giải thích về cấu hình máy chủ, cấu hình phần mềm FTP, hoặc cách sử dụng chúng. Hãy tham khảo tài liệu của nhà cung cấp máy chủ của bạn khi cần thiết.     Sakura Internet: https://help.sakura.ad.jp/206054522/   Xserver: https://www.xserver.ne.jp/manual/man_ftp_setting.php   Bước tiếp theo     Chuẩn bị cơ sở dữ liệu     Chuẩn bị cơ sở dữ liệu  EC-CUBE sử dụng cơ sở dữ liệu MySQL hoặc PostgreSQL. Bạn cần tạo một cơ sở dữ liệu trống mới. Hãy tham khảo hướng dẫn của từng nhà cung cấp dịch vụ lưu trữ để biết cách tạo cơ sở dữ liệu.     Sakura Internet: https://help.sakura.ad.jp/360000225021/   Xserver: https://www.xserver.ne.jp/manual/man_db_setting.php   Sau khi tạo cơ sở dữ liệu, hãy ghi lại 4 thông tin sau:     Tên người dùng cơ sở dữ liệu            Ví dụ: eccube           Mật khẩu người dùng cơ sở dữ liệu            Ví dụ: ht4379reguhfdoj           Tên máy chủ cơ sở dữ liệu            Ví dụ: localhost           Tên cơ sở dữ liệu            Ví dụ: eccube_db           Thông tin kết nối cơ sở dữ liệu bị rò rỉ ra ngoài có thể dẫn đến rò rỉ thông tin cá nhân. Hãy quản lý cẩn thận.   Bước tiếp theo     Chuẩn bị tài khoản email     Chuẩn bị tài khoản email  EC-CUBE sẽ tự động gửi email như email cảm ơn và email đăng ký thành viên. Bạn cần có thông tin cấu hình của địa chỉ gửi email và máy chủ email. Hãy chuẩn bị thông tin tài khoản email theo hướng dẫn của dịch vụ email bạn sử dụng.   Thông tin cần thiết là     Địa chỉ email   Tên người dùng tài khoản email   Mật khẩu tài khoản email   Địa chỉ máy chủ email   Thông tin tài khoản email bị rò rỉ ra ngoài có thể dẫn đến rò rỉ thông tin cá nhân. Hãy quản lý cẩn thận.   Bước tiếp theo     Tải lên tệp mã nguồn EC-CUBE lên máy chủ     Tải lên tệp mã nguồn EC-CUBE lên máy chủ  Để cài đặt, cần phải có tệp mã nguồn của EC-CUBE được triển khai trên máy chủ.   Bạn có thể sử dụng phần mềm chuyển tệp như FileZilla, nhưng do số lượng tệp của EC-CUBE rất lớn, nên có thể gặp lỗi khi tải lên tất cả các tệp cùng một lúc. Vì vậy, chúng tôi khuyên bạn nên sử dụng EC-CUBE Downloader để giải nén tệp mã nguồn.   Bước tiếp theo     EC-CUBE Downloader   Tải lên tệp mã nguồn EC-CUBE lên máy chủ     EC-CUBE Downloader  EC-CUBE Downloader là phần mềm được phát triển bởi cộng đồng và có thể giải nén tệp mã nguồn của EC-CUBE một cách đơn giản.    Tải EC-CUBE Downloader từ đây và làm theo các bước sau:      Giải nén tệp master.zip.   Sao chép tệp dw.php từ thư mục đã giải nén vào thư mục của bạn trên máy chủ. Ví dụ: public_html/   Truy cập dw.php từ trình duyệt (chúng tôi khuyên nên sử dụng Google Chrome). Ví dụ: https://www.example.co.jp/dw.php   Nhấp vào “Bắt đầu tải xuống”.   Sau một lúc, màn hình cài đặt EC-CUBE sẽ xuất hiện.   Nếu màn hình cài đặt EC-CUBE xuất hiện, hãy tiếp tục đến Trình hướng dẫn cài đặt   Bước tiếp theo     Trình hướng dẫn cài đặt     Tải lên tệp mã nguồn EC-CUBE lên máy chủ  Nếu bạn đã sử dụng EC-CUBE Downloader, bạn có thể bỏ qua bước này.   Tải EC-CUBE 4 Package và giải nén nó.   Sử dụng phần mềm chuyển tệp như FileZilla để tải tệp lên máy chủ.  Lưu ý: Do số lượng tệp lớn, có thể gặp lỗi khi tải lên tất cả các tệp cùng một lúc. Nếu gặp lỗi, hãy tải lên từng phần.   Truy cập trình duyệt EC-CUBE từ địa chỉ:     Ví dụ: http://example.com/{EC-CUBE được tải lên thư mục}   Nếu màn hình cài đặt EC-CUBE xuất hiện, hãy tiếp tục đến Trình hướng dẫn cài đặt   Lưu ý: Thông tin kết nối FTP/SFTP bị rò rỉ ra ngoài có thể dẫn đến rò rỉ thông tin thẻ tín dụng và các thông tin cá nhân khác. Hãy quản lý cẩn thận.   Bước tiếp theo     Trình hướng dẫn cài đặt     Trình hướng dẫn cài đặt  EC-CUBE mã nguồn được giải nén sau đó, truy cập vào thư mục cài đặt để xem màn hình cài đặt. Hãy làm theo hướng dẫn cài đặt để hoàn thành cài đặt.   URL ví dụ của màn hình cài đặt: https://wwww.example.com/{EC-CUBE được tải lên thư mục/}/index.php/install/step1    Nhấp vào Tiếp tục để tiếp tục.   Kiểm tra quyền truy cập (quyền truy cập tệp)    Nhấp vào Tiếp tục để tiếp tục.     Cấu hình trang web      Thông tin cơ bản của cửa hàng      Tên cửa hàng            Nhập tên cửa hàng của bạn. Bạn có thể nhập bằng tiếng Nhật.           Email            Email này sẽ nhận thông báo đặt hàng từ hệ thống.           ID đăng nhập trang quản lý            ID đăng nhập để đăng nhập vào trang quản lý. Đây là người dùng có quyền cao nhất, vì vậy ID như “admin” hoặc các ID dễ đoán sẽ dẫn đến việc truy cập không hợp lệ và thông tin bị rò rỉ. Hãy tránh đặt ID này. Hãy đặt một chuỗi văn bản không có ý nghĩa.           Mật khẩu trang quản lý            Nhập mật khẩu để người dùng có quyền truy cập vào trang quản lý. Nếu bạn quên mật khẩu này, bạn sẽ không thể đăng nhập vào trang quản lý vì EC-CUBE không có chức năng đặt lại mật khẩu cho người dùng. Hãy nhập mật khẩu phức tạp và không có ý nghĩa như “test1234” hoặc “password”. Đây là rất nguy hiểm, hãy tránh đặt mật khẩu này.           Tên thư mục trang quản lý            Nhập URL để truy cập vào trang quản lý. Trang quản lý sẽ truy cập vào https://www.example.com/{EC-CUBE được cài đặt thư mục}/{tên thư mục trang quản lý}/  Hãy đặt tên thư mục này không giống như “admin” hoặc “dashboard” vì có thể bị đoán. Hãy đặt một chuỗi văn bản không có ý nghĩa.           Buộc trang web truy cập qua SSL            Trang web chỉ có thể truy cập được qua https://〜 Hãy đảm bảo thực hiện cấu hình SSL trên máy chủ trước khi bật chức năng này. Nếu không thực hiện cấu hình SSL, trang web sẽ không thể truy cập được.           Giới hạn truy cập trang quản lý đến IP sau đây            Giới hạn truy cập trang quản lý đến địa chỉ IP cố định. Nếu bạn đặt IP ở đây, chỉ có IP đó mới có thể truy cập vào trang quản lý. Lưu ý, điều này có thể làm mất đi tính tiện lợi khi truy cập từ điện thoại di động của bạn. Nếu bạn không có IP cố định, hãy không đặt IP này.           Lưu ý: Thông tin truy cập trang quản lý bị rò rỉ ra ngoài có thể dẫn đến rò rỉ thông tin cá nhân và các hành vi trốn tránh thanh toán. Hãy quản lý cẩn thận.   Cấu hình email  Nhập thông tin tài khoản email đã chuẩn bị ở Chuẩn bị tài khoản email   Lưu ý: Nếu bạn muốn gửi email từ máy chủ cài đặt EC-CUBE bằng cách sử dụng sendmail, bạn cần thực hiện cấu hình khác.   Nhấp vào Tiếp tục để tiếp tục.   Bước tiếp theo     Nhập thông tin cơ sở dữ liệu     Nhập thông tin cơ sở dữ liệu   Nhập thông tin cơ sở dữ liệu đã chuẩn bị ở Chuẩn bị cơ sở dữ liệu      Loại cơ sở dữ liệu            Chọn loại cơ sở dữ liệu đã chuẩn bị ở Chuẩn bị cơ sở dữ liệu. Đối với môi trường sản xuất, hãy sử dụng MySQL hoặc PostgreSQL.           Tên máy chủ cơ sở dữ liệu            Nếu máy chủ cơ sở dữ liệu của bạn cũng chạy MySQL, nó có thể là localhost hoặc 127.0.0.1.           Cổng cơ sở dữ liệu            Nếu máy chủ cơ sở dữ liệu của bạn không có đặc biệt, bạn không cần chỉ định nó.           Tên cơ sở dữ liệu            Nhập tên cơ sở dữ liệu đã chuẩn bị ở Chuẩn bị cơ sở dữ liệu. Đối với MySQL và PostgreSQL, đây không phải là tên cơ sở dữ liệu như “eccube_db”.           Tên người dùng            Đây không phải là ID người dùng trang quản lý như “eccube” mà là ID người dùng cơ sở dữ liệu đã chuẩn bị ở Chuẩn bị cơ sở dữ liệu.           Mật khẩu            Đây không phải là mật khẩu đăng nhập trang quản lý như “eccube” mà là mật khẩu của người dùng cơ sở dữ liệu đã chuẩn bị ở Chuẩn bị cơ sở dữ liệu.           Nhấp vào Tiếp tục để tiếp tục.   Bước tiếp theo     Khởi tạo cơ sở dữ liệu     Khởi tạo cơ sở dữ liệu     Đăng ký dữ liệu khởi tạo cơ sở dữ liệu.   Nhấp vào Tiếp tục để tiếp tục.   Bước tiếp theo     Hoàn thành cài đặt     Hoàn thành cài đặt     Chúc mừng bạn! Nếu màn hình này xuất hiện, cài đặt đã hoàn thành. Hãy đăng nhập vào trang quản lý để thêm thông tin cửa hàng và đăng ký hàng hóa, chuẩn bị mở cửa hàng của bạn.   Cách sử dụng trang quản lý được hướng dẫn ở đây.   Nhấp vào Hiển thị trang quản lý để chuyển hướng đến trang đăng nhập trang quản lý. Hãy đăng nhập vào trang quản lý bằng thông tin người quản lý đã nhập ở Thông tin cơ bản của cửa hàng   Nếu bạn không thể đăng nhập, có khả năng bạn đã quên mật khẩu hoặc ID đăng nhập, vì vậy hãy xóa .env của thư mục cài đặt và xóa cơ sở dữ liệu để thực hiện lại quy trình cài đặt.     Lỗi thường gặp khi cài đặt   Dưới đây là những điểm mà người mới bắt đầu thường gặp phải, vì vậy hãy kiểm tra:   Nếu có lỗi khác, hãy tìm kiếm trên Cộng đồng phát triển hoặc hỏi câu hỏi trên đó.   Ngoài ra, hãy đến các buổi học thực hành được tổ chức tại các nơi khác nhau Nhóm người dùng để nghe.   Không thể kết nối đến cơ sở dữ liệu      Máy chủ cơ sở dữ liệu không khởi động            Hãy khởi động lại máy chủ cơ sở dữ liệu.           Thông tin cơ sở dữ liệu bị sai            Hãy kiểm tra lại tên máy chủ, tên người dùng, mật khẩu và tên cơ sở dữ liệu.           Vấn đề mạng            Hãy kiểm tra xem máy chủ cài đặt EC-CUBE có thể kết nối đến máy chủ cơ sở dữ liệu hay không.           Lỗi quyền truy cập (quyền truy cập tệp)  Hãy xem đây để kiểm tra quyền truy cập.   Khác      PHP không phù hợp/PHP không có các module cần thiết            Hãy kiểm tra yêu cầu hệ thống. EC-CUBE hoạt động cần PHP Ver.7.1 trở lên.          ","categories": [],
        "tags": ["quickstart","install"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/quickstart/web-installer",
        "teaser":null},{
        "title": "Tổng hợp các ví dụ tuỳ biến",
        "excerpt":"     Thêm video YouTube vào trang chi tiết sản phẩm  ","categories": [],
        "tags": ["customize","sample"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/reverse-lookup/sample-code",
        "teaser":null},{
        "title": "Thêm video YouTube vào trang chi tiết sản phẩm",
        "excerpt":"Thêm video YouTube vào trang chi tiết sản phẩm      Tạo ProductTrait   Tạo proxy và cập nhật DB schema   Thêm thẻ youtube vào detail.twig   Tạo ProductTrait   Có thể mở rộng field của ProductEntity bằng trait và annotation @EntityExtension. Việc này cho phép tạo Proxy class mà không cần kế thừa, giúp nhiều plugin hoặc tuỳ biến cùng mở rộng mà không xung đột.   &lt;?php  namespace Customize\\Entity;  use Doctrine\\ORM\\Mapping as ORM; use Eccube\\Annotation\\EntityExtension;  /**   * @EntityExtension(\"Eccube\\Entity\\Product\")  */ trait ProductTrait {     /**      * @ORM\\Column(type=\"string\", nullable=true)      */     public $youtube_url; }   Tham số của annotation @EntityExtension là class muốn áp dụng trait. Trong trait, định nghĩa các field muốn thêm. Dùng annotation của Doctrine ORM như @ORM\\Column để định nghĩa DB.   Hiển thị form trên quản trị   Nếu thêm annotation @FormAppend vào field mở rộng bằng @EntityExtension, form sẽ tự động sinh ra.   &lt;?php  namespace Customize\\Entity;  use Doctrine\\ORM\\Mapping as ORM; use Eccube\\Annotation as Eccube; use Symfony\\Component\\Validator\\Constraints as Assert;  /**  * @Eccube\\EntityExtension(\"Eccube\\Entity\\Product\")  */ trait ProductTrait {     /**      * @ORM\\Column(type=\"string\", nullable=true)      * @Eccube\\FormAppend(      *     auto_render=true,      *     type=\"\\Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType\",      *     options={      *          \"required\": false,      *          \"label\": \"YouTube URL\"      *     })      */     public $youtube_url;      /**      * Không bắt buộc nhưng nên có      */     public function getYoutubeUrl()     {         return $this-&gt;youtube_url;     }      /**      * Không bắt buộc nhưng nên có      */     public function setYoutubeUrl($url = null)     {         $this-&gt;youtube_url = $url;         return $this;     } }    Khi thêm annotation @FormAppend, form của field sẽ tự động được thêm vào các form sử dụng entity đó. Nếu muốn kiểm tra dữ liệu nhập, có thể dùng các annotation chuẩn của Symfony như @NotBlank.   Nếu muốn tuỳ biến form chi tiết, hãy dùng auto_render=true và chỉ định form_theme, type, option.   Tạo proxy và cập nhật DB schema   Sau khi tạo trait, chạy lệnh bin/console eccube:generate:proxies để sinh Proxy class.   bin/console eccube:generate:proxies   Sau khi sinh Proxy, chạy lệnh bin/console doctrine:schema:update để cập nhật DB.   ## Xoá cache để nhận Proxy mới bin/console cache:clear --no-warmup  ## Xem trước SQL bin/console doctrine:schema:update --dump-sql  ## Thực thi SQL bin/console doctrine:schema:update --dump-sql --force   Sau đó, form nhập URL YouTube sẽ tự động xuất hiện trên quản trị.      Thêm thẻ youtube vào detail.twig   Thêm thẻ YouTube vào vị trí muốn hiển thị trong template Prdoduct/detail.twig.     Hãy kiểm tra biến youtube_url đã được định nghĩa chưa, chỉ hiển thị thẻ YouTube khi có giá trị.   Kết quả hiển thị ở front sẽ như sau.     ","categories": [],
        "tags": ["core","entity","product"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/reverse-lookup/sample-code/add-youtube-to-product-detail",
        "teaser":null},{
        "title": "Tips",
        "excerpt":"  Tại đây tổng hợp các tips hữu ích khi gặp khó khăn trong quá trình phát triển.   Thủ thuật phát triển   Muốn debug khi phát triển   Bật chế độ debug sẽ rất tiện lợi.   Chế độ debug   Muốn kiểm tra nội dung object khi phát triển   Bật debug mode và chèn hàm dump vào source, có thể kiểm tra từ thanh công cụ Symfony.   // Chèn vào source  dump([instance object muốn kiểm tra]);      Gặp lỗi trắng trang!   Có thể do nhiều nguyên nhân (core, server, …), trước tiên hãy kiểm tra log của core.   [Thư mục gốc EC-CUBE]/var/log   Muốn kiểm tra nội dung email gửi đi khi phát triển   Dùng MailCatcher rất tiện.   MailCatcher   Liên quan DB   Muốn thêm cột vào bảng   Sau khi sửa Entity, hãy chạy lệnh update schema sau.   $ cd {đường dẫn EC-CUBE} $ bin/console doctrine:schema:update --force --dump-sql   Đã chạy lệnh update schema nhưng bảng chưa thay đổi   Có thể cache của Doctrine còn sót lại. Hãy xoá cache bằng lệnh sau.   $ cd {đường dẫn EC-CUBE} $ rm -rf var/cache   Dữ liệu ngày giờ trong bảng bị lệch?   Hãy đọc tài liệu về cấu hình timezone của core và DB.   Timezone   Muốn thêm dữ liệu vào bảng khi cài mới hoặc nâng cấp core?   Khi nâng cấp core   Cần thêm file migration.  File migration cũng sẽ chạy khi cài mới, nên cần tránh trùng dữ liệu.      File migration được quản lý trong bảng migration_versions.  Cột version sẽ lưu tên file migration (phần ngày giờ).   Ví dụ file migration   Khi cài mới core   Cần thêm record vào file csv.   Import CSV  ","categories": [],
        "tags": ["tips"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/reverse-lookup/tips",
        "teaser":null},{
        "title": "Hướng dẫn bảo mật EC-CUBE 4",
        "excerpt":"Hướng dẫn bảo mật EC-CUBE 4   Tổng quan   Mục đích  Tài liệu này là hướng dẫn bảo mật dành cho lập trình viên phát triển EC-CUBE hoặc tuỳ biến EC-CUBE. Làm theo hướng dẫn này sẽ giúp bạn tích hợp các biện pháp phòng chống lỗ hổng ngay từ giai đoạn phát triển, duy trì và nâng cao chất lượng bảo mật.   Đối tượng  Chủ yếu dành cho lập trình viên phát triển EC-CUBE hoặc tuỳ biến EC-CUBE.   Phạm vi  Tài liệu này tập trung vào các lưu ý khi lập trình trong giai đoạn phát triển EC-CUBE hoặc tuỳ biến EC-CUBE. Không bao gồm hướng dẫn cài đặt, vận hành, bảo trì hệ thống.   Lưu ý phòng chống lỗ hổng   Dựa trên Cách xây dựng website an toàn, tài liệu này tổng hợp các lưu ý khi lập trình EC-CUBE để phòng chống từng loại lỗ hổng. Đối với giải thích chi tiết về lỗ hổng và các lưu ý chung khi phát triển web, hãy tham khảo tài liệu gốc “Cách xây dựng website an toàn”. Các trích dẫn từ tài liệu gốc sẽ được ghi chú rõ.   SQL Injection   SQL Injection   [Giải pháp triệt để] Luôn sử dụng placeholder khi xây dựng câu lệnh SQL     SQL thường có cơ chế sử dụng placeholder để xây dựng câu lệnh. Trong mẫu SQL, đặt ký hiệu (placeholder) tại vị trí biến, sau đó gán giá trị thực vào placeholder bằng xử lý tự động. So với việc nối chuỗi để xây dựng SQL, sử dụng placeholder giúp loại bỏ nguy cơ SQL Injection.  Việc gán giá trị vào placeholder gọi là binding. Có hai kiểu binding: binding tĩnh (prepared statement) và binding động (thư viện DB xử lý escape và gán giá trị). Cả hai đều giúp loại bỏ nguy cơ SQL Injection, nhưng binding tĩnh an toàn hơn về mặt nguyên lý. Xem thêm Cách gọi SQL an toàn mục 3.2.    EC-CUBE sử dụng O/R Mapper nên không có chỗ viết SQL trực tiếp.  Trừ trường hợp đặc biệt, luôn khuyến nghị dùng O/R Mapper.  Khi tuỳ biến, lưu ý 2 điểm sau:   1. Lưu ý khi dùng QueryBuilder      Ví dụ sai:   $qb = $this-&gt;createQueryBuilder('p')     -&gt;where('p.price &gt; '. $price)     -&gt;orderBy('p.price', 'ASC');   Nếu $price chứa chuỗi như 1 or 1=1 thì sẽ trả về toàn bộ bản ghi.      Ví dụ đúng:   $qb = $this-&gt;createQueryBuilder('p')     -&gt;where('p.price &gt; :price')     -&gt;setParameter('price', $price)     -&gt;orderBy('p.price', 'ASC');   Dùng setParameter để giảm rủi ro SQL Injection.   2. Lưu ý khi dùng dbal   Không dùng cú pháp như sau. Nếu $price chứa chuỗi như 1 or 1=1 sẽ trả về toàn bộ bản ghi, thậm chí có thể xem/sửa/xoá dữ liệu bảng khác.      Ví dụ sai:   $conn = $this-&gt;getEntityManager()-&gt;getConnection();  $sql = \"     SELECT * FROM product p     WHERE p.price &gt; $price     ORDER BY p.price ASC     \"; $stmt = $conn-&gt;prepare($sql); $resultSet = $stmt-&gt;executeQuery();  // returns an array of arrays (i.e. a raw data set) return $resultSet-&gt;fetchAllAssociative();      Ví dụ đúng:   $conn = $this-&gt;getEntityManager()-&gt;getConnection();  $sql = '     SELECT * FROM product p     WHERE p.price &gt; :price     ORDER BY p.price ASC     '; $stmt = $conn-&gt;prepare($sql); $resultSet = $stmt-&gt;executeQuery(['price' =&gt; $price]);   ※ Khi dùng O/R Mapper, nếu dùng sai cách sẽ không đảm bảo an toàn. Hãy chú ý cách sử dụng.   [Giải pháp triệt để] Nếu phải nối chuỗi để xây dựng SQL, hãy escape đúng cách bằng API của DB     Nếu phải nối chuỗi để xây dựng SQL, hãy đảm bảo các giá trị biến được escape đúng cách (dùng hàm của DB). Nếu là số, hãy ép kiểu số. Xem thêm Cách gọi SQL an toàn mục 4.1.    EC-CUBE sử dụng O/R Mapper nên không có chỗ viết SQL trực tiếp. Khi tuỳ biến, lưu ý 2 điểm sau:   1. Lưu ý khi dùng QueryBuilder   Khi dùng Symfony, hãy luôn dùng placeholder như trên. Ngoài ra, có thể wrap trong function để giới hạn kiểu dữ liệu.   public function findAllGreaterThanPrice(int $price, bool $includeUnavailableProducts = false): array {     $qb = $this-&gt;createQueryBuilder('p')         -&gt;where('p.price &gt; :price')         -&gt;setParameter('price', $price)         -&gt;orderBy('p.price', 'ASC');      if (!$includeUnavailableProducts) {         $qb-&gt;andWhere('p.available = TRUE');     }      $query = $qb-&gt;getQuery();      return $query-&gt;execute(); }   2. Lưu ý khi dùng dbal   Cũng nên wrap trong function để giới hạn kiểu dữ liệu.   public function findAllGreaterThanPrice(int $price): array {     $conn = $this-&gt;getEntityManager()-&gt;getConnection();      $sql = '         SELECT * FROM product p         WHERE p.price &gt; :price         ORDER BY p.price ASC         ';     $stmt = $conn-&gt;prepare($sql);     $resultSet = $stmt-&gt;executeQuery(['price' =&gt; $price]);      return $resultSet-&gt;fetchAllAssociative(); }   ※ Khi dùng O/R Mapper, nếu dùng sai cách sẽ không đảm bảo an toàn. Hãy chú ý cách sử dụng.   [Giải pháp triệt để] Không truyền trực tiếp SQL vào tham số từ bên ngoài     Không chỉ với EC-CUBE, tuyệt đối không truyền trực tiếp SQL vào hidden parameter hoặc các tham số từ bên ngoài. Nếu làm vậy, chỉ cần thay đổi giá trị tham số là có thể thực thi SQL tuỳ ý.    Khi tuỳ biến, có thể tạo plugin cho phép thực thi SQL trực tiếp, hãy đặc biệt lưu ý.   [Biện pháp bổ sung] Không hiển thị thông báo lỗi DB ra trình duyệt     Nếu thông báo lỗi DB chứa thông tin về loại DB, nguyên nhân lỗi, câu lệnh SQL… thì đây là thông tin hữu ích cho kẻ tấn công. Không hiển thị lỗi DB ra trình duyệt.    EC-CUBE chỉ hiển thị lỗi khi ở chế độ dev nên không vấn đề.   [Biện pháp bổ sung] Chỉ cấp quyền tối thiểu cho tài khoản DB     Tài khoản DB dùng cho web app chỉ nên có quyền tối thiểu cần thiết.    EC-CUBE: hãy cấu hình trên server.   … (Tiếp tục dịch các phần còn lại tương tự, giữ nguyên cấu trúc markdown, bảng, code, chú thích, v.v.)  ","categories": [],
        "tags": ["security-guideline","coding"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/security-guideline/coding",
        "teaser":null},{
        "title": "Tăng cường bảo mật khi phát triển plugin",
        "excerpt":"Về tăng cường bảo mật khi phát triển plugin   Tài liệu này giải thích các chức năng giúp tăng cường bảo mật khi phát triển plugin.   Khi phát triển plugin, khuyến nghị tích hợp các chức năng sau để tăng cường bảo mật.      Throttling cho các thao tác quan trọng   Throttling cho các thao tác quan trọng   Từ EC-CUBE 4.2.1, chức năng throttling đã được tích hợp vào core EC-CUBE.   Chức năng này cũng có thể mở rộng từ plugin hoặc Customize.   Khi phát triển plugin có thao tác quan trọng, khuyến nghị tích hợp chức năng throttling.   Cách triển khai   Ví dụ dưới đây minh hoạ cách thêm throttling vào chức năng thay đổi thông tin thẻ trong plugin thanh toán mẫu.   Thêm cấu hình vào services.yaml của plugin.   app/Plugin/SamplePayment42/Resource/config/services.yaml   # Định nghĩa throttling eccube:   rate_limiter:     sample_payment_mypage_card_info:       # Chỉ định route thực thi       route: sample_payment_mypage_card_info       # Chỉ định method thực thi. Mặc định là POST.       method: ['POST']       # Kiểu kiểm soát throttling. Có thể là ip hoặc customer.       type: ['ip', 'customer']       # Số lần thử tối đa       limit: 5       # Khoảng thời gian       interval: '60 minutes'   Như vậy là xong.   Hãy thử truy cập vượt quá số lần cho phép để xác nhận bị từ chối truy cập.   Tham khảo chi tiết tại chức năng throttling.   ","categories": [],
        "tags": ["security-guideline","plugin","security"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/security-guideline/plugin",
        "teaser":null},{
        "title": "Cấu trúc thư mục và tệp tin",
        "excerpt":"Đặc điểm      Dựa trên Cấu trúc thư mục của Symfony3, EC-CUBE 4 có cấu trúc riêng biệt.   Các thư mục chính và vai trò   app/      Chứa các tệp cấu hình, plugin, mã PHP tuỳ biến EC-CUBE, v.v… Đây là nơi chứa các tệp thay đổi theo từng ứng dụng.   app ├── Customize   Chứa mã PHP tuỳ biến ├── Plugin      Chứa các plugin đã cài đặt ├── PluginData  Chứa các tệp do plugin sử dụng ├── config      Chứa các tệp cấu hình ├── proxy       Chứa các class Proxy được sinh ra bởi chức năng mở rộng Entity └── template    Chứa các tệp template bị ghi đè   bin/      Chứa các tệp thực thi phục vụ phát triển như bin/console.   html/      Chứa các tệp tài nguyên (js, css, hình ảnh, …)   src/      Chứa mã nguồn chính của EC-CUBE, bao gồm các tệp php và Twig   tests/      Chứa mã kiểm thử   var/      Chứa các tệp sinh ra khi chạy hệ thống như cache, log   vendor/      Chứa các thư viện bên thứ ba phụ thuộc  ","categories": [],
        "tags": ["spec","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/spec_directory-structure",
        "teaser":null},{
        "title": "Liên quan đến đơn hàng",
        "excerpt":"Quy trình xử lý trạng thái đơn hàng      Tham khảo: Triển khai State Machine cho đơn hàng #3325   So sánh với phiên bản 3                  ID       3.x  mtb_order_status (Hiển thị phía quản trị)       3.x  mtb_customer_order_status (Hiển thị phía khách)       4.x  mtb_order_status (Hiển thị phía quản trị)       4.x mtb_customer_order_status (Hiển thị phía khách)                       1       Tiếp nhận mới       Đã nhận đơn hàng       Tiếp nhận mới       Đã nhận đơn hàng                 2       Chờ thanh toán       Chờ thanh toán       (Bỏ qua)       (Bỏ qua)                 3       Huỷ đơn       Huỷ đơn       Huỷ đơn hàng       Huỷ đơn hàng                 4       Đang đặt hàng       Đã nhận đơn hàng       Đang xử lý       Đã nhận đơn hàng                 5       Đã giao hàng       Đã giao hàng       Đã giao hàng       Đã giao hàng                 6       Đã thanh toán       Đã nhận đơn hàng       Đã thanh toán       Đã nhận đơn hàng                 7       Đang xử lý thanh toán       Đơn chưa hoàn tất       Đang xử lý thanh toán       Đã nhận đơn hàng                 8       Đang xử lý mua hàng       Đơn chưa hoàn tất       Đang xử lý mua hàng       Đơn chưa hoàn tất                 9       (Không có)       (Không có)       Trả hàng       Trả hàng              Để thuận tiện cho việc di chuyển dữ liệu, hạn chế thay đổi ID.   4: Đang đặt hàng được gộp thành 4: Đang xử lý.   2: Chờ thanh toán bị xoá. Trạng thái này trước đây dùng cho các phương thức thanh toán liên kết chờ xác nhận thanh toán. Trạng thái này sẽ được xử lý bằng 7: Đang xử lý thanh toán. Đối với chuyển khoản ngân hàng hoặc chờ thanh toán trước khi giao hàng sẽ xử lý ở 1: Tiếp nhận mới.   3: Huỷ đơn đổi thành 3: Huỷ đơn hàng. Dùng khi huỷ trước khi giao hàng (do có thêm trạng thái trả hàng nên đổi tên cho dễ hiểu).   Thêm mới 9: Trả hàng.   Luồng trạng thái chính:   “Đang xử lý mua hàng” → “Đang xử lý thanh toán” → “Tiếp nhận mới” → “Đã thanh toán” hoặc “Đang xử lý” → “Đã giao hàng” → Nếu có huỷ sau khi giao thì chuyển sang “Trả hàng”   Xử lý trạng thái khi huỷ đơn/ trả hàng   Huỷ đơn hàng   Nếu huỷ trước khi giao hàng, chọn huỷ đơn sẽ hoàn lại tồn kho và điểm thưởng.   Khi đã chọn “Đã giao hàng” thì không thể chọn “Huỷ đơn hàng” nữa.   Trả hàng   Sau khi giao hàng, nếu có trả hàng thì chọn trả hàng. Khi trả hàng sẽ không hoàn lại tồn kho và điểm thưởng.   Quy tắc tính phí   Sơ đồ ER các bảng liên quan đến đơn hàng      Những thay đổi chính so với phiên bản 3      dtb_shipment_item đổi thành dtb_order_item.   dtb_order_detail bị loại bỏ.   Quan hệ giữa các bảng đổi thành: dtb_order 1:N dtb_order_item N:1 dtb_shipping.   Ngoài sản phẩm, các mục như phí vận chuyển, phí xử lý, giảm giá… cũng được quản lý như một dòng chi tiết trong dtb_order_item.   Cách tính toán   Tính tổng số tiền thanh toán dựa trên thuộc tính của từng dòng chi tiết đơn hàng. Lưu ý cách tính sẽ khác nhau tuỳ thuộc vào thuộc tính, như ví dụ dưới đây.   Dòng sản phẩm được đăng ký với giá chưa thuế, nên khi tính tổng sẽ cộng thêm phần thuế.   Tổng dòng = (Đơn giá sản phẩm x Thuế suất) x Số lượng   Dòng phí vận chuyển được đăng ký với giá đã bao gồm thuế, nên khi tính tổng không cộng thêm thuế.   Tổng dòng = Đơn giá vận chuyển x Số lượng   Tham khảo: #3420 Kết quả tính toán theo loại dòng chi tiết   Thuộc tính dòng chi tiết đơn hàng   Phân loại dòng chi tiết                  ID       name       Ghi chú                       1       Sản phẩm                         2       Phí vận chuyển                         3       Phí xử lý                         4       Giảm giá       Chủ yếu dùng cho giảm giá sản phẩm. Có tính thuế.                 5       Thuế       Dùng khi đánh thuế cho toàn bộ đơn hàng.                 6       Giảm giá điểm       Dùng cho giảm giá bằng điểm thưởng. Không tính thuế.           Phân loại thuế                  ID       name       Ghi chú                       1       Có thuế                         2       Không thuế       Giảm giá bằng điểm, v.v.                 3       Miễn thuế       Chuyển nhượng phiếu quà tặng, v.v.           Phân loại hiển thị thuế                  ID       name       Ghi chú                       1       Chưa thuế       Đăng ký với giá chưa thuế (sản phẩm, v.v.)                 2       Đã bao gồm thuế       Đăng ký với giá đã bao gồm thuế (phí vận chuyển, v.v.)           Tính điểm thưởng   Tính toán khi sử dụng điểm thưởng   Số tiền giảm giá bằng điểm = Số điểm sử dụng * Tỷ lệ quy đổi điểm   Làm tròn xuống phần lẻ. Phân loại thuế là không thuế.   Tính toán khi cộng điểm thưởng   Điểm thưởng được tính trên dòng sản phẩm.   Điểm cộng = Đơn giá sản phẩm (chưa thuế) * Tỷ lệ cộng điểm * Số lượng   Nếu có sử dụng điểm thưởng, số điểm giảm giá sẽ bị trừ đi.   Điểm trừ = Số tiền giảm giá bằng điểm * Tỷ lệ cộng điểm * Số lượng   Tổng điểm cộng và điểm trừ là tổng điểm cuối cùng được cộng cho đơn hàng đó.   Tính điều kiện miễn phí vận chuyển   Khi thiết lập điều kiện miễn phí vận chuyển, hệ thống sẽ tính tổng giá trị sản phẩm (đã bao gồm thuế) cho từng địa chỉ nhận hàng để xác định điều kiện miễn phí vận chuyển.   Ví dụ: Điều kiện miễn phí vận chuyển: 3,000 yên                  Địa chỉ nhận hàng       Tổng giá trị sản phẩm       Được miễn phí vận chuyển                       Địa chỉ A       2,900       ×                 Địa chỉ B       3,200       ○           Thiết lập thuế tiêu thụ   Về thiết lập thuế suất theo sản phẩm   Có thể thiết lập các tuỳ chọn sau:      Thiết lập thuế suất trên màn hình đăng ký sản phẩm (sản phẩm không có phân loại)   Thiết lập thuế suất trên màn hình đăng ký phân loại sản phẩm (sản phẩm có phân loại)   Nếu để trống sẽ xoá thuế suất trong dtb_tax_rule   Một số lưu ý:      Không lưu lịch sử như thuế suất chung.   Khi đăng ký/chỉnh sửa sản phẩm, thuế suất riêng luôn được cập nhật.   Khi chỉnh sửa đơn hàng:            Dòng chi tiết có thuế suất riêng luôn được cập nhật với giá trị mới nhất.       Nếu thuế suất trên sản phẩm bị xoá, sẽ áp dụng thuế suất cơ bản.           Về loại hình bán hàng   Có thể thiết lập loại hình bán hàng để phân tách phương thức thanh toán theo từng loại hình.   Nếu thêm các sản phẩm thuộc loại hình bán hàng khác nhau vào giỏ cùng lúc, giỏ sẽ được tách riêng theo từng loại hình. Người dùng sẽ tiến hành đặt hàng cho từng giỏ riêng biệt.   ","categories": [],
        "tags": ["spec","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/spec_order",
        "teaser":null},{
        "title": "Thiết lập phương thức thanh toán",
        "excerpt":"Tại Cài đặt -&gt; Cài đặt cửa hàng -&gt; Thiết lập phương thức thanh toán, bạn có thể thiết lập phí và điều kiện sử dụng cho từng phương thức thanh toán. Số tiền điều kiện sử dụng được xác định đã bao gồm phí thanh toán, nên cần thiết lập điều kiện bao gồm cả phí.   Ví dụ thiết lập tăng phí theo từng mức tiền      Ví dụ: Khi mua sản phẩm giá 10,000 yên, phí 330 yên ở mức 1 sẽ được áp dụng, tổng số tiền thanh toán là 10,330 yên. Khi mua sản phẩm giá 10,001 yên, phí 440 yên ở mức 2 sẽ được áp dụng, tổng số tiền thanh toán là 10,441 yên.   Ví dụ thiết lập giảm phí khi vượt quá một mức tiền nhất định      Ví dụ: Khi mua sản phẩm giá 10,000 yên, phí 330 yên ở mức 1 sẽ được áp dụng, tổng số tiền thanh toán là 10,330 yên. Khi mua sản phẩm giá 10,001 yên, phí 0 yên ở mức 2 sẽ được áp dụng, tổng số tiền thanh toán là 10,001 yên.  ","categories": [],
        "tags": ["spec","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/spec_payment",
        "teaser":null},{
        "title": "Thiết lập thuế suất",
        "excerpt":"Đã xác nhận có lỗi không áp dụng được thuế suất riêng cho từng sản phẩm trên EC-CUBE4.0.3. Vui lòng xem chi tiết tại đây.   Thiết lập thuế suất tiêu chuẩn   Tại Cài đặt -&gt; Cài đặt cửa hàng -&gt; Thiết lập thuế suất, bạn có thể thiết lập thuế suất tiêu chuẩn. Thuế suất tiêu chuẩn sẽ được áp dụng chung cho tất cả sản phẩm. Mặc định ban đầu là 8%.      Bạn có thể thêm mới thuế suất tiêu chuẩn. Có thể thiết lập thời điểm áp dụng và mức thuế suất.      Khi thêm thuế suất tiêu chuẩn, sau thời điểm áp dụng hệ thống sẽ tự động chuyển sang thuế suất mới. Thông tin đơn hàng trước thời điểm áp dụng sẽ giữ nguyên thuế suất/tổng thuế tại thời điểm đặt hàng, không bị thay đổi ngược lại.   Thiết lập thuế suất riêng cho từng sản phẩm   Đã xác nhận có lỗi không áp dụng được thuế suất riêng cho từng sản phẩm trên EC-CUBE4.0.3. Vui lòng xem chi tiết tại đây.   Khi bật chức năng thuế suất riêng cho từng sản phẩm tại Cài đặt -&gt; Cài đặt cửa hàng -&gt; Cài đặt cơ bản, bạn có thể đăng ký thuế suất theo từng sản phẩm (chính xác là từng phân loại sản phẩm).      Ví dụ đăng ký sản phẩm không có phân loại    Ví dụ đăng ký sản phẩm có phân loại    Khi chức năng thuế suất riêng cho từng sản phẩm được bật, sản phẩm có thiết lập thuế suất sẽ tính theo thuế suất đó, sản phẩm chưa thiết lập sẽ tính theo thuế suất tiêu chuẩn.   Lưu ý khi áp dụng thuế suất giảm nhẹ   Từ tháng 10/2019, thuế tiêu thụ tăng lên 10% và bắt đầu áp dụng chế độ thuế suất giảm nhẹ. Khi áp dụng chế độ này, các mặt hàng như “thực phẩm, đồ uống” sẽ áp dụng thuế suất khác với các mặt hàng thông thường.   Thông tin về chế độ thuế suất giảm nhẹ: https://www.nta.go.jp/taxes/shiraberu/zeimokubetsu/shohi/keigenzeiritsu/index.htm   Khuyến nghị thiết lập thuế suất tiêu chuẩn và thuế suất giảm nhẹ   Nên thiết lập thuế suất tiêu chuẩn tại Cài đặt -&gt; Cài đặt cửa hàng -&gt; Thiết lập thuế suất và thiết lập thuế suất giảm nhẹ bằng chức năng thuế suất riêng cho từng sản phẩm. Ngay cả khi chỉ bán thực phẩm, phí xử lý và phí vận chuyển vẫn tính theo thuế suất tiêu chuẩn, nên khuyến nghị thiết lập như trên.   Về giảm giá có thuế và không thuế   Có hai loại giảm giá: giảm giá có thuế và giảm giá không thuế.   Giảm giá có thuế dùng khi giảm giá trực tiếp trên sản phẩm. Số tiền giảm giá đã bao gồm thuế sẽ thay đổi theo thuế suất của sản phẩm, nên cần thiết lập thuế suất cho giảm giá.      Giảm giá không thuế được coi như phiếu quà tặng, dùng để thanh toán một phần đơn hàng. Số tiền giảm giá này không tính vào thuế tiêu thụ. Chức năng điểm thưởng mặc định của EC-CUBE và plugin coupon chính thức đều xử lý giảm giá không thuế.      Trường hợp vận hành theo giá đã bao gồm thuế   Nếu vận hành theo giá đã bao gồm thuế (thiết lập thuế suất 0% tại Cài đặt -&gt; Cài đặt cửa hàng -&gt; Thiết lập thuế suất), hệ thống sẽ hiển thị “Đối tượng thuế suất 0%: xxx yên”. Nếu không cần hiển thị, bạn cần chỉnh sửa template.   Vấn đề liên quan   Một số issue liên quan đến chức năng thuế suất đã được đăng ký. Vui lòng kiểm tra thêm:      https://github.com/EC-CUBE/ec-cube/issues/4183  ","categories": [],
        "tags": ["spec","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/spec_tax",
        "teaser":null},{
        "title": "Về lỗi không áp dụng được thuế suất riêng cho từng sản phẩm",
        "excerpt":"Về lỗi không áp dụng được thuế suất riêng cho từng sản phẩm   Khi tăng thuế, thêm thiết lập thuế suất cơ bản 10% hoặc áp dụng thuế suất giảm nhẹ, nếu thực hiện thiết lập thuế suất riêng cho từng sản phẩm theo một trình tự thời gian nhất định, có thể xảy ra lỗi không áp dụng được thuế suất riêng khi mua hàng.   Vui lòng kiểm tra lại các trường hợp trong mục “Trường hợp bị ảnh hưởng” bên dưới để xác định xem bạn có gặp phải lỗi này không, và nếu có, hãy áp dụng các bước trong mục “Cách khắc phục lỗi”.   Nội dung và đối sách của lỗi   Nội dung lỗi   Nếu bạn sử dụng EC-CUBE phiên bản 3 hoặc 4, khi thiết lập “Thời điểm áp dụng” cho thuế suất cơ bản, nếu thực hiện thiết lập thuế suất riêng cho từng sản phẩm trước thời điểm này, khi mua hàng sẽ áp dụng thuế suất cơ bản thay vì thuế suất riêng.   Trường hợp bị ảnh hưởng   Lỗi này xảy ra khi đồng thời thoả mãn tất cả các điều kiện sau:      Sử dụng EC-CUBE phiên bản 3 hoặc 4   Đã thêm thiết lập thuế suất cơ bản   Đã thực hiện thiết lập thuế suất riêng cho từng sản phẩm trước “Thời điểm áp dụng” của thuế suất cơ bản vừa thêm   Ví dụ, nếu thiết lập “Thời điểm áp dụng” thuế suất cơ bản 10% là 2019-10-01 00:00:00, nhưng thực hiện thiết lập thuế suất riêng cho từng sản phẩm trước thời điểm này, lỗi sẽ xảy ra như hình dưới.      Cách khắc phục lỗi   Khi mua hàng, hệ thống sẽ lấy thuế suất áp dụng cho sản phẩm dựa trên trường “apply_date (thời điểm áp dụng)” trong bảng “dtb_tax_rule”.   Thuế suất có “apply_date” mới nhất và không vượt quá thời điểm hiện tại sẽ được ưu tiên. Thuế suất riêng cho từng sản phẩm sẽ được đăng ký với “apply_date” là thời điểm thực hiện thiết lập. Nếu “apply_date” của thuế suất riêng mới hơn “apply_date” của thuế suất cơ bản, lỗi sẽ được khắc phục.   Xem chi tiết về lỗi tại đây.   Cách khắc phục lỗi   ※ Nếu bạn đang sử dụng phiên bản không phải mới nhất, vui lòng nâng cấp lên phiên bản mới nhất trước.   Cách khắc phục bằng thao tác trên giao diện quản trị   Cách thiết lập thời điểm áp dụng thuế suất cơ bản trước khi thiết lập thuế suất riêng cho từng sản phẩm         Mở màn hình quản trị “Cài đặt cửa hàng/Thiết lập thuế suất”, nhấn nút “Chỉnh sửa” ở thuế suất cơ bản đã đăng ký.   Đổi “Thời điểm áp dụng” thành giá trị trước thời điểm thực hiện thiết lập thuế suất riêng cho từng sản phẩm.   Nhấn nút “Lưu” để lưu thiết lập.   Cách thiết lập thuế suất riêng cho từng sản phẩm sau thời điểm áp dụng thuế suất cơ bản   Nếu “Thời điểm áp dụng” của thuế suất cơ bản là 2019-10-01 00:00:00, hãy thực hiện thiết lập thuế suất riêng cho từng sản phẩm sau thời điểm này theo các bước sau để tránh lỗi.   Khi đó, “apply_date” của thuế suất riêng sẽ mới hơn “apply_date” của thuế suất cơ bản, nên thuế suất riêng sẽ được ưu tiên áp dụng.         Nếu đã thiết lập thuế suất riêng cho từng sản phẩm, cần xoá thiết lập đó trước. Trên màn hình chỉnh sửa sản phẩm, xoá giá trị ở trường thuế suất.   Nhấn nút “Đăng ký” (lần 1) để lưu thiết lập.         Sau khi lưu, nhập lại giá trị thuế suất riêng cho từng sản phẩm.   Nhấn nút “Đăng ký” (lần 2) để lưu thiết lập.   ※ Trên EC-CUBE4.0.3, nếu có nhiều sản phẩm cần thiết lập thuế suất riêng, bạn cũng có thể thực hiện khởi tạo và đăng ký lại thuế suất riêng bằng chức năng “Đăng ký CSV sản phẩm”. Tuy nhiên, mặc định trường thuế suất trong CSV sản phẩm bị ẩn, nên cần vào “Cài đặt cửa hàng/Cài đặt trường xuất CSV”, chọn loại CSV là CSV sản phẩm và thêm trường Thuế suất vào mục “Trường xuất”.   Cách khắc phục cho kỹ thuật viên   Cập nhật dữ liệu bằng SQL   Ví dụ dưới đây giả định “Thời điểm áp dụng” của thuế suất cơ bản là 2019-10-01 00:00:00. Khi cập nhật bằng SQL, hãy kiểm tra kỹ giá trị và điều kiện trước khi thực hiện.   Nếu dùng MySQL, hãy thiết lập time_zone phù hợp với môi trường trước khi cập nhật.   Ví dụ: Đổi time_zone sang JST trên MySQL   SET time_zone = '+09:00';   ・Cập nhật theo ID tuỳ ý   UPDATE dtb_tax_rule SET apply_date = '2019-10-01 00:00:01' WHERE id = [id tuỳ ý];   ・Cập nhật các bản ghi có “product_class_id” khác NULL   UPDATE dtb_tax_rule SET apply_date = '2019-10-01 00:00:01' WHERE product_class_id IS NOT NULL;   ※ Theo mặc định của EC-CUBE, các bản ghi thuế suất riêng cho từng sản phẩm sẽ có “product_class_id” là ID của phân loại sản phẩm.   Cách khắc phục cho EC-CUBE 3.0.x   Lỗi này cũng xảy ra trên EC-CUBE 3.x. Ngoài các cách khắc phục trên, cần sửa mã nguồn (nếu không sửa mã nguồn thì thuế suất riêng sẽ không được áp dụng).   File cần sửa:  src/Eccube/Repository/TaxRuleRepository.php Diff code:  https://github.com/EC-CUBE/ec-cube/pull/4310/files#diff-9ebf9d0c89cef624ee2648733e557603 Sau khi sửa, hãy xác nhận lại rằng thuế suất riêng đã được áp dụng đúng khi mua hàng.  ","categories": [],
        "tags": ["spec","getting_started"],
        "url": "https://thanpd-ptit.github.io/doc4-ec-cube-vn/workaround-product-tax-rule",
        "teaser":null},]
